%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: dotted-map-and-flag-comp_Switzerland.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Rixwan
%%CreationDate: 4/25/2018
%%BoundingBox: 0 0 800 800
%%HiResBoundingBox: 0 0 799.9996 800
%%CropBox: 0 0 799.9996 800
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-04-25T12:24:50+05:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-04-25T12:24:51+05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-04-25T12:24:51+05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEB9AH0AAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAB9AAAAAEA&#xA;AQH0AAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9K4q3irsVbxVvFXYq3ir&#xA;eKuxVvFW8VdireKuxVvFW8VdireKt4q7FW8VbxV2Kt4q7FW8VdireKt4q2DirsVbBxVK8VdireKu&#xA;xVvFW8VdireKt4q7FW8VbxV2Kt4q7FW8VbxV2Kt4q3irsVbxVvFXYq3irsVbxV2Kt4q3irYOKuxV&#xA;K8Kt4FdireKuxVvFW8VdireKt4q7FW8VbxV2Kt4q7FW8VbxV2Kt4q3irsVbxVvFXYq3irsVbxV2K&#xA;t4q3irYOKpVireFW8CuxVvFXYq3ireKuxVvFW8VdireKt4q7FW8VdireKt4q7FW8VbxV2Kt4q3ir&#xA;sVbxV2Kt4q7FW8VbxVK8KuwK3hVvArsVbxV2Kt4q3irsVbxVvFXYq3ireKuxVvFXYq3ireKuxVvF&#xA;W8VdireKt4q7FW8VdireKuxVvFUrxVvCrsCt4VbwK7FW8VdireKt4q7FW8VbxV2Kt4q3irsVbxV2&#xA;Kt4q3irsVbxVvFXYq3ireKuxVvFXYq3irsVSvCreBW8KuwK3hVvArsVbxV2Kt4q3irsVbxVvFXYq&#xA;3ireKuxVvFXYq3ireKuxVvFW8VdireKt4q7FW8VdireKpXih2FLeBW8KuwK3hVvArsVbxV2Kt4q3&#xA;irsVbxVvFXYqsuLiK3gkuJm4wwo0kjUJoqipNBU9BiqRt+YHlFbF75tQH1VLS21B39KYkW165jt5&#xA;OITl8bKRSlR3AxVN7LVLG9mvIbaX1JLCb6tdrxZeEvprLxqwFfgkU1G2KovFXYq3ireKuxVvFW8V&#xA;direKt4q7FW8VdiqV4VbwIdhS3gVvCrsCt4VbwK7FW8VdireKt4q7FW8VbxVQ1AyCwuTEZRKIn4G&#xA;AIZuXE09MSfBzr9nltXrirCJZ9d/RUkqHzL6w0nTSI0j0/1/VMzepxDjh9b4/wC9A+wF+zvTFU8s&#xA;9Sv7TUbxHtNVvY7vVRbxvKlv6NvGbVH9WLiyN9VDLTk1W5k7YqmOpazPZXQgj0u8vVNrcXXr26xm&#xA;PlBxpb1d0Pqy8/3YpQ0O4xVDN5nuV9YjQtSZYks3UiOKr/XH4sFHq1rbdZq9B0riqe4q3ireKuxV&#xA;vFW8VdireKt4q7FW8VSvFDsKW8CHYUt4Fbwq7AreFUPqNy9rp91cp6fOCJ5V9eT0YqopYepIQ3Bd&#xA;t2oaDfArA9YeC8XUbq+h0tmurDRpLknWpoYyTdMwqVUCOJWYmKRR++Pw99lUVHDZ/pxPUisOQ8xy&#xA;PG36WmMnqnTyOfpEU9fjt9V+yF+L3xVPtG81Wc2kwXGrXum2t5JDPdSx214k8Agt5CjzJKwiLRp8&#xA;PNuNFJocVX6v5lgggP6MutPuLuOezS4iuLtYVSK8lVVYlRIeUiEmJSPjPTFULD5o1GW9t4B+ijHJ&#xA;qF7Zy8dQDShLVHaPigj3n+EerFX92N6nsqgv8bar+jBej9CU/Qw1Kv6VHpevz4/3npcfqtP939OW&#xA;1O+Koa9js21m8aWLT2565pkgdtXmST1RBHwYw04rKKARW4+GUbn3VVNKv2trEaZGmmLb30mtNKo1&#xA;eWRy0UzN+7kZGkqTIxn4kej/AMLiqUTQWJ0aalvpXqjQ9HUqdduEjMaXDFFMqgssCn+7n6yn4Tti&#xA;qaPBaNrzMkNirr5lR3P6XmWQyfo8DmYVFPX47fVT8JX4vfFUvtoNPbS7YC30tLcaTrq8V12d0CPc&#xA;D1AJKfHE3WWY7wnYUpuqrXUNgyXZkt9M9P0fL4VW1udQeFxyjDmlECt/csP787HwxVOdH1KSxv5r&#xA;eBNNQajrd5HMP0o8sh4W5k5JHIjcZyYx6lumyLVvHFU00bzZYTaNbXWrX2m2t49mb66jt7yOaBIF&#xA;bi8ySsI+UKmgL8eIO1cVT5WVlDKQysKgjcEHFV2KuxVvFW8VdireKt4q7FUrwq3gQ7ClvAh2FLeB&#xA;W8KuwK1JHHJG0cih43BV0YAggihBB6g4VYn5k0v6ha392sllbac8em2sEI0s3bR+hdUoyRNylSkg&#xA;WNeIER+PxwKhYp411pVNzCwPmKRFQaPKGD/UCTGJunP9o3fQj4MVSuO5g/QUIe8t2U6DqjLL/h+d&#xA;F9MTIOfon7KIKA23+7ftdKYqjr24Uz3itdwrMs2hVc6HOxq0o41JrzMjbKR/vP333xVWs7hG1ez4&#xA;XMPMaxqqFBosyFisUlUE3RWX9qfpN0GKpULuD/D5kW8t/S/wwrP/AM69Px4+oQJfR/339qlp/s/s&#xA;4qm1zcRrq13W5h4nW9NUxHRpnKu0EdFM3Rnb4SLg7Qj4T2xVQs7iEGzU3cDqza9wI0KdfsynkB/v&#xA;v0zUPX/entviqBubu3fQpjJfWpi/QWkOZ28vzyKVaduMhhH2kf8AZt+sX2vHFU1lngOu8XubdSPM&#xA;iIinRpSxf9Hg+n6x29Tjv9bGwHw9NsVS6K6tzYW8hu7X1P0RrjAf4fnQFVuBzcRH40VDQPB1nPxd&#xA;xiqJubyGt4Wu4C6w6BVToM7cOdxVKr9pxIx+Ba/6Od+uKoy1uEGtQL9ZheVtfvVA/Q0yNUWTn0/W&#xA;6B1Tf610kHwDFUpS5h/w8oF9b/8AKNXTtP8A4dnVePqqGk9A/sDflaUq32+mKs20HUJ7jVdVtWuv&#xA;Whs/qoig+pS2oh9S3V2AlkJWYNXlRf7v7Lb4qnuKt4q7FW8VbxV2Kt4q3iqVYUN4pbwIdhS3gQ7C&#xA;lvAreFVK6mlhtZpooWuJY0Z47dCoaRlBIRS5VQWOwqQMCpQ3mLVRC8i+X7xmWCzmWMSWoZnupOEs&#xA;IrNx526/E9TQ/sk91UBHDqf6VQmLWPS/Tcj/ABXNt6Po/UyAxUNy+p8/sxfb5/FSm2KpWlrrKaPG&#xA;jQeYqnRtRB531obgSvKrRqzhyPrRX+4krxRdjviqMu7bVfUuk9HXQvq6N6bx3lqtQsg9Xh8eyrT/&#xA;AEqv950XbFVW2g1Q6lamSHWlRdV1Fub3dqYTE0cnpmRA3Jrck/6PHTkhALdN1Ut+ra4dG/3n8xC5&#xA;Hl4R8Pr9n6xn9Tpz5cfrtBUzU48dvtbYqmdxBqn6TupI4daMbatp5ot3bCERCGMSMiFyy2yk/v4/&#xA;tO1StRiqHs4NX52tINf4CTWvVEl5aN9qQ+jz+PcHpa8T+7/a23xVCy2+snRpKQeZGro+mKqpfWYu&#xA;PVWZjIFcuP8ASgv9/ITxddhv1VTOSHVP0xVotaMZ11XQrdWwg9D6kBy4Bg31Ll1iPx+p8XtiqBit&#xA;9aFjCrweYhONM1hSGvbMyCRpx6Qdlbgbgj/eZ6cUXZu9FVa4t9ZJugkPmD1fT0WnG8sxUrN++9Or&#xA;FVYD/eqtPUGy+OKoq0i1P9JxfuNbEX6bvGkeW7tmhEJtnCMUDFjaFv7qP7avQmndVLVtda/QKxmD&#xA;zGpGgXCcjf2ZuTOZFKqZQ5H1ziKpN9gL132xVm+m6e1vPcXbXN1IbwQk2tzIrpAY4whEYXZS3V/i&#xA;ILbjFUfirYIIqOmKt4q7FW8VbxV2Kt4qleKuwobxS3gQ7ClvAh2FKHvdT06xNuL25itjdzLbWvqu&#xA;E9SdwSkSV6u3E0GBWO6x5n069QW1nf6RcaZe2Wpet9ZuipdrTjG4XgCDFGxcTtWq9sKscnGgHT7k&#xA;mPy4Iv0ZoPNWu5RF6S3BMIkYLtACf9GalXP2hSgwKmUI0f8ATiELonqf4kmI43Mhm+sfo9lJC04/&#xA;Xafaj+zw3+1viqURL5e/w/Dxj8tGE+XtVCol5MbcQNMnqBW41+qV/vnoGVtlxVGagnl9Jb5ZE8vG&#xA;L1vL/IPcyAjjIPR9SgIBAH+iAbN+1tXFVa0GiDWrLkug+t+m9XMLJcSG4Exhk9XipG9zQ/6QpPFV&#xA;6dqKpRw8u/4f4FPK4I8pqqn63N6BtvWpx5U5/UedP3leZfbFU2uxoj65ekpoKzDXdIZ2a6lE7S+h&#xA;H6XNFCj6zT/edK8WHXviqHsRoBayZY/LiqsnmIqiXctDWQ+vwqoBqP8AeqoPD9nbFUFcDy6PL0zv&#xA;F5ZNufL+jK0Ut5MLf0RcN6Ydippahj+4fjyZ9m7YqnMq6MuvksmhPK3miMgtcy+uLj9HAA8SGX67&#xA;xFBH9nh/lYqlkCeXxplsgTy0V/Q2vhJEvJjGIjcfvQjU5G3Jr9ZavJWrx2BxVXuk0A/XkKeXARF5&#xA;c9SRruYAhZ6w+qQBRR/x67/Htz2xVGWQ0Q63AyJoKyJ5j1IkR3Upmaf6m4kYLxC/XCp/fIaqqbje&#xA;mKpPCPLTeV0rH5XFt/hW6AiS7maD0DOvIcgoY2XMfE9OYfYYqy6XzbNazzW8d7occMN5pdnbwm6c&#xA;Osd4qFo2AWnquGP1YAUYUJpiro/NtxPNb2c99ocgu7nVbZ4luXLNHY8+KqpX4pIwB9ZU0C7kVxVL&#xA;9P8ANLaT5Yt4LK88u29vZaBaXdsv12VbdCzel6lWVm+p0AEbn4i2x61xVmLeZ/LqXLWr6nbLcpdJ&#xA;YPCZUDC7lj9WOAiv948fxKvU4qx+386XksUDHUNC/eQatKXW8coxsJgkbIeArHGv+9J/YPSoxVM/&#xA;LnmK41O+MElzpsy/o6xvAljcNNLzug5dyGVf3DcR6LdW3r2xVkWKt4q7FUrwobwJdhQ3ilvAh2FK&#xA;F1XUotM06e/limnjt15tFbRPPMw6fBFGGZj8hgVjlzf37apJGby+9FNatoo0/RfNFia1VzEspTeF&#xA;nNWuP2D8Ne+KoO3vL0xW/K9v6GDWizHRuLEpOPTLL6Z4Mi/3aU/f9Tvtiq2W91D6pM5vL8SCw0Zl&#xA;K6NyYO1webBOB5O9aSRf7oHxDfFUdHdXh1dAbq8I/TskZQ6XRPTFiaR+rxqIq7i6rufg6YqlqX2o&#xA;nRo3+u6gZDouoyM7aIFf1RKoV/RKLSVdwlv0lHxHxKqNu7y9E92FvL4IJ9GpTSOdA8i+pxJQc+YH&#xA;71qfuPY7Yqvtby+Gp2iNd3zxNq2pKVOlBECJHJwQyhPhiU/YnG8x2rucVSk3+pHQd7/UiP8ADfqe&#xA;odBXn6vqcfU9Hhx9Wm31Tjx4/F03xVNLq7vv0rdIbu9ES6xpqxKNIDpweGMuglKHnG5/vJ9jCdtq&#xA;DFVKzvdQMlmz3l/z9TXKA6Lw5BJSY+VFJTgP7o1H1jvvtiqEkvtTXR5ZFvdRFwNF0t6roQZxI07B&#xA;3EIX4pGGz29aRD4h3xVNGu71daZY7q9KHzAkbp+iQUERsBWP1uKn0eW/1rcg/B9nFUvhvdQ/R8FL&#xA;3UCh0vWWaRtDCvzWccGMfAcZEA/dwcf34+I9qqq1ze39LofXb8RrHoRjYaKGNXn/AHhUFDzL/wC7&#xA;F4/6P1G+Koq2u75tWtxJd3vEa5fRqh0gIhjW1fihl4njEp3S5BrIfh6E4qlS3+qnQFkN7qJuf8OX&#xA;D1OgKH9QSqBJ6HGnrU2Fpy4sPi6b4qmt3f3wvrwC7vz/ALkdIRVXSA6IjrGzqHKfHG+5klrWA7bU&#xA;piq+yu78XlkDe3zk32rhg2kcFKIXMYZ1QcFj29KSv7/3J2VQDX2ojQ3IvtRD/wCHrR2caEC4kLsG&#xA;kEIShmI2a13CDemKprPdXg1edBdXgi/TlsnEaVyQRmzUmMTcPihLD4rn9g/BWlDiqEtr2+MNvyvd&#xA;QINvrZZjo3FiUuB6bMvp/CyL/dpx/wBI+0RXbFU38r3N3LqTCe4upf8AcVpz8J9P+ppzb1S7+px/&#xA;vG/bgr+6/wBkcVZPireKt4qlWKt4UN4EuwobxS3gQw7zNDcXM2qzWtvd3EMukxenJa6qLNJCZnbj&#xA;EocCF+O/r7Bh8Ndjilua1vDqszi1vTH+m7V+Q1TivAWiAyCLn8MSsfitv2z8dCKDFULb2d6IrflZ&#xA;ahQQa0GU6zyYF5x6YZvUHNnX+7ev7jod98ValstQ+qTIbO/MhsNGVQus8WLrcHmofmOLp1kl/wB3&#xA;j4RviqOjtbwauhNreAfp2SQudUqnpmxNJPS5VMVdha02Px9MVS1LLURo0afUtQEg0XUY2RtbDP6p&#xA;lUqnrF2rK25S46RD4T4BVG3dpema7K2d8UM+jUpq/CoSRfU4gueHAH96tf3/ALnfFV1raXp1O0Zr&#xA;S+SJdW1Jix1UOhR45ODmIP8AFEx/u4BvCd6bHFUpNjqQ0Hew1ID/AA36fpnXl5+r6nL0/W58fVpv&#xA;9b5cePw9NsVTW6tL4ardMbS9MbaxprRMNXCJwSGMO4iLjhGh/vINzKd96jFVGzstQElmr2d/z9TX&#xA;KE61z4h5SI+VGBfmP7oUP1fvvviqEksdTbR5Y1stRNwdF0tKLroVzIs7F0Ewb4ZFG73FKSj4R3xV&#xA;NGtb1taLR2t7wHmBJHf9LAIYhYCsno8mPo8tvquxJ+P7OKpfDZah+j4KWWoBBpesq0ba4Gfm044K&#xA;ZOZ5SOD+7n5fuB8J7UVV7mzv6XR+pX5jaPQhGo1oKapP+8CkuOBT/djcv9I6DfFUTbWl8urW5ktL&#xA;3idcvpFc6uHQRtavxcxchyiY7JbAVjPxdAcVStbHVBoCxmy1EXP+HJ0odfUv6hlUiP1+VPWpuLvj&#xA;xUfD02xVNbyxvjf3hFpfj/cjpDqy6uER0RY1chC/wRpuJIqVnO+9a4qvsrW+N5ZE2V8hF9q5Ytq/&#xA;NQjlxGWRXPNZNvSjp+49iN1Uvay1E6G4FjqJb/D9ohQa6A5kDsTGJg9BMBu11sHG1cVTWe1vDq87&#xA;i1vDF+nLZ+Q1XihjFmoMgh5/DCGPxW37Z+OlKDFVPSdMuZprCCe3v4IZI9YjlkOrtM0YluVCFgj8&#xA;pGZd42BJg+z13xVmNjaraWVvaI8kq28aRLLM5klYIoUM7t8TMabk9TiqvirsVbxVK8KHYEt4UN4E&#xA;uwoUrvgbScSFAnptzMo5R04mvMVFV8cUvL3fy8fLzsz+WvS/w1Zt8VnMYDAZmK/CW5fU+Q/dx/bD&#xA;7nsCFTi4bRv03PyfQ/VHmKzBV7aQz+ubJeAZuVPrfE1ikHwhNutaKoO1bQRBaFX8usv1bzBwVLSU&#xA;KFFwBNwHI0jB2uh+2fs7YqsnOgDT7kGTy6Yv0ZoPNmtJTF6RuCITIobeA0/0Za1Q/aNKHFUyhbR/&#xA;04gDaJ6n+JJh8NtIJvrH1BmIDV4/Xafak+zw2+1tiqURN5f/AEBDxk8tCEeXtUKulnMLcwCZPUKr&#xA;yr9Ur/fJUszbriqM1CTQHlvmkfy8IvW8v8i9tISeUg9H1KEAkg/6KRsv7W1cVV7Q6IdasuTaD636&#xA;b1cQqlvILgzCGT1eLE7XNB/pDEcWXp2qqlHPy7/h/mX8rknyorKPqk3oC29avLjXn9R50/d05h98&#xA;VTa7Oiprl6C+gtMdd0hXVrWUzrL6Efpc3UsPrNP953A4qOvfFUPYtoAayVZPLrK0nmLi6WktBSQ+&#xA;vwqxAoP96qkc/wBnbFUFcN5dPl6ZHl8si3Hl/R2aWWzma39E3DemXUsK2pYfuE5clfdu2KpzK2jN&#xA;r5DPoSSr5njADW0vrm4/R4IHIlV+u8TtJ9nh/lYqlcD+Xzpls4fy0F/Q2vlI0s5hGYhcfvSi15C3&#xA;Br9ZWnJmrx2JxVXun0EfXnLeXDWLy56kbWkxADT0h9UAmqn/AI9dvg257YqjLJtEXW4Aj6C0j+Y9&#xA;SBMdrKJln+puZFDciv1wKP3zmismw3piqUQny2vldCZPK5tv8LXREiWkywegJ15HiGLCy5/aSvMv&#xA;uMVTfUDoI1G8WV/L4YapofFntpDJ6hSP0Q5DU9bj/vKQaItOW1cVdZnQ21LTvi8vC5+v6+IeFtIH&#xA;ZhzE/psxAEg/4+2NQ2/HFUueXy43l+TlJ5Y4jyvYuwazmaH0GlYoSpYP9SLD91HTmG3PYFVO7ltG&#xA;/T1zyfQ/XHmOzBV7aQ3HrmxXgGblQ3nE1jkA4hNutaKobSrvSLX6hdWk/l+OaC31+W2kgtZk9Mx3&#xA;QMjRUaqorD/Su7N9jbFWfaLdveaNYXbzxXL3FvFK1zbhlhkLoGLxBizBGrVamtMVRuKt4q7FUrxV&#xA;vCh2BLeFDeBKTa1JeLq2lrDJfpCwuvWFnFDJASISU+sNIrOlDvFx2L7NtihjRuNb/Qzt6/mES/oO&#xA;2dSLOyM/rmRuTBOJX63TaSI/AF6b7hSmU02pjU5QJdZCDWbZVVba1MPom1UuquVqbQmvqSV5h/hX&#xA;3VQ1vcaz6dufW14yehrBfnaWYbksw9Iv8PEOP+PULs67tirUk+ri0mKT6/UWOkFWW0tDIHaciUop&#xA;ShmK/wC9KkcUXdd6DFUbHNqf6VQGXWPS/TUifFbW3o+j9TJClgvL6nz+zL9vn8Nab4qlcd1rD6PG&#xA;7T+YqjR9RJ52NoLgypKqxsyBAPrQX+5jpxddzviqMu7rVfUun9bXOPq6P6aR2dq1A0g9Xh8G6tX/&#xA;AEqv93+ztiqrbT6oNStRJNrTI2qaivBrS2EIiWOT0xI4XktuCP3EleTkgN12VS76zrY0b/ejzEbk&#xA;+XxJz+oWfrCf1OvDjx+u0NDDXjx3+1viqZTz6n+k7qNJtaEa6tYCq2lsYTEYYzIqOU5NbMR++k+0&#xA;jVC0GKqFncatztf3+v8AAya16pks7RfsyH0ufwbAdbXiP3n7W22KoWW41kaNJSfzGtNH0xlZLGzN&#xA;x6rTMJCqFD/pXH+/jI4ou436KplJNqn6Yo0utCMa6qIFtbYweh9SB48wpb6ny6yn4/U+H3xVAxXG&#xA;tGyhZ5vMRnOm6ux5WVmJDIs49IuqrwFwB/vMleLru3eqqtcXGsg3RWfX/V9PRacbOzNC037706qF&#xA;ZiP96q19Mbr4YqirSbU/0nF+/wBaMX6avFkSW1thCYRbOUUuFDC0Df3Un22egNeyqXLd6z+gllM/&#xA;mNidAuH4mws/rInEihWMYQD65x2SH7BXrvviqYXlxqq3l0BPrbRG/wBKEYjtLVkCsE9UIeHIwsRW&#xA;5c7oa8KUpirrWfVfrlnG8+uUa71erPZ2oj4IX9ISsEJWJa/6M3WTblttiqBa61w6PJxuPMS3A0Gz&#xA;fkthZ+sZjI3MhSpX64RtJFXgqmvXfFWWvouotdvOutXSRtex3a24S34LCkIja1qYuXpyN8ZNeVeh&#xA;GKt2Gi6jbXFrLNrV1drB9a9WKVLdVm+syiSPn6cSEego4JwpUfariqbigFBsBireKt4q3iqVYUN4&#xA;Et4UOwJSC88w6lBe3cMcFi0Vvd2VsjyXyxyFLor6jPH6Z4OvP93GWrJ2ptUoQE17NqGpabPc29oG&#xA;gudTt4mi1V1osSPGrelGqrK7Kp5qamHr1rgSkjWsA0FlNpbcW8u2iKn+ILgKFErUT1gKiMV2uhu/&#xA;2emKvS12A/28KrLq2iurWa2l5CKdGjk4M0bcXBU8XQqymh2INRgQwjWNNs7WTU7WG3ieC3tNIhUz&#xA;azcW7skV0wQSD4jDxAqslazH4T3xSqxQRtrKsbaFQPMMjq41iUsX+oEGQQ9Of7JtOgHx4qlUdtB+&#xA;goS1nbqo0HVFWL/EEzr6ZmQ8PWP2kcUJuf8AdX2elMVR17br694zWkLTNNoVUOuTqarKONa04GNt&#xA;1A/3o777YqrWlui6tacLaHmdY1V+Y1mZypaKSriHozN+1B0h6jFUqFrB/h8xrZ2/pf4ZVX/52Gfj&#xA;x9QkRet/vv7VLv8A2P2cVTe5t421W7rbQ8RrWmsZDrMyFnWCOjGHorr8IFudph8R7Yqv0TR2u5bG&#xA;Q2AWzim1mOaeHWLif0/rE5WtFoJDKQx4lh6B2XfFWRzeWNIm8ux+XpFl/RkUUUCIs8yy8ICpQeur&#xA;iWvwCp5b98VYzLBANc5PbW7E+Y0dGOsyhg/6PA9T0Tt6nHb6p0I+LpviqWxW1uLC3ja0tfU/ROuK&#xA;D/iCd6K1wOaCU/G6uaF5+sB+HsMVRNzZw1vA1pAGaHQat+nZ158LiiVb7SCNvsN/x8HbriqNtLeM&#xA;63AzW0SSLr963IaxNI1TZuPU9Hozsm31XpGPiGKo/VPJdhbaDdR6Za3F7cx6XNptrZSajdwiWKQ8&#xA;yjTF3KuzCnq/aA2rTFVC70DUWvLqRNJMqTX+lzc/0tcrVbYIJJuFOK+hx/uxtNSrb4q1b6Dfw3Vo&#xA;8mlFIIrvV55Jzq90fTW55+nLxIo3r8j8P+6a1XfFUkktYToTxmztwn+HLFU/52GdFKiViI/WXcIv&#xA;/LX1f7PTFXqOKt4q7FW8VdireKpXirsKG8CW8KGD6tNajWdS5y2QkXUtIUrJpM00gLFeAaYGkrtX&#xA;93KNoe+BKnZTWv6QsyktiZGv9ZUKujzq9V58wr1+B1p+9k6T9F3woUNLs01SxSwsZtKaa68v2np8&#xA;9FlSEoZH4uyuyL6B342xNVPxdNsCWdWMOpx3F4bu4imtnkU2EcURjaKIRqGR2LvzJkDNUAbGmKEZ&#xA;hSxzzpa6VDot5fTR2cUsrWkVxd3Vkb5WRLpDGkkSUkkAZzw3+Bjy7YFSiOa0/TiepLYcj5ikSNf0&#xA;VMJPUFgTx9Umnr8d/rX2Svw+2KpVFc2I0SF2n0sudB1WRSuhXCJ6YnXmwhJLrCtQJbfrIfiGKo68&#xA;ms1mvVE2m+sJdBEtdGnaheQCMPRjz5H+5P8Auj9o98VVrOazOrWixTaeWOs6qHC6RMrmRYpCyiWv&#xA;FZlH95N0mFQMVSn6zpn+HeYuNK+qDyuHLnQZ/SMZl+36Vf8Aefb/AHl+1X4um2KpxdzWX6XuvUl0&#xA;8Aa3paKj6RM0nqGCPgrS1o0p5AxTjaIbH2VZX5f02606xkguTamR7m4mH1KD6tHwmmaReScnrJRv&#xA;javxNvhVNMCsN1KwfTtWs5Z308DUtdSa346W8khBs2SjSxseNx+7P+kvQBfh6bYqkdtcaeul2xFx&#xA;pb2/6K1w8hoc6IUS4HqER1+CJT/ewneY7jrsqr3U9gqXYkn030/R0AqzaJOwHO44xlxX4wx/uVH9&#xA;wdz44qnOjae97qMtzC2nOuna5eSTEaY8MoDwGPjHLIwrPWQepcICHFV8cVZjirsVadEkRkdQ6OCr&#xA;KwqCDsQQcVS8+WPLRtzbHSbI2xgSzMJt4uBtojyjg48aemh3VOg7YqmeKt4q3irsVbxV2KpXhQ3g&#xA;S7ChvAlvCh2BLeFDeBLsKG8Usdu9PvrTUrORLvVb2O61Rp3SJ7f0beNrV09KUMqH6qCtQFq3Mg1w&#xA;KkkcWurpMaFfMhuDpGoBmeTT/W9YyqYwxU+n9bp/cMPg4/a3xVF3UWsGS5RBr4/e6RxkSSxoQHHr&#xA;GOp+zt/pY7/sbVxVMdK02+uZ2nlvNVtFs9SvXW3uXtylxHJyRAOCufq68+UIJDCnxdsKr/8ACd0b&#xA;UW/+INU208af63qQ+pzDcvrnL0v96P2eX2afs13wK1b6bf3WrakZLzVbWKG+tZ4Gd7YW8qRQJzig&#xA;CKz+jIaiUOAeVeNMKsjwK3hVvAqC1szfoW/9AXBm+rTekLMoLkt6Z4+gZf3fqV+xy2r12xVis8es&#xA;qtyVXzCVaLRwipJY8gRN++EZJ+1T/est1X7GKss0zT5bL616l7cXv1m4kuE+sFD6KyUpDFwVKRpT&#xA;4a1PviqNxVvFXYq3ireKuxVvFW8VdireKpXih2FW8CXYUN4Et4UOwJbwobwJdhQhb3SrC9ns57qE&#xA;SS6fN9Zs3qw4SmN4uWxFfgkYUO2+KWL6j5Ht4YGsdJ0ezlsF0m/sYvrF1co/K7kST0G4hz6UjVLP&#xA;y5r+zgVkek6JYWDyXUNstveXUUEV2Ud5FItkKRqC9KhASA3EE98KplgQ7ClvAreFXYFbwq3gVB2+&#xA;j6db6pd6rFDxv75Iorqbkx5pb8vSHEniOPqN0HzxVG4q7FW8VbxV2Kt4q3irsVbxVvFXYqleFDeB&#xA;XYVbwJdhQ3gS3hQ7AlvChvAl2FDeKW8CEk876jeab5Q1jULKT0bu1tJZYJaK3F1UkGjAqfpGRyGo&#xA;kud2bijk1EISFxlIAvmv/ldn5n/9Xs/9I9r/ANUswfHn3vo/+h3Q/wCp/wCyl+t3/K7fzP8A+r2f&#xA;+ke1/wCqWPjz71/0O6L/AFP/AGUv1qlv+cv5r3Myw2+rSTTPXjHHa2zMaCpoBET0GPjT72MvZ/QR&#xA;FmAA/rS/4pVu/wA3Pzfs+H1vUZ7b1K8PVs7dOVKVpyhFaVwnNNjDsHs+f0wB90pf8Uh/+V3fmh/1&#xA;ez/0j2v/AFSwePPvZ/6HND/qf+yl+t3/ACu780P+r2f+ke1/6pY+PPvT/od0X+p/7KX63sf5E+cf&#xA;MnmfTNVm1y8N5LbTRpCxjjj4qyEkfu1Sv05k4JmQNvIe0ugw6acBijwgg3uT971DL3mm8VdireKt&#xA;4q7FW8VbxV2Kt4q3iqVYUN4q3gV2FW8CXYUN4Et4UOwJbwobwJdhQ3iljn5k/wDKA+YP+YGf/iBy&#xA;vJ9Jdj2R/jeP+uPvfHma19dVbS1uLu6htLZDJcXEixQxigLO5CqN9tycQGM5iMTI8hu9l/J/8rfP&#xA;2h/mLpGqarpElrYW/wBY9adniYLztZUXZXY7swHTMnFjkJAkPKdudsaXNpJwhMGRrbf+cD3My/5y&#xA;I8keafNH+H/0Dp7331P659Z4NGvD1fQ4V5svXg3TLM8DKqdT7MdoYdP4niy4eLhrn04nzx5j8ra/&#xA;5avksdcs2sruSITpEzIxMbMyhqoWH2kIzElEjm91pdZi1EeLGeKN18UqyLkvoL/nGT/jja3/AMxE&#xA;P/EDmZpuReC9sP7zH/VP3vasyXjnYq3irsVbxVvFXYq3ireKuxVvFUrwodireKt4FdhVvAl2FDeB&#xA;LeFDsCW8KG8CXYUMc/Mj/lAfMH/MDP8A8QOV5fpLsuyP8bx/1x9749zWvrqN0PUE03W9P1B0MiWd&#xA;zDcMi7FhFIHIFfGmGJotWoxeJjlAfxRI+YfT/kn8/tH81+Z7LQLfSri2mvfV4zSOjKvpRPKagb7i&#xA;OmZsM4kap861/s3k02GWUzBEa+0gfpTz8zPzU0/yF+jfrdjLe/pL1+HpMq8fQ9OteXj6uSyZeFw+&#xA;yex5a3i4ZCPBXPzv9T5t/Nvz/Z+ePMdtq1paSWccFmlqYpWVmLJLLJyqvb97mHlnxG3v+xezZaPE&#xA;YSIlcr+wD9DCcrdu+gv+cZf+ONrf/MRD/wAQOZmm5F4L2x/vMf8AVP3vacynjm8CuxVvFXYq3ire&#xA;KuxVvFW8VdiqV4UN4q7FW8VbwK7CreBLsKG8CW8KHYEt4UN4Esb/ADI/5QHzB/zAz/8AEDkMn0l2&#xA;PZH+N4/64+98fZrX112Kp15N803nlXzJZ69ZxRz3Nn6npxTcuB9WJojXiVPR69clCXCbcTXaOOpw&#xA;nFIkCVcvI3+hOvzH/NLWPPn6O/SNpb2v6O9b0vq/P4vX9Ply5s3T0hTJZMhlzcTsvsfHo+LgJPHX&#xA;Pyv9bC8rds7FX0D/AM4y/wDHG1v/AJiIv+IHMzTci8F7Yf3mP+qfve05kvHN4VbwK7FW8VdireKt&#xA;4q7FW8VbxVKsKG8VbxV2Kt4q3gV2FW8CXYUN4Et4UOwJbwoS/wAw2l9eaHfWtiltJeTwskEd8pe2&#xA;ZiKATKA1U8dsBDOEzEiUTRHc88X8ufNf1d+Wl+UjcVPplbCiU5inIGJj9ivQ9cj4ce4OX/Keq/1X&#xA;J/ppfrc35e+bxaenHonk5roOx9d7Ngpjp8K+mIdjXq3Lp2x8OPcE/wAp6r/Vcn+ml+tlei+QfL66&#xA;ZCNZ8v6K2pDl67WtnD6J+M8OPOMN9ilduuPhx7gj+U9V/quT/TS/Wjv8B+Rv+pd0z/pDt/8AmjHw&#xA;49wT/Keq/wBVyf6aX62/8B+Rv+pd0z/pDt/+aMfDj3BH8p6r/Vcn+ml+t3+A/I3/AFLumf8ASHb/&#xA;APNGPhx7gn+U9V/quT/TS/WmOmaJoulI6aXYW1gkpDSLawxwhiNgWCBa4REDk4+bUZMpucpSrvJP&#xA;3o7JNLsCt4VbwK7FW8VdireKt4q7FW8VSvCh2Kt4q3irsVbxVvArsKt4EuwobwJbwodgS3hQ3gS7&#xA;ChvFLeBDsKW8CHYUt4Fbwq7AreFW8CuxVvFXYq3ireKuxVK8KG8VdireKt4q7FW8VbwK7CreBLsK&#xA;G8CW8KHYEt4UN4EuwobxS3gQ7ClvAh2FLeBW8KuwK3hVvArsVbxV2Kt4q3iqV4UOxVvFXYq3ireK&#xA;uxVvFW8Cuwq3gS7ChvAlvCh2BLeFDeBLsKG8Ut4EOwpbwIdhS3gVvCrsCt4VbwK7FW8VdireKpWD&#xA;hQ3irsVbxV2Kt4q3irsVbxVvArsKt4EuwobwJbwodgS3hQ3gS7ChvFLeBDsKW8CHYUt4Fbwq7Are&#xA;FW8CuxVvFXYqleFDYOKt4q7FW8VdireKt4q7FW8VbwK7CreBLsKG8CW8KHYEt4UN4EuwobxS3gQ7&#xA;ClvAh2FLeBW8KuwK3hVvArsVbxVKwcKHYq2DireKuxVvFXYq3ireKuxVvFW8Cuwq3gS7ChvAlvCh&#xA;2BLeFDeBLsKG8Ut4EOwpbwIdhS3gVvCrsCt4VbwK7FX/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:BD7C19B75948E8118CFDB034E5C37DCD</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:BD7C19B75948E8118CFDB034E5C37DCD</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:2D89A0E05548E8118CFDB034E5C37DCD</stRef:instanceID>
            <stRef:documentID>xmp.did:2D89A0E05548E8118CFDB034E5C37DCD</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:AF8442D55548E8118CFDB034E5C37DCD</stEvt:instanceID>
                  <stEvt:when>2018-04-25T11:56:52+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2D89A0E05548E8118CFDB034E5C37DCD</stEvt:instanceID>
                  <stEvt:when>2018-04-25T11:57:16+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BD7C19B75948E8118CFDB034E5C37DCD</stEvt:instanceID>
                  <stEvt:when>2018-04-25T12:24:51+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>799.999512</stDim:w>
            <stDim:h>800.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -800 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 800 li
800 800 li
800 0 li
cp
clp
800 800 mo
0 800 li
0 0 li
800 0 li
800 800 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
gsave
[800 -800 800 800 .000488281 800 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~)]K_8)]BV5)B'M4)AsD1)&X;0)&O2-(`4),(`*u)(Ddl((D[c%()@Z$()7Q!'bqGu'bh>r'GM5q'GD,n
',)#m',(uk&eYfi&eYcg&J5Te&J5Qc&.fBa&.f?_%hB0]%hB-[%LrsY%LrpW%1N^S$k*OQ$k*LO$O[=M
$O[=L$47+I$47+H#mgnE#mgnE#mgnD#RC\A#RC\A#RC\@#6tJ=#6tJ<"pP89"pP88"U,&5"U,&5"U,&4
"9\i1"9\i1!s8W-!s8W-!s8W-!WiE)!WiE)!WiE)!<E3%!<E3%zzzzz!!!!!~>
<~&eYfi&eYfi&eYfi&eP]f&J5Te&J,Kb&.fBa&.fBa&.]9^%hB0]%hB0]%h9'Z%LrsY%LrsY%LijV%1NaU
%1NaU%1N^S$k*OQ$k*LO$O[=M$O[=M$O[:K$47+I$47+I$47(G#mgnE#mgnE#mgkC#RC\A#RCY?#6tJ=
#6tJ=#6tJ<"pP89"pP89"pP88"U,&5"U,&5"U,&4"9\i1"9\i1"9\i0!s8W-!s8W-!s8W-!s8W,!WiE)
!WiE)!WiE)!<E3%!<E3%!<E3%!<E3%zzzzzzzzz!!!!!~>
<~&eYfi&eYfi&eYfi&eP]f&J5Te&J5Te&J,Kb&.fBa&.fBa&.]9^%hB0]%hB0]%h9'Z%LrsY%LijV%1NaU
%1NaU%1N^S$k*OQ$k*LO$O[=M$O[=M$O[:K$47+I$47+I$47(G#mgnE#mgkC#RC\A#RC\A#RCY?#6tJ=
#6tJ<"pP89"pP89"pP88"U,&5"U,&5"U,&4"9\i1"9\i1"9\i0!s8W-!s8W-!s8W-!s8W,!WiE)!WiE)
!WiE)!WiE)!<E3%!<E3%!<E3%!<E3%zzzzzzzzz!!!!!~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
np
gsave
345.462 530.898 mo
511.316 530.898 li
511.316 627.654 li
345.462 627.654 li
345.462 530.898 li
cp
clp
345.462 627.654 mo
511.316 627.654 li
511.316 530.898 li
345.462 530.898 li
345.462 627.654 li
cp
.150637 1 1 .0553597 cmyk
f
398.157 570.207 mo
419.318 570.207 li
419.318 549.041 li
437.462 549.041 li
437.462 570.207 li
458.625 570.207 li
458.625 588.344 li
437.462 588.344 li
437.462 609.513 li
419.318 609.513 li
419.318 588.344 li
398.157 588.344 li
398.157 570.207 li
cp
0 0 0 0 cmyk
f
grestore
349.585 638.678 mo
349.585 638.412 349.487 638.195 349.289 638.025 cv
349.091 637.856 348.742 637.705 348.241 637.57 cv
347.526 637.383 346.977 637.135 346.591 636.826 cv
346.206 636.518 346.014 636.112 346.014 635.611 cv
346.014 635.096 346.227 634.671 346.653 634.338 cv
347.079 634.004 347.629 633.836 348.303 633.836 cv
349.005 633.836 349.57 634.025 349.997 634.405 cv
350.422 634.785 350.628 635.239 350.614 635.77 cv
350.605 635.796 li
349.581 635.796 li
349.581 635.468 349.47 635.202 349.247 634.998 cv
349.024 634.795 348.707 634.693 348.294 634.693 cv
347.904 634.693 347.604 634.777 347.396 634.947 cv
347.186 635.117 347.081 635.336 347.081 635.605 cv
347.081 635.848 347.195 636.049 347.422 636.21 cv
347.648 636.371 348.024 636.522 348.549 636.666 cv
349.237 636.85 349.76 637.105 350.117 637.43 cv
350.475 637.756 350.653 638.17 350.653 638.674 cv
350.653 639.207 350.44 639.631 350.014 639.945 cv
349.588 640.261 349.027 640.418 348.333 640.418 cv
347.666 640.418 347.08 640.24 346.576 639.885 cv
346.072 639.528 345.828 639.043 345.842 638.428 cv
345.851 638.401 li
346.879 638.401 li
346.879 638.791 347.014 639.082 347.283 639.273 cv
347.553 639.465 347.903 639.561 348.333 639.561 cv
348.729 639.561 349.036 639.482 349.256 639.322 cv
349.476 639.164 349.585 638.949 349.585 638.678 cv
cp
0 0 0 1 cmyk
f
353.329 638.621 mo
353.329 638.63 li
353.333 638.607 li
354.612 633.929 li
355.464 633.929 li
356.756 638.621 li
356.761 638.652 li
356.765 638.607 li
357.775 633.929 li
358.826 633.929 li
357.305 640.326 li
356.334 640.326 li
355.056 635.734 li
355.029 635.734 li
353.747 640.326 li
352.771 640.326 li
351.255 633.929 li
352.305 633.929 li
353.329 638.621 li
cp
f
360.869 640.326 mo
359.801 640.326 li
359.801 633.929 li
360.869 633.929 li
360.869 640.326 li
cp
f
366.699 634.785 mo
364.766 634.785 li
364.766 640.326 li
363.698 640.326 li
363.698 634.785 li
361.765 634.785 li
361.765 633.929 li
366.699 633.929 li
366.699 634.785 li
cp
f
368.492 639.469 mo
371.831 639.469 li
371.831 640.326 li
367.222 640.326 li
367.222 639.654 li
370.434 634.785 li
367.249 634.785 li
367.249 633.929 li
371.721 633.929 li
371.721 634.57 li
368.492 639.469 li
cp
f
376.743 637.447 mo
373.944 637.447 li
373.944 639.469 li
377.191 639.469 li
377.191 640.326 li
372.877 640.326 li
372.877 633.929 li
377.161 633.929 li
377.161 634.785 li
373.944 634.785 li
373.944 636.592 li
376.743 636.592 li
376.743 637.447 li
cp
f
379.16 636.815 mo
380.399 636.815 li
380.826 636.815 381.138 636.733 381.334 636.569 cv
381.531 636.405 381.629 636.154 381.629 635.818 cv
381.629 635.496 381.532 635.243 381.339 635.061 cv
381.146 634.877 380.852 634.785 380.456 634.785 cv
379.16 634.785 li
379.16 636.815 li
cp
379.16 637.672 mo
379.16 640.326 li
378.092 640.326 li
378.092 633.929 li
380.456 633.929 li
381.17 633.929 381.723 634.09 382.112 634.412 cv
382.502 634.734 382.697 635.193 382.697 635.791 cv
382.697 636.123 382.611 636.407 382.439 636.646 cv
382.268 636.885 382.019 637.076 381.69 637.219 cv
382.051 637.334 382.31 637.521 382.468 637.779 cv
382.626 638.039 382.706 638.357 382.706 638.735 cv
382.706 639.267 li
382.706 639.454 382.729 639.637 382.776 639.816 cv
382.823 639.994 382.902 640.131 383.013 640.225 cv
383.013 640.326 li
381.915 640.326 li
381.797 640.229 381.722 640.076 381.688 639.869 cv
381.655 639.66 381.638 639.457 381.638 639.258 cv
381.638 638.744 li
381.638 638.416 381.544 638.155 381.356 637.962 cv
381.169 637.769 380.911 637.672 380.583 637.672 cv
379.16 637.672 li
cp
f
385.117 639.469 mo
388.057 639.469 li
388.057 640.326 li
384.05 640.326 li
384.05 633.929 li
385.117 633.929 li
385.117 639.469 li
cp
f
390.275 637.939 mo
392.169 637.939 li
391.242 635.207 li
391.216 635.207 li
390.275 637.939 li
cp
392.472 638.832 mo
389.968 638.832 li
389.458 640.326 li
388.377 640.326 li
390.728 633.929 li
391.739 633.929 li
394.063 640.326 li
392.978 640.326 li
392.472 638.832 li
cp
f
399.801 640.326 mo
398.737 640.326 li
395.899 635.655 li
395.873 635.664 li
395.873 640.326 li
394.805 640.326 li
394.805 633.929 li
395.873 633.929 li
398.711 638.595 li
398.737 638.586 li
398.737 633.929 li
399.801 633.929 li
399.801 640.326 li
cp
f
402.269 634.785 mo
402.269 639.469 li
403.246 639.469 li
403.775 639.469 404.192 639.297 404.496 638.951 cv
404.798 638.605 404.95 638.16 404.95 637.612 cv
404.95 636.633 li
404.95 636.092 404.798 635.648 404.496 635.303 cv
404.192 634.958 403.775 634.785 403.246 634.785 cv
402.269 634.785 li
cp
401.203 640.326 mo
401.203 633.929 li
403.276 633.929 li
404.087 633.929 404.748 634.182 405.255 634.688 cv
405.763 635.195 406.017 635.848 406.017 636.645 cv
406.017 637.615 li
406.017 638.414 405.763 639.066 405.255 639.57 cv
404.748 640.074 404.087 640.326 403.276 640.326 cv
401.203 640.326 li
cp
f
425.757 199.598 mo
427.2 199.598 428.369 198.428 428.369 196.986 cv
428.369 195.544 427.2 194.375 425.757 194.375 cv
424.314 194.375 423.146 195.544 423.146 196.986 cv
423.146 198.428 424.314 199.598 425.757 199.598 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
436.31 199.598 mo
437.751 199.598 438.921 198.428 438.921 196.986 cv
438.921 195.544 437.751 194.375 436.31 194.375 cv
434.867 194.375 433.697 195.544 433.697 196.986 cv
433.697 198.428 434.867 199.598 436.31 199.598 cv
cp
f
446.863 199.598 mo
448.304 199.598 449.474 198.428 449.474 196.986 cv
449.474 195.544 448.304 194.375 446.863 194.375 cv
445.42 194.375 444.25 195.544 444.25 196.986 cv
444.25 198.428 445.42 199.598 446.863 199.598 cv
cp
f
457.417 199.598 mo
458.858 199.598 460.027 198.428 460.027 196.986 cv
460.027 195.544 458.858 194.375 457.417 194.375 cv
455.972 194.375 454.803 195.544 454.803 196.986 cv
454.803 198.428 455.972 199.598 457.417 199.598 cv
cp
f
425.757 210.15 mo
427.2 210.15 428.369 208.981 428.369 207.539 cv
428.369 206.096 427.2 204.927 425.757 204.927 cv
424.314 204.927 423.146 206.096 423.146 207.539 cv
423.146 208.981 424.314 210.15 425.757 210.15 cv
cp
f
436.31 210.15 mo
437.751 210.15 438.921 208.981 438.921 207.539 cv
438.921 206.096 437.751 204.927 436.31 204.927 cv
434.867 204.927 433.697 206.096 433.697 207.539 cv
433.697 208.981 434.867 210.15 436.31 210.15 cv
cp
f
446.863 210.15 mo
448.304 210.15 449.474 208.981 449.474 207.539 cv
449.474 206.096 448.304 204.927 446.863 204.927 cv
445.42 204.927 444.25 206.096 444.25 207.539 cv
444.25 208.981 445.42 210.15 446.863 210.15 cv
cp
f
457.417 210.15 mo
458.858 210.15 460.027 208.981 460.027 207.539 cv
460.027 206.096 458.858 204.927 457.417 204.927 cv
455.972 204.927 454.803 206.096 454.803 207.539 cv
454.803 208.981 455.972 210.15 457.417 210.15 cv
cp
f
425.757 220.703 mo
427.2 220.703 428.369 219.534 428.369 218.091 cv
428.369 216.649 427.2 215.479 425.757 215.479 cv
424.314 215.479 423.146 216.649 423.146 218.091 cv
423.146 219.534 424.314 220.703 425.757 220.703 cv
cp
f
436.31 220.703 mo
437.751 220.703 438.921 219.534 438.921 218.091 cv
438.921 216.649 437.751 215.479 436.31 215.479 cv
434.867 215.479 433.697 216.649 433.697 218.091 cv
433.697 219.534 434.867 220.703 436.31 220.703 cv
cp
f
446.863 220.703 mo
448.304 220.703 449.474 219.534 449.474 218.091 cv
449.474 216.649 448.304 215.479 446.863 215.479 cv
445.42 215.479 444.25 216.649 444.25 218.091 cv
444.25 219.534 445.42 220.703 446.863 220.703 cv
cp
f
457.417 220.703 mo
458.858 220.703 460.027 219.534 460.027 218.091 cv
460.027 216.649 458.858 215.479 457.417 215.479 cv
455.972 215.479 454.803 216.649 454.803 218.091 cv
454.803 219.534 455.972 220.703 457.417 220.703 cv
cp
f
467.968 220.703 mo
469.41 220.703 470.58 219.534 470.58 218.091 cv
470.58 216.649 469.41 215.479 467.968 215.479 cv
466.525 215.479 465.355 216.649 465.355 218.091 cv
465.355 219.534 466.525 220.703 467.968 220.703 cv
cp
f
489.072 220.703 mo
490.516 220.703 491.685 219.534 491.685 218.091 cv
491.685 216.649 490.516 215.479 489.072 215.479 cv
487.631 215.479 486.461 216.649 486.461 218.091 cv
486.461 219.534 487.631 220.703 489.072 220.703 cv
cp
f
499.625 220.703 mo
501.068 220.703 502.238 219.534 502.238 218.091 cv
502.238 216.649 501.068 215.479 499.625 215.479 cv
498.183 215.479 497.013 216.649 497.013 218.091 cv
497.013 219.534 498.183 220.703 499.625 220.703 cv
cp
f
510.178 220.703 mo
511.621 220.703 512.792 219.534 512.792 218.091 cv
512.792 216.649 511.621 215.479 510.178 215.479 cv
508.737 215.479 507.566 216.649 507.566 218.091 cv
507.566 219.534 508.737 220.703 510.178 220.703 cv
cp
f
520.73 220.703 mo
522.174 220.703 523.343 219.534 523.343 218.091 cv
523.343 216.649 522.174 215.479 520.73 215.479 cv
519.289 215.479 518.119 216.649 518.119 218.091 cv
518.119 219.534 519.289 220.703 520.73 220.703 cv
cp
f
235.809 231.256 mo
237.251 231.256 238.421 230.086 238.421 228.644 cv
238.421 227.202 237.251 226.032 235.809 226.032 cv
234.367 226.032 233.197 227.202 233.197 228.644 cv
233.197 230.086 234.367 231.256 235.809 231.256 cv
cp
f
246.362 231.256 mo
247.804 231.256 248.974 230.086 248.974 228.644 cv
248.974 227.202 247.804 226.032 246.362 226.032 cv
244.919 226.032 243.75 227.202 243.75 228.644 cv
243.75 230.086 244.919 231.256 246.362 231.256 cv
cp
f
256.915 231.256 mo
258.357 231.256 259.526 230.086 259.526 228.644 cv
259.526 227.202 258.357 226.032 256.915 226.032 cv
255.472 226.032 254.303 227.202 254.303 228.644 cv
254.303 230.086 255.472 231.256 256.915 231.256 cv
cp
f
267.467 231.256 mo
268.91 231.256 270.079 230.086 270.079 228.644 cv
270.079 227.202 268.91 226.032 267.467 226.032 cv
266.025 226.032 264.855 227.202 264.855 228.644 cv
264.855 230.086 266.025 231.256 267.467 231.256 cv
cp
f
383.546 231.256 mo
384.989 231.256 386.158 230.086 386.158 228.644 cv
386.158 227.202 384.989 226.032 383.546 226.032 cv
382.104 226.032 380.935 227.202 380.935 228.644 cv
380.935 230.086 382.104 231.256 383.546 231.256 cv
cp
f
394.099 231.256 mo
395.542 231.256 396.711 230.086 396.711 228.644 cv
396.711 227.202 395.542 226.032 394.099 226.032 cv
392.657 226.032 391.488 227.202 391.488 228.644 cv
391.488 230.086 392.657 231.256 394.099 231.256 cv
cp
f
404.652 231.256 mo
406.093 231.256 407.263 230.086 407.263 228.644 cv
407.263 227.202 406.093 226.032 404.652 226.032 cv
403.208 226.032 402.042 227.202 402.042 228.644 cv
402.042 230.086 403.208 231.256 404.652 231.256 cv
cp
f
425.757 231.256 mo
427.2 231.256 428.369 230.086 428.369 228.644 cv
428.369 227.202 427.2 226.032 425.757 226.032 cv
424.314 226.032 423.146 227.202 423.146 228.644 cv
423.146 230.086 424.314 231.256 425.757 231.256 cv
cp
f
436.31 231.256 mo
437.751 231.256 438.921 230.086 438.921 228.644 cv
438.921 227.202 437.751 226.032 436.31 226.032 cv
434.867 226.032 433.697 227.202 433.697 228.644 cv
433.697 230.086 434.867 231.256 436.31 231.256 cv
cp
f
446.863 231.256 mo
448.304 231.256 449.474 230.086 449.474 228.644 cv
449.474 227.202 448.304 226.032 446.863 226.032 cv
445.42 226.032 444.25 227.202 444.25 228.644 cv
444.25 230.086 445.42 231.256 446.863 231.256 cv
cp
f
457.417 231.256 mo
458.858 231.256 460.027 230.086 460.027 228.644 cv
460.027 227.202 458.858 226.032 457.417 226.032 cv
455.972 226.032 454.803 227.202 454.803 228.644 cv
454.803 230.086 455.972 231.256 457.417 231.256 cv
cp
f
467.968 231.256 mo
469.41 231.256 470.58 230.086 470.58 228.644 cv
470.58 227.202 469.41 226.032 467.968 226.032 cv
466.525 226.032 465.355 227.202 465.355 228.644 cv
465.355 230.086 466.525 231.256 467.968 231.256 cv
cp
f
478.521 231.256 mo
479.962 231.256 481.132 230.086 481.132 228.644 cv
481.132 227.202 479.962 226.032 478.521 226.032 cv
477.079 226.032 475.908 227.202 475.908 228.644 cv
475.908 230.086 477.079 231.256 478.521 231.256 cv
cp
f
489.072 231.256 mo
490.516 231.256 491.685 230.086 491.685 228.644 cv
491.685 227.202 490.516 226.032 489.072 226.032 cv
487.631 226.032 486.461 227.202 486.461 228.644 cv
486.461 230.086 487.631 231.256 489.072 231.256 cv
cp
f
499.625 231.256 mo
501.068 231.256 502.238 230.086 502.238 228.644 cv
502.238 227.202 501.068 226.032 499.625 226.032 cv
498.183 226.032 497.013 227.202 497.013 228.644 cv
497.013 230.086 498.183 231.256 499.625 231.256 cv
cp
f
510.178 231.256 mo
511.621 231.256 512.792 230.086 512.792 228.644 cv
512.792 227.202 511.621 226.032 510.178 226.032 cv
508.737 226.032 507.566 227.202 507.566 228.644 cv
507.566 230.086 508.737 231.256 510.178 231.256 cv
cp
f
520.73 231.256 mo
522.174 231.256 523.343 230.086 523.343 228.644 cv
523.343 227.202 522.174 226.032 520.73 226.032 cv
519.289 226.032 518.119 227.202 518.119 228.644 cv
518.119 230.086 519.289 231.256 520.73 231.256 cv
cp
f
531.283 231.256 mo
532.726 231.256 533.896 230.086 533.896 228.644 cv
533.896 227.202 532.726 226.032 531.283 226.032 cv
529.841 226.032 528.671 227.202 528.671 228.644 cv
528.671 230.086 529.841 231.256 531.283 231.256 cv
cp
f
225.256 241.809 mo
226.699 241.809 227.868 240.639 227.868 239.197 cv
227.868 237.754 226.699 236.585 225.256 236.585 cv
223.814 236.585 222.645 237.754 222.645 239.197 cv
222.645 240.639 223.814 241.809 225.256 241.809 cv
cp
f
235.809 241.809 mo
237.251 241.809 238.421 240.639 238.421 239.197 cv
238.421 237.754 237.251 236.585 235.809 236.585 cv
234.367 236.585 233.197 237.754 233.197 239.197 cv
233.197 240.639 234.367 241.809 235.809 241.809 cv
cp
f
246.362 241.809 mo
247.804 241.809 248.974 240.639 248.974 239.197 cv
248.974 237.754 247.804 236.585 246.362 236.585 cv
244.919 236.585 243.75 237.754 243.75 239.197 cv
243.75 240.639 244.919 241.809 246.362 241.809 cv
cp
f
256.915 241.809 mo
258.357 241.809 259.526 240.639 259.526 239.197 cv
259.526 237.754 258.357 236.585 256.915 236.585 cv
255.472 236.585 254.303 237.754 254.303 239.197 cv
254.303 240.639 255.472 241.809 256.915 241.809 cv
cp
f
267.467 241.809 mo
268.91 241.809 270.079 240.639 270.079 239.197 cv
270.079 237.754 268.91 236.585 267.467 236.585 cv
266.025 236.585 264.855 237.754 264.855 239.197 cv
264.855 240.639 266.025 241.809 267.467 241.809 cv
cp
f
278.02 241.809 mo
279.462 241.809 280.631 240.639 280.631 239.197 cv
280.631 237.754 279.462 236.585 278.02 236.585 cv
276.578 236.585 275.408 237.754 275.408 239.197 cv
275.408 240.639 276.578 241.809 278.02 241.809 cv
cp
f
320.23 241.809 mo
321.673 241.809 322.842 240.639 322.842 239.197 cv
322.842 237.754 321.673 236.585 320.23 236.585 cv
318.788 236.585 317.619 237.754 317.619 239.197 cv
317.619 240.639 318.788 241.809 320.23 241.809 cv
cp
f
330.783 241.809 mo
332.226 241.809 333.395 240.639 333.395 239.197 cv
333.395 237.754 332.226 236.585 330.783 236.585 cv
329.341 236.585 328.171 237.754 328.171 239.197 cv
328.171 240.639 329.341 241.809 330.783 241.809 cv
cp
f
341.336 241.809 mo
342.778 241.809 343.947 240.639 343.947 239.197 cv
343.947 237.754 342.778 236.585 341.336 236.585 cv
339.894 236.585 338.724 237.754 338.724 239.197 cv
338.724 240.639 339.894 241.809 341.336 241.809 cv
cp
f
351.889 241.809 mo
353.331 241.809 354.5 240.639 354.5 239.197 cv
354.5 237.754 353.331 236.585 351.889 236.585 cv
350.446 236.585 349.277 237.754 349.277 239.197 cv
349.277 240.639 350.446 241.809 351.889 241.809 cv
cp
f
362.441 241.809 mo
363.883 241.809 365.053 240.639 365.053 239.197 cv
365.053 237.754 363.883 236.585 362.441 236.585 cv
360.999 236.585 359.83 237.754 359.83 239.197 cv
359.83 240.639 360.999 241.809 362.441 241.809 cv
cp
f
372.994 241.809 mo
374.436 241.809 375.605 240.639 375.605 239.197 cv
375.605 237.754 374.436 236.585 372.994 236.585 cv
371.551 236.585 370.382 237.754 370.382 239.197 cv
370.382 240.639 371.551 241.809 372.994 241.809 cv
cp
f
383.546 241.809 mo
384.989 241.809 386.158 240.639 386.158 239.197 cv
386.158 237.754 384.989 236.585 383.546 236.585 cv
382.104 236.585 380.935 237.754 380.935 239.197 cv
380.935 240.639 382.104 241.809 383.546 241.809 cv
cp
f
394.099 241.809 mo
395.542 241.809 396.711 240.639 396.711 239.197 cv
396.711 237.754 395.542 236.585 394.099 236.585 cv
392.657 236.585 391.488 237.754 391.488 239.197 cv
391.488 240.639 392.657 241.809 394.099 241.809 cv
cp
f
404.652 241.809 mo
406.093 241.809 407.263 240.639 407.263 239.197 cv
407.263 237.754 406.093 236.585 404.652 236.585 cv
403.208 236.585 402.042 237.754 402.042 239.197 cv
402.042 240.639 403.208 241.809 404.652 241.809 cv
cp
f
415.205 241.809 mo
416.646 241.809 417.816 240.639 417.816 239.197 cv
417.816 237.754 416.646 236.585 415.205 236.585 cv
413.762 236.585 412.593 237.754 412.593 239.197 cv
412.593 240.639 413.762 241.809 415.205 241.809 cv
cp
f
425.757 241.809 mo
427.2 241.809 428.369 240.639 428.369 239.197 cv
428.369 237.754 427.2 236.585 425.757 236.585 cv
424.314 236.585 423.146 237.754 423.146 239.197 cv
423.146 240.639 424.314 241.809 425.757 241.809 cv
cp
f
436.31 241.809 mo
437.751 241.809 438.921 240.639 438.921 239.197 cv
438.921 237.754 437.751 236.585 436.31 236.585 cv
434.867 236.585 433.697 237.754 433.697 239.197 cv
433.697 240.639 434.867 241.809 436.31 241.809 cv
cp
f
446.863 241.809 mo
448.304 241.809 449.474 240.639 449.474 239.197 cv
449.474 237.754 448.304 236.585 446.863 236.585 cv
445.42 236.585 444.25 237.754 444.25 239.197 cv
444.25 240.639 445.42 241.809 446.863 241.809 cv
cp
f
457.417 241.809 mo
458.858 241.809 460.027 240.639 460.027 239.197 cv
460.027 237.754 458.858 236.585 457.417 236.585 cv
455.972 236.585 454.803 237.754 454.803 239.197 cv
454.803 240.639 455.972 241.809 457.417 241.809 cv
cp
f
467.968 241.809 mo
469.41 241.809 470.58 240.639 470.58 239.197 cv
470.58 237.754 469.41 236.585 467.968 236.585 cv
466.525 236.585 465.355 237.754 465.355 239.197 cv
465.355 240.639 466.525 241.809 467.968 241.809 cv
cp
f
478.521 241.809 mo
479.962 241.809 481.132 240.639 481.132 239.197 cv
481.132 237.754 479.962 236.585 478.521 236.585 cv
477.079 236.585 475.908 237.754 475.908 239.197 cv
475.908 240.639 477.079 241.809 478.521 241.809 cv
cp
f
489.072 241.809 mo
490.516 241.809 491.685 240.639 491.685 239.197 cv
491.685 237.754 490.516 236.585 489.072 236.585 cv
487.631 236.585 486.461 237.754 486.461 239.197 cv
486.461 240.639 487.631 241.809 489.072 241.809 cv
cp
f
499.625 241.809 mo
501.068 241.809 502.238 240.639 502.238 239.197 cv
502.238 237.754 501.068 236.585 499.625 236.585 cv
498.183 236.585 497.013 237.754 497.013 239.197 cv
497.013 240.639 498.183 241.809 499.625 241.809 cv
cp
f
510.178 241.809 mo
511.621 241.809 512.792 240.639 512.792 239.197 cv
512.792 237.754 511.621 236.585 510.178 236.585 cv
508.737 236.585 507.566 237.754 507.566 239.197 cv
507.566 240.639 508.737 241.809 510.178 241.809 cv
cp
f
520.73 241.809 mo
522.174 241.809 523.343 240.639 523.343 239.197 cv
523.343 237.754 522.174 236.585 520.73 236.585 cv
519.289 236.585 518.119 237.754 518.119 239.197 cv
518.119 240.639 519.289 241.809 520.73 241.809 cv
cp
f
531.283 241.809 mo
532.726 241.809 533.896 240.639 533.896 239.197 cv
533.896 237.754 532.726 236.585 531.283 236.585 cv
529.841 236.585 528.671 237.754 528.671 239.197 cv
528.671 240.639 529.841 241.809 531.283 241.809 cv
cp
f
541.835 241.809 mo
543.279 241.809 544.447 240.639 544.447 239.197 cv
544.447 237.754 543.279 236.585 541.835 236.585 cv
540.395 236.585 539.224 237.754 539.224 239.197 cv
539.224 240.639 540.395 241.809 541.835 241.809 cv
cp
f
552.388 241.809 mo
553.833 241.809 555 240.639 555 239.197 cv
555 237.754 553.833 236.585 552.388 236.585 cv
550.947 236.585 549.777 237.754 549.777 239.197 cv
549.777 240.639 550.947 241.809 552.388 241.809 cv
cp
f
225.256 252.361 mo
226.699 252.361 227.868 251.192 227.868 249.75 cv
227.868 248.307 226.699 247.138 225.256 247.138 cv
223.814 247.138 222.645 248.307 222.645 249.75 cv
222.645 251.192 223.814 252.361 225.256 252.361 cv
cp
f
235.809 252.361 mo
237.251 252.361 238.421 251.192 238.421 249.75 cv
238.421 248.307 237.251 247.138 235.809 247.138 cv
234.367 247.138 233.197 248.307 233.197 249.75 cv
233.197 251.192 234.367 252.361 235.809 252.361 cv
cp
f
246.362 252.361 mo
247.804 252.361 248.974 251.192 248.974 249.75 cv
248.974 248.307 247.804 247.138 246.362 247.138 cv
244.919 247.138 243.75 248.307 243.75 249.75 cv
243.75 251.192 244.919 252.361 246.362 252.361 cv
cp
f
256.915 252.361 mo
258.357 252.361 259.526 251.192 259.526 249.75 cv
259.526 248.307 258.357 247.138 256.915 247.138 cv
255.472 247.138 254.303 248.307 254.303 249.75 cv
254.303 251.192 255.472 252.361 256.915 252.361 cv
cp
f
267.467 252.361 mo
268.91 252.361 270.079 251.192 270.079 249.75 cv
270.079 248.307 268.91 247.138 267.467 247.138 cv
266.025 247.138 264.855 248.307 264.855 249.75 cv
264.855 251.192 266.025 252.361 267.467 252.361 cv
cp
f
278.02 252.361 mo
279.462 252.361 280.631 251.192 280.631 249.75 cv
280.631 248.307 279.462 247.138 278.02 247.138 cv
276.578 247.138 275.408 248.307 275.408 249.75 cv
275.408 251.192 276.578 252.361 278.02 252.361 cv
cp
f
288.572 252.361 mo
290.015 252.361 291.184 251.192 291.184 249.75 cv
291.184 248.307 290.015 247.138 288.572 247.138 cv
287.13 247.138 285.961 248.307 285.961 249.75 cv
285.961 251.192 287.13 252.361 288.572 252.361 cv
cp
f
299.125 252.361 mo
300.567 252.361 301.737 251.192 301.737 249.75 cv
301.737 248.307 300.567 247.138 299.125 247.138 cv
297.683 247.138 296.514 248.307 296.514 249.75 cv
296.514 251.192 297.683 252.361 299.125 252.361 cv
cp
f
309.678 252.361 mo
311.12 252.361 312.29 251.192 312.29 249.75 cv
312.29 248.307 311.12 247.138 309.678 247.138 cv
308.235 247.138 307.066 248.307 307.066 249.75 cv
307.066 251.192 308.235 252.361 309.678 252.361 cv
cp
f
320.23 252.361 mo
321.673 252.361 322.842 251.192 322.842 249.75 cv
322.842 248.307 321.673 247.138 320.23 247.138 cv
318.788 247.138 317.619 248.307 317.619 249.75 cv
317.619 251.192 318.788 252.361 320.23 252.361 cv
cp
f
330.783 252.361 mo
332.226 252.361 333.395 251.192 333.395 249.75 cv
333.395 248.307 332.226 247.138 330.783 247.138 cv
329.341 247.138 328.171 248.307 328.171 249.75 cv
328.171 251.192 329.341 252.361 330.783 252.361 cv
cp
f
341.336 252.361 mo
342.778 252.361 343.947 251.192 343.947 249.75 cv
343.947 248.307 342.778 247.138 341.336 247.138 cv
339.894 247.138 338.724 248.307 338.724 249.75 cv
338.724 251.192 339.894 252.361 341.336 252.361 cv
cp
f
351.889 252.361 mo
353.331 252.361 354.5 251.192 354.5 249.75 cv
354.5 248.307 353.331 247.138 351.889 247.138 cv
350.446 247.138 349.277 248.307 349.277 249.75 cv
349.277 251.192 350.446 252.361 351.889 252.361 cv
cp
f
362.441 252.361 mo
363.883 252.361 365.053 251.192 365.053 249.75 cv
365.053 248.307 363.883 247.138 362.441 247.138 cv
360.999 247.138 359.83 248.307 359.83 249.75 cv
359.83 251.192 360.999 252.361 362.441 252.361 cv
cp
f
372.994 252.361 mo
374.436 252.361 375.605 251.192 375.605 249.75 cv
375.605 248.307 374.436 247.138 372.994 247.138 cv
371.551 247.138 370.382 248.307 370.382 249.75 cv
370.382 251.192 371.551 252.361 372.994 252.361 cv
cp
f
383.546 252.361 mo
384.989 252.361 386.158 251.192 386.158 249.75 cv
386.158 248.307 384.989 247.138 383.546 247.138 cv
382.104 247.138 380.935 248.307 380.935 249.75 cv
380.935 251.192 382.104 252.361 383.546 252.361 cv
cp
f
394.099 252.361 mo
395.542 252.361 396.711 251.192 396.711 249.75 cv
396.711 248.307 395.542 247.138 394.099 247.138 cv
392.657 247.138 391.488 248.307 391.488 249.75 cv
391.488 251.192 392.657 252.361 394.099 252.361 cv
cp
f
404.652 252.361 mo
406.093 252.361 407.263 251.192 407.263 249.75 cv
407.263 248.307 406.093 247.138 404.652 247.138 cv
403.208 247.138 402.042 248.307 402.042 249.75 cv
402.042 251.192 403.208 252.361 404.652 252.361 cv
cp
f
415.205 252.361 mo
416.646 252.361 417.816 251.192 417.816 249.75 cv
417.816 248.307 416.646 247.138 415.205 247.138 cv
413.762 247.138 412.593 248.307 412.593 249.75 cv
412.593 251.192 413.762 252.361 415.205 252.361 cv
cp
f
425.757 252.361 mo
427.2 252.361 428.369 251.192 428.369 249.75 cv
428.369 248.307 427.2 247.138 425.757 247.138 cv
424.314 247.138 423.146 248.307 423.146 249.75 cv
423.146 251.192 424.314 252.361 425.757 252.361 cv
cp
f
436.31 252.361 mo
437.751 252.361 438.921 251.192 438.921 249.75 cv
438.921 248.307 437.751 247.138 436.31 247.138 cv
434.867 247.138 433.697 248.307 433.697 249.75 cv
433.697 251.192 434.867 252.361 436.31 252.361 cv
cp
f
446.863 252.361 mo
448.304 252.361 449.474 251.192 449.474 249.75 cv
449.474 248.307 448.304 247.138 446.863 247.138 cv
445.42 247.138 444.25 248.307 444.25 249.75 cv
444.25 251.192 445.42 252.361 446.863 252.361 cv
cp
f
457.417 252.361 mo
458.858 252.361 460.027 251.192 460.027 249.75 cv
460.027 248.307 458.858 247.138 457.417 247.138 cv
455.972 247.138 454.803 248.307 454.803 249.75 cv
454.803 251.192 455.972 252.361 457.417 252.361 cv
cp
f
467.968 252.361 mo
469.41 252.361 470.58 251.192 470.58 249.75 cv
470.58 248.307 469.41 247.138 467.968 247.138 cv
466.525 247.138 465.355 248.307 465.355 249.75 cv
465.355 251.192 466.525 252.361 467.968 252.361 cv
cp
f
478.521 252.361 mo
479.962 252.361 481.132 251.192 481.132 249.75 cv
481.132 248.307 479.962 247.138 478.521 247.138 cv
477.079 247.138 475.908 248.307 475.908 249.75 cv
475.908 251.192 477.079 252.361 478.521 252.361 cv
cp
f
489.072 252.361 mo
490.516 252.361 491.685 251.192 491.685 249.75 cv
491.685 248.307 490.516 247.138 489.072 247.138 cv
487.631 247.138 486.461 248.307 486.461 249.75 cv
486.461 251.192 487.631 252.361 489.072 252.361 cv
cp
f
499.625 252.361 mo
501.068 252.361 502.238 251.192 502.238 249.75 cv
502.238 248.307 501.068 247.138 499.625 247.138 cv
498.183 247.138 497.013 248.307 497.013 249.75 cv
497.013 251.192 498.183 252.361 499.625 252.361 cv
cp
f
510.178 252.361 mo
511.621 252.361 512.792 251.192 512.792 249.75 cv
512.792 248.307 511.621 247.138 510.178 247.138 cv
508.737 247.138 507.566 248.307 507.566 249.75 cv
507.566 251.192 508.737 252.361 510.178 252.361 cv
cp
f
520.73 252.361 mo
522.174 252.361 523.343 251.192 523.343 249.75 cv
523.343 248.307 522.174 247.138 520.73 247.138 cv
519.289 247.138 518.119 248.307 518.119 249.75 cv
518.119 251.192 519.289 252.361 520.73 252.361 cv
cp
f
531.283 252.361 mo
532.726 252.361 533.896 251.192 533.896 249.75 cv
533.896 248.307 532.726 247.138 531.283 247.138 cv
529.841 247.138 528.671 248.307 528.671 249.75 cv
528.671 251.192 529.841 252.361 531.283 252.361 cv
cp
f
541.835 252.361 mo
543.279 252.361 544.447 251.192 544.447 249.75 cv
544.447 248.307 543.279 247.138 541.835 247.138 cv
540.395 247.138 539.224 248.307 539.224 249.75 cv
539.224 251.192 540.395 252.361 541.835 252.361 cv
cp
f
552.388 252.361 mo
553.833 252.361 555 251.192 555 249.75 cv
555 248.307 553.833 247.138 552.388 247.138 cv
550.947 247.138 549.777 248.307 549.777 249.75 cv
549.777 251.192 550.947 252.361 552.388 252.361 cv
cp
f
562.941 252.361 mo
564.384 252.361 565.553 251.192 565.553 249.75 cv
565.553 248.307 564.384 247.138 562.941 247.138 cv
561.5 247.138 560.33 248.307 560.33 249.75 cv
560.33 251.192 561.5 252.361 562.941 252.361 cv
cp
f
573.494 252.361 mo
574.937 252.361 576.105 251.192 576.105 249.75 cv
576.105 248.307 574.937 247.138 573.494 247.138 cv
572.053 247.138 570.882 248.307 570.882 249.75 cv
570.882 251.192 572.053 252.361 573.494 252.361 cv
cp
f
235.809 262.914 mo
237.251 262.914 238.421 261.744 238.421 260.302 cv
238.421 258.86 237.251 257.69 235.809 257.69 cv
234.367 257.69 233.197 258.86 233.197 260.302 cv
233.197 261.744 234.367 262.914 235.809 262.914 cv
cp
f
246.362 262.914 mo
247.804 262.914 248.974 261.744 248.974 260.302 cv
248.974 258.86 247.804 257.69 246.362 257.69 cv
244.919 257.69 243.75 258.86 243.75 260.302 cv
243.75 261.744 244.919 262.914 246.362 262.914 cv
cp
f
256.915 262.914 mo
258.357 262.914 259.526 261.744 259.526 260.302 cv
259.526 258.86 258.357 257.69 256.915 257.69 cv
255.472 257.69 254.303 258.86 254.303 260.302 cv
254.303 261.744 255.472 262.914 256.915 262.914 cv
cp
f
267.467 262.914 mo
268.91 262.914 270.079 261.744 270.079 260.302 cv
270.079 258.86 268.91 257.69 267.467 257.69 cv
266.025 257.69 264.855 258.86 264.855 260.302 cv
264.855 261.744 266.025 262.914 267.467 262.914 cv
cp
f
278.02 262.914 mo
279.462 262.914 280.631 261.744 280.631 260.302 cv
280.631 258.86 279.462 257.69 278.02 257.69 cv
276.578 257.69 275.408 258.86 275.408 260.302 cv
275.408 261.744 276.578 262.914 278.02 262.914 cv
cp
f
288.572 262.914 mo
290.015 262.914 291.184 261.744 291.184 260.302 cv
291.184 258.86 290.015 257.69 288.572 257.69 cv
287.13 257.69 285.961 258.86 285.961 260.302 cv
285.961 261.744 287.13 262.914 288.572 262.914 cv
cp
f
299.125 262.914 mo
300.567 262.914 301.737 261.744 301.737 260.302 cv
301.737 258.86 300.567 257.69 299.125 257.69 cv
297.683 257.69 296.514 258.86 296.514 260.302 cv
296.514 261.744 297.683 262.914 299.125 262.914 cv
cp
f
309.678 262.914 mo
311.12 262.914 312.29 261.744 312.29 260.302 cv
312.29 258.86 311.12 257.69 309.678 257.69 cv
308.235 257.69 307.066 258.86 307.066 260.302 cv
307.066 261.744 308.235 262.914 309.678 262.914 cv
cp
f
320.23 262.914 mo
321.673 262.914 322.842 261.744 322.842 260.302 cv
322.842 258.86 321.673 257.69 320.23 257.69 cv
318.788 257.69 317.619 258.86 317.619 260.302 cv
317.619 261.744 318.788 262.914 320.23 262.914 cv
cp
f
330.783 262.914 mo
332.226 262.914 333.395 261.744 333.395 260.302 cv
333.395 258.86 332.226 257.69 330.783 257.69 cv
329.341 257.69 328.171 258.86 328.171 260.302 cv
328.171 261.744 329.341 262.914 330.783 262.914 cv
cp
f
341.336 262.914 mo
342.778 262.914 343.947 261.744 343.947 260.302 cv
343.947 258.86 342.778 257.69 341.336 257.69 cv
339.894 257.69 338.724 258.86 338.724 260.302 cv
338.724 261.744 339.894 262.914 341.336 262.914 cv
cp
f
351.889 262.914 mo
353.331 262.914 354.5 261.744 354.5 260.302 cv
354.5 258.86 353.331 257.69 351.889 257.69 cv
350.446 257.69 349.277 258.86 349.277 260.302 cv
349.277 261.744 350.446 262.914 351.889 262.914 cv
cp
f
362.441 262.914 mo
363.883 262.914 365.053 261.744 365.053 260.302 cv
365.053 258.86 363.883 257.69 362.441 257.69 cv
360.999 257.69 359.83 258.86 359.83 260.302 cv
359.83 261.744 360.999 262.914 362.441 262.914 cv
cp
f
372.994 262.914 mo
374.436 262.914 375.605 261.744 375.605 260.302 cv
375.605 258.86 374.436 257.69 372.994 257.69 cv
371.551 257.69 370.382 258.86 370.382 260.302 cv
370.382 261.744 371.551 262.914 372.994 262.914 cv
cp
f
383.546 262.914 mo
384.989 262.914 386.158 261.744 386.158 260.302 cv
386.158 258.86 384.989 257.69 383.546 257.69 cv
382.104 257.69 380.935 258.86 380.935 260.302 cv
380.935 261.744 382.104 262.914 383.546 262.914 cv
cp
f
394.099 262.914 mo
395.542 262.914 396.711 261.744 396.711 260.302 cv
396.711 258.86 395.542 257.69 394.099 257.69 cv
392.657 257.69 391.488 258.86 391.488 260.302 cv
391.488 261.744 392.657 262.914 394.099 262.914 cv
cp
f
404.652 262.914 mo
406.093 262.914 407.263 261.744 407.263 260.302 cv
407.263 258.86 406.093 257.69 404.652 257.69 cv
403.208 257.69 402.042 258.86 402.042 260.302 cv
402.042 261.744 403.208 262.914 404.652 262.914 cv
cp
f
415.205 262.914 mo
416.646 262.914 417.816 261.744 417.816 260.302 cv
417.816 258.86 416.646 257.69 415.205 257.69 cv
413.762 257.69 412.593 258.86 412.593 260.302 cv
412.593 261.744 413.762 262.914 415.205 262.914 cv
cp
f
425.757 262.914 mo
427.2 262.914 428.369 261.744 428.369 260.302 cv
428.369 258.86 427.2 257.69 425.757 257.69 cv
424.314 257.69 423.146 258.86 423.146 260.302 cv
423.146 261.744 424.314 262.914 425.757 262.914 cv
cp
f
436.31 262.914 mo
437.751 262.914 438.921 261.744 438.921 260.302 cv
438.921 258.86 437.751 257.69 436.31 257.69 cv
434.867 257.69 433.697 258.86 433.697 260.302 cv
433.697 261.744 434.867 262.914 436.31 262.914 cv
cp
f
446.863 262.914 mo
448.304 262.914 449.474 261.744 449.474 260.302 cv
449.474 258.86 448.304 257.69 446.863 257.69 cv
445.42 257.69 444.25 258.86 444.25 260.302 cv
444.25 261.744 445.42 262.914 446.863 262.914 cv
cp
f
457.417 262.914 mo
458.858 262.914 460.027 261.744 460.027 260.302 cv
460.027 258.86 458.858 257.69 457.417 257.69 cv
455.972 257.69 454.803 258.86 454.803 260.302 cv
454.803 261.744 455.972 262.914 457.417 262.914 cv
cp
f
467.968 262.914 mo
469.41 262.914 470.58 261.744 470.58 260.302 cv
470.58 258.86 469.41 257.69 467.968 257.69 cv
466.525 257.69 465.355 258.86 465.355 260.302 cv
465.355 261.744 466.525 262.914 467.968 262.914 cv
cp
f
478.521 262.914 mo
479.962 262.914 481.132 261.744 481.132 260.302 cv
481.132 258.86 479.962 257.69 478.521 257.69 cv
477.079 257.69 475.908 258.86 475.908 260.302 cv
475.908 261.744 477.079 262.914 478.521 262.914 cv
cp
f
489.072 262.914 mo
490.516 262.914 491.685 261.744 491.685 260.302 cv
491.685 258.86 490.516 257.69 489.072 257.69 cv
487.631 257.69 486.461 258.86 486.461 260.302 cv
486.461 261.744 487.631 262.914 489.072 262.914 cv
cp
f
499.625 262.914 mo
501.068 262.914 502.238 261.744 502.238 260.302 cv
502.238 258.86 501.068 257.69 499.625 257.69 cv
498.183 257.69 497.013 258.86 497.013 260.302 cv
497.013 261.744 498.183 262.914 499.625 262.914 cv
cp
f
510.178 262.914 mo
511.621 262.914 512.792 261.744 512.792 260.302 cv
512.792 258.86 511.621 257.69 510.178 257.69 cv
508.737 257.69 507.566 258.86 507.566 260.302 cv
507.566 261.744 508.737 262.914 510.178 262.914 cv
cp
f
520.73 262.914 mo
522.174 262.914 523.343 261.744 523.343 260.302 cv
523.343 258.86 522.174 257.69 520.73 257.69 cv
519.289 257.69 518.119 258.86 518.119 260.302 cv
518.119 261.744 519.289 262.914 520.73 262.914 cv
cp
f
531.283 262.914 mo
532.726 262.914 533.896 261.744 533.896 260.302 cv
533.896 258.86 532.726 257.69 531.283 257.69 cv
529.841 257.69 528.671 258.86 528.671 260.302 cv
528.671 261.744 529.841 262.914 531.283 262.914 cv
cp
f
541.835 262.914 mo
543.279 262.914 544.447 261.744 544.447 260.302 cv
544.447 258.86 543.279 257.69 541.835 257.69 cv
540.395 257.69 539.224 258.86 539.224 260.302 cv
539.224 261.744 540.395 262.914 541.835 262.914 cv
cp
f
552.388 262.914 mo
553.833 262.914 555 261.744 555 260.302 cv
555 258.86 553.833 257.69 552.388 257.69 cv
550.947 257.69 549.777 258.86 549.777 260.302 cv
549.777 261.744 550.947 262.914 552.388 262.914 cv
cp
f
562.941 262.914 mo
564.384 262.914 565.553 261.744 565.553 260.302 cv
565.553 258.86 564.384 257.69 562.941 257.69 cv
561.5 257.69 560.33 258.86 560.33 260.302 cv
560.33 261.744 561.5 262.914 562.941 262.914 cv
cp
f
573.494 262.914 mo
574.937 262.914 576.105 261.744 576.105 260.302 cv
576.105 258.86 574.937 257.69 573.494 257.69 cv
572.053 257.69 570.882 258.86 570.882 260.302 cv
570.882 261.744 572.053 262.914 573.494 262.914 cv
cp
f
584.046 262.914 mo
585.491 262.914 586.658 261.744 586.658 260.302 cv
586.658 258.86 585.491 257.69 584.046 257.69 cv
582.605 257.69 581.435 258.86 581.435 260.302 cv
581.435 261.744 582.605 262.914 584.046 262.914 cv
cp
f
246.362 273.466 mo
247.804 273.466 248.974 272.297 248.974 270.854 cv
248.974 269.413 247.804 268.243 246.362 268.243 cv
244.919 268.243 243.75 269.413 243.75 270.854 cv
243.75 272.297 244.919 273.466 246.362 273.466 cv
cp
f
256.915 273.466 mo
258.357 273.466 259.526 272.297 259.526 270.854 cv
259.526 269.413 258.357 268.243 256.915 268.243 cv
255.472 268.243 254.303 269.413 254.303 270.854 cv
254.303 272.297 255.472 273.466 256.915 273.466 cv
cp
f
267.467 273.466 mo
268.91 273.466 270.079 272.297 270.079 270.854 cv
270.079 269.413 268.91 268.243 267.467 268.243 cv
266.025 268.243 264.855 269.413 264.855 270.854 cv
264.855 272.297 266.025 273.466 267.467 273.466 cv
cp
f
278.02 273.466 mo
279.462 273.466 280.631 272.297 280.631 270.854 cv
280.631 269.413 279.462 268.243 278.02 268.243 cv
276.578 268.243 275.408 269.413 275.408 270.854 cv
275.408 272.297 276.578 273.466 278.02 273.466 cv
cp
f
288.572 273.466 mo
290.015 273.466 291.184 272.297 291.184 270.854 cv
291.184 269.413 290.015 268.243 288.572 268.243 cv
287.13 268.243 285.961 269.413 285.961 270.854 cv
285.961 272.297 287.13 273.466 288.572 273.466 cv
cp
f
299.125 273.466 mo
300.567 273.466 301.737 272.297 301.737 270.854 cv
301.737 269.413 300.567 268.243 299.125 268.243 cv
297.683 268.243 296.514 269.413 296.514 270.854 cv
296.514 272.297 297.683 273.466 299.125 273.466 cv
cp
f
309.678 273.466 mo
311.12 273.466 312.29 272.297 312.29 270.854 cv
312.29 269.413 311.12 268.243 309.678 268.243 cv
308.235 268.243 307.066 269.413 307.066 270.854 cv
307.066 272.297 308.235 273.466 309.678 273.466 cv
cp
f
320.23 273.466 mo
321.673 273.466 322.842 272.297 322.842 270.854 cv
322.842 269.413 321.673 268.243 320.23 268.243 cv
318.788 268.243 317.619 269.413 317.619 270.854 cv
317.619 272.297 318.788 273.466 320.23 273.466 cv
cp
f
330.783 273.466 mo
332.226 273.466 333.395 272.297 333.395 270.854 cv
333.395 269.413 332.226 268.243 330.783 268.243 cv
329.341 268.243 328.171 269.413 328.171 270.854 cv
328.171 272.297 329.341 273.466 330.783 273.466 cv
cp
f
341.336 273.466 mo
342.778 273.466 343.947 272.297 343.947 270.854 cv
343.947 269.413 342.778 268.243 341.336 268.243 cv
339.894 268.243 338.724 269.413 338.724 270.854 cv
338.724 272.297 339.894 273.466 341.336 273.466 cv
cp
f
351.889 273.466 mo
353.331 273.466 354.5 272.297 354.5 270.854 cv
354.5 269.413 353.331 268.243 351.889 268.243 cv
350.446 268.243 349.277 269.413 349.277 270.854 cv
349.277 272.297 350.446 273.466 351.889 273.466 cv
cp
f
362.441 273.466 mo
363.883 273.466 365.053 272.297 365.053 270.854 cv
365.053 269.413 363.883 268.243 362.441 268.243 cv
360.999 268.243 359.83 269.413 359.83 270.854 cv
359.83 272.297 360.999 273.466 362.441 273.466 cv
cp
f
372.994 273.466 mo
374.436 273.466 375.605 272.297 375.605 270.854 cv
375.605 269.413 374.436 268.243 372.994 268.243 cv
371.551 268.243 370.382 269.413 370.382 270.854 cv
370.382 272.297 371.551 273.466 372.994 273.466 cv
cp
f
383.546 273.466 mo
384.989 273.466 386.158 272.297 386.158 270.854 cv
386.158 269.413 384.989 268.243 383.546 268.243 cv
382.104 268.243 380.935 269.413 380.935 270.854 cv
380.935 272.297 382.104 273.466 383.546 273.466 cv
cp
f
394.099 273.466 mo
395.542 273.466 396.711 272.297 396.711 270.854 cv
396.711 269.413 395.542 268.243 394.099 268.243 cv
392.657 268.243 391.488 269.413 391.488 270.854 cv
391.488 272.297 392.657 273.466 394.099 273.466 cv
cp
f
404.652 273.466 mo
406.093 273.466 407.263 272.297 407.263 270.854 cv
407.263 269.413 406.093 268.243 404.652 268.243 cv
403.208 268.243 402.042 269.413 402.042 270.854 cv
402.042 272.297 403.208 273.466 404.652 273.466 cv
cp
f
415.205 273.466 mo
416.646 273.466 417.816 272.297 417.816 270.854 cv
417.816 269.413 416.646 268.243 415.205 268.243 cv
413.762 268.243 412.593 269.413 412.593 270.854 cv
412.593 272.297 413.762 273.466 415.205 273.466 cv
cp
f
425.757 273.466 mo
427.2 273.466 428.369 272.297 428.369 270.854 cv
428.369 269.413 427.2 268.243 425.757 268.243 cv
424.314 268.243 423.146 269.413 423.146 270.854 cv
423.146 272.297 424.314 273.466 425.757 273.466 cv
cp
f
436.31 273.466 mo
437.751 273.466 438.921 272.297 438.921 270.854 cv
438.921 269.413 437.751 268.243 436.31 268.243 cv
434.867 268.243 433.697 269.413 433.697 270.854 cv
433.697 272.297 434.867 273.466 436.31 273.466 cv
cp
f
446.863 273.466 mo
448.304 273.466 449.474 272.297 449.474 270.854 cv
449.474 269.413 448.304 268.243 446.863 268.243 cv
445.42 268.243 444.25 269.413 444.25 270.854 cv
444.25 272.297 445.42 273.466 446.863 273.466 cv
cp
f
457.417 273.466 mo
458.858 273.466 460.027 272.297 460.027 270.854 cv
460.027 269.413 458.858 268.243 457.417 268.243 cv
455.972 268.243 454.803 269.413 454.803 270.854 cv
454.803 272.297 455.972 273.466 457.417 273.466 cv
cp
f
467.968 273.466 mo
469.41 273.466 470.58 272.297 470.58 270.854 cv
470.58 269.413 469.41 268.243 467.968 268.243 cv
466.525 268.243 465.355 269.413 465.355 270.854 cv
465.355 272.297 466.525 273.466 467.968 273.466 cv
cp
f
478.521 273.466 mo
479.962 273.466 481.132 272.297 481.132 270.854 cv
481.132 269.413 479.962 268.243 478.521 268.243 cv
477.079 268.243 475.908 269.413 475.908 270.854 cv
475.908 272.297 477.079 273.466 478.521 273.466 cv
cp
f
489.072 273.466 mo
490.516 273.466 491.685 272.297 491.685 270.854 cv
491.685 269.413 490.516 268.243 489.072 268.243 cv
487.631 268.243 486.461 269.413 486.461 270.854 cv
486.461 272.297 487.631 273.466 489.072 273.466 cv
cp
f
499.625 273.466 mo
501.068 273.466 502.238 272.297 502.238 270.854 cv
502.238 269.413 501.068 268.243 499.625 268.243 cv
498.183 268.243 497.013 269.413 497.013 270.854 cv
497.013 272.297 498.183 273.466 499.625 273.466 cv
cp
f
510.178 273.466 mo
511.621 273.466 512.792 272.297 512.792 270.854 cv
512.792 269.413 511.621 268.243 510.178 268.243 cv
508.737 268.243 507.566 269.413 507.566 270.854 cv
507.566 272.297 508.737 273.466 510.178 273.466 cv
cp
f
520.73 273.466 mo
522.174 273.466 523.343 272.297 523.343 270.854 cv
523.343 269.413 522.174 268.243 520.73 268.243 cv
519.289 268.243 518.119 269.413 518.119 270.854 cv
518.119 272.297 519.289 273.466 520.73 273.466 cv
cp
f
531.283 273.466 mo
532.726 273.466 533.896 272.297 533.896 270.854 cv
533.896 269.413 532.726 268.243 531.283 268.243 cv
529.841 268.243 528.671 269.413 528.671 270.854 cv
528.671 272.297 529.841 273.466 531.283 273.466 cv
cp
f
541.835 273.466 mo
543.279 273.466 544.447 272.297 544.447 270.854 cv
544.447 269.413 543.279 268.243 541.835 268.243 cv
540.395 268.243 539.224 269.413 539.224 270.854 cv
539.224 272.297 540.395 273.466 541.835 273.466 cv
cp
f
552.388 273.466 mo
553.833 273.466 555 272.297 555 270.854 cv
555 269.413 553.833 268.243 552.388 268.243 cv
550.947 268.243 549.777 269.413 549.777 270.854 cv
549.777 272.297 550.947 273.466 552.388 273.466 cv
cp
f
562.941 273.466 mo
564.384 273.466 565.553 272.297 565.553 270.854 cv
565.553 269.413 564.384 268.243 562.941 268.243 cv
561.5 268.243 560.33 269.413 560.33 270.854 cv
560.33 272.297 561.5 273.466 562.941 273.466 cv
cp
f
573.494 273.466 mo
574.937 273.466 576.105 272.297 576.105 270.854 cv
576.105 269.413 574.937 268.243 573.494 268.243 cv
572.053 268.243 570.882 269.413 570.882 270.854 cv
570.882 272.297 572.053 273.466 573.494 273.466 cv
cp
f
584.046 273.466 mo
585.491 273.466 586.658 272.297 586.658 270.854 cv
586.658 269.413 585.491 268.243 584.046 268.243 cv
582.605 268.243 581.435 269.413 581.435 270.854 cv
581.435 272.297 582.605 273.466 584.046 273.466 cv
cp
f
256.915 284.019 mo
258.357 284.019 259.526 282.85 259.526 281.407 cv
259.526 279.965 258.357 278.796 256.915 278.796 cv
255.472 278.796 254.303 279.965 254.303 281.407 cv
254.303 282.85 255.472 284.019 256.915 284.019 cv
cp
f
267.467 284.019 mo
268.91 284.019 270.079 282.85 270.079 281.407 cv
270.079 279.965 268.91 278.796 267.467 278.796 cv
266.025 278.796 264.855 279.965 264.855 281.407 cv
264.855 282.85 266.025 284.019 267.467 284.019 cv
cp
f
278.02 284.019 mo
279.462 284.019 280.631 282.85 280.631 281.407 cv
280.631 279.965 279.462 278.796 278.02 278.796 cv
276.578 278.796 275.408 279.965 275.408 281.407 cv
275.408 282.85 276.578 284.019 278.02 284.019 cv
cp
f
288.572 284.019 mo
290.015 284.019 291.184 282.85 291.184 281.407 cv
291.184 279.965 290.015 278.796 288.572 278.796 cv
287.13 278.796 285.961 279.965 285.961 281.407 cv
285.961 282.85 287.13 284.019 288.572 284.019 cv
cp
f
299.125 284.019 mo
300.567 284.019 301.737 282.85 301.737 281.407 cv
301.737 279.965 300.567 278.796 299.125 278.796 cv
297.683 278.796 296.514 279.965 296.514 281.407 cv
296.514 282.85 297.683 284.019 299.125 284.019 cv
cp
f
309.678 284.019 mo
311.12 284.019 312.29 282.85 312.29 281.407 cv
312.29 279.965 311.12 278.796 309.678 278.796 cv
308.235 278.796 307.066 279.965 307.066 281.407 cv
307.066 282.85 308.235 284.019 309.678 284.019 cv
cp
f
320.23 284.019 mo
321.673 284.019 322.842 282.85 322.842 281.407 cv
322.842 279.965 321.673 278.796 320.23 278.796 cv
318.788 278.796 317.619 279.965 317.619 281.407 cv
317.619 282.85 318.788 284.019 320.23 284.019 cv
cp
f
330.783 284.019 mo
332.226 284.019 333.395 282.85 333.395 281.407 cv
333.395 279.965 332.226 278.796 330.783 278.796 cv
329.341 278.796 328.171 279.965 328.171 281.407 cv
328.171 282.85 329.341 284.019 330.783 284.019 cv
cp
f
341.336 284.019 mo
342.778 284.019 343.947 282.85 343.947 281.407 cv
343.947 279.965 342.778 278.796 341.336 278.796 cv
339.894 278.796 338.724 279.965 338.724 281.407 cv
338.724 282.85 339.894 284.019 341.336 284.019 cv
cp
f
351.889 284.019 mo
353.331 284.019 354.5 282.85 354.5 281.407 cv
354.5 279.965 353.331 278.796 351.889 278.796 cv
350.446 278.796 349.277 279.965 349.277 281.407 cv
349.277 282.85 350.446 284.019 351.889 284.019 cv
cp
f
362.441 284.019 mo
363.883 284.019 365.053 282.85 365.053 281.407 cv
365.053 279.965 363.883 278.796 362.441 278.796 cv
360.999 278.796 359.83 279.965 359.83 281.407 cv
359.83 282.85 360.999 284.019 362.441 284.019 cv
cp
f
372.994 284.019 mo
374.436 284.019 375.605 282.85 375.605 281.407 cv
375.605 279.965 374.436 278.796 372.994 278.796 cv
371.551 278.796 370.382 279.965 370.382 281.407 cv
370.382 282.85 371.551 284.019 372.994 284.019 cv
cp
f
383.546 284.019 mo
384.989 284.019 386.158 282.85 386.158 281.407 cv
386.158 279.965 384.989 278.796 383.546 278.796 cv
382.104 278.796 380.935 279.965 380.935 281.407 cv
380.935 282.85 382.104 284.019 383.546 284.019 cv
cp
f
394.099 284.019 mo
395.542 284.019 396.711 282.85 396.711 281.407 cv
396.711 279.965 395.542 278.796 394.099 278.796 cv
392.657 278.796 391.488 279.965 391.488 281.407 cv
391.488 282.85 392.657 284.019 394.099 284.019 cv
cp
f
404.652 284.019 mo
406.093 284.019 407.263 282.85 407.263 281.407 cv
407.263 279.965 406.093 278.796 404.652 278.796 cv
403.208 278.796 402.042 279.965 402.042 281.407 cv
402.042 282.85 403.208 284.019 404.652 284.019 cv
cp
f
415.205 284.019 mo
416.646 284.019 417.816 282.85 417.816 281.407 cv
417.816 279.965 416.646 278.796 415.205 278.796 cv
413.762 278.796 412.593 279.965 412.593 281.407 cv
412.593 282.85 413.762 284.019 415.205 284.019 cv
cp
f
425.757 284.019 mo
427.2 284.019 428.369 282.85 428.369 281.407 cv
428.369 279.965 427.2 278.796 425.757 278.796 cv
424.314 278.796 423.146 279.965 423.146 281.407 cv
423.146 282.85 424.314 284.019 425.757 284.019 cv
cp
f
436.31 284.019 mo
437.751 284.019 438.921 282.85 438.921 281.407 cv
438.921 279.965 437.751 278.796 436.31 278.796 cv
434.867 278.796 433.697 279.965 433.697 281.407 cv
433.697 282.85 434.867 284.019 436.31 284.019 cv
cp
f
446.863 284.019 mo
448.304 284.019 449.474 282.85 449.474 281.407 cv
449.474 279.965 448.304 278.796 446.863 278.796 cv
445.42 278.796 444.25 279.965 444.25 281.407 cv
444.25 282.85 445.42 284.019 446.863 284.019 cv
cp
f
457.417 284.019 mo
458.858 284.019 460.027 282.85 460.027 281.407 cv
460.027 279.965 458.858 278.796 457.417 278.796 cv
455.972 278.796 454.803 279.965 454.803 281.407 cv
454.803 282.85 455.972 284.019 457.417 284.019 cv
cp
f
467.968 284.019 mo
469.41 284.019 470.58 282.85 470.58 281.407 cv
470.58 279.965 469.41 278.796 467.968 278.796 cv
466.525 278.796 465.355 279.965 465.355 281.407 cv
465.355 282.85 466.525 284.019 467.968 284.019 cv
cp
f
478.521 284.019 mo
479.962 284.019 481.132 282.85 481.132 281.407 cv
481.132 279.965 479.962 278.796 478.521 278.796 cv
477.079 278.796 475.908 279.965 475.908 281.407 cv
475.908 282.85 477.079 284.019 478.521 284.019 cv
cp
f
489.072 284.019 mo
490.516 284.019 491.685 282.85 491.685 281.407 cv
491.685 279.965 490.516 278.796 489.072 278.796 cv
487.631 278.796 486.461 279.965 486.461 281.407 cv
486.461 282.85 487.631 284.019 489.072 284.019 cv
cp
f
499.625 284.019 mo
501.068 284.019 502.238 282.85 502.238 281.407 cv
502.238 279.965 501.068 278.796 499.625 278.796 cv
498.183 278.796 497.013 279.965 497.013 281.407 cv
497.013 282.85 498.183 284.019 499.625 284.019 cv
cp
f
510.178 284.019 mo
511.621 284.019 512.792 282.85 512.792 281.407 cv
512.792 279.965 511.621 278.796 510.178 278.796 cv
508.737 278.796 507.566 279.965 507.566 281.407 cv
507.566 282.85 508.737 284.019 510.178 284.019 cv
cp
f
520.73 284.019 mo
522.174 284.019 523.343 282.85 523.343 281.407 cv
523.343 279.965 522.174 278.796 520.73 278.796 cv
519.289 278.796 518.119 279.965 518.119 281.407 cv
518.119 282.85 519.289 284.019 520.73 284.019 cv
cp
f
531.283 284.019 mo
532.726 284.019 533.896 282.85 533.896 281.407 cv
533.896 279.965 532.726 278.796 531.283 278.796 cv
529.841 278.796 528.671 279.965 528.671 281.407 cv
528.671 282.85 529.841 284.019 531.283 284.019 cv
cp
f
541.835 284.019 mo
543.279 284.019 544.447 282.85 544.447 281.407 cv
544.447 279.965 543.279 278.796 541.835 278.796 cv
540.395 278.796 539.224 279.965 539.224 281.407 cv
539.224 282.85 540.395 284.019 541.835 284.019 cv
cp
f
552.388 284.019 mo
553.833 284.019 555 282.85 555 281.407 cv
555 279.965 553.833 278.796 552.388 278.796 cv
550.947 278.796 549.777 279.965 549.777 281.407 cv
549.777 282.85 550.947 284.019 552.388 284.019 cv
cp
f
562.941 284.019 mo
564.384 284.019 565.553 282.85 565.553 281.407 cv
565.553 279.965 564.384 278.796 562.941 278.796 cv
561.5 278.796 560.33 279.965 560.33 281.407 cv
560.33 282.85 561.5 284.019 562.941 284.019 cv
cp
f
573.494 284.019 mo
574.937 284.019 576.105 282.85 576.105 281.407 cv
576.105 279.965 574.937 278.796 573.494 278.796 cv
572.053 278.796 570.882 279.965 570.882 281.407 cv
570.882 282.85 572.053 284.019 573.494 284.019 cv
cp
f
584.046 284.019 mo
585.491 284.019 586.658 282.85 586.658 281.407 cv
586.658 279.965 585.491 278.796 584.046 278.796 cv
582.605 278.796 581.435 279.965 581.435 281.407 cv
581.435 282.85 582.605 284.019 584.046 284.019 cv
cp
f
225.256 294.572 mo
226.699 294.572 227.868 293.402 227.868 291.96 cv
227.868 290.518 226.699 289.349 225.256 289.349 cv
223.814 289.349 222.645 290.518 222.645 291.96 cv
222.645 293.402 223.814 294.572 225.256 294.572 cv
cp
f
235.809 294.572 mo
237.251 294.572 238.421 293.402 238.421 291.96 cv
238.421 290.518 237.251 289.349 235.809 289.349 cv
234.367 289.349 233.197 290.518 233.197 291.96 cv
233.197 293.402 234.367 294.572 235.809 294.572 cv
cp
f
246.362 294.572 mo
247.804 294.572 248.974 293.402 248.974 291.96 cv
248.974 290.518 247.804 289.349 246.362 289.349 cv
244.919 289.349 243.75 290.518 243.75 291.96 cv
243.75 293.402 244.919 294.572 246.362 294.572 cv
cp
f
256.915 294.572 mo
258.357 294.572 259.526 293.402 259.526 291.96 cv
259.526 290.518 258.357 289.349 256.915 289.349 cv
255.472 289.349 254.303 290.518 254.303 291.96 cv
254.303 293.402 255.472 294.572 256.915 294.572 cv
cp
f
267.467 294.572 mo
268.91 294.572 270.079 293.402 270.079 291.96 cv
270.079 290.518 268.91 289.349 267.467 289.349 cv
266.025 289.349 264.855 290.518 264.855 291.96 cv
264.855 293.402 266.025 294.572 267.467 294.572 cv
cp
f
278.02 294.572 mo
279.462 294.572 280.631 293.402 280.631 291.96 cv
280.631 290.518 279.462 289.349 278.02 289.349 cv
276.578 289.349 275.408 290.518 275.408 291.96 cv
275.408 293.402 276.578 294.572 278.02 294.572 cv
cp
f
288.572 294.572 mo
290.015 294.572 291.184 293.402 291.184 291.96 cv
291.184 290.518 290.015 289.349 288.572 289.349 cv
287.13 289.349 285.961 290.518 285.961 291.96 cv
285.961 293.402 287.13 294.572 288.572 294.572 cv
cp
f
299.125 294.572 mo
300.567 294.572 301.737 293.402 301.737 291.96 cv
301.737 290.518 300.567 289.349 299.125 289.349 cv
297.683 289.349 296.514 290.518 296.514 291.96 cv
296.514 293.402 297.683 294.572 299.125 294.572 cv
cp
f
309.678 294.572 mo
311.12 294.572 312.29 293.402 312.29 291.96 cv
312.29 290.518 311.12 289.349 309.678 289.349 cv
308.235 289.349 307.066 290.518 307.066 291.96 cv
307.066 293.402 308.235 294.572 309.678 294.572 cv
cp
f
320.23 294.572 mo
321.673 294.572 322.842 293.402 322.842 291.96 cv
322.842 290.518 321.673 289.349 320.23 289.349 cv
318.788 289.349 317.619 290.518 317.619 291.96 cv
317.619 293.402 318.788 294.572 320.23 294.572 cv
cp
f
330.783 294.572 mo
332.226 294.572 333.395 293.402 333.395 291.96 cv
333.395 290.518 332.226 289.349 330.783 289.349 cv
329.341 289.349 328.171 290.518 328.171 291.96 cv
328.171 293.402 329.341 294.572 330.783 294.572 cv
cp
f
341.336 294.572 mo
342.778 294.572 343.947 293.402 343.947 291.96 cv
343.947 290.518 342.778 289.349 341.336 289.349 cv
339.894 289.349 338.724 290.518 338.724 291.96 cv
338.724 293.402 339.894 294.572 341.336 294.572 cv
cp
f
351.889 294.572 mo
353.331 294.572 354.5 293.402 354.5 291.96 cv
354.5 290.518 353.331 289.349 351.889 289.349 cv
350.446 289.349 349.277 290.518 349.277 291.96 cv
349.277 293.402 350.446 294.572 351.889 294.572 cv
cp
f
362.441 294.572 mo
363.883 294.572 365.053 293.402 365.053 291.96 cv
365.053 290.518 363.883 289.349 362.441 289.349 cv
360.999 289.349 359.83 290.518 359.83 291.96 cv
359.83 293.402 360.999 294.572 362.441 294.572 cv
cp
f
372.994 294.572 mo
374.436 294.572 375.605 293.402 375.605 291.96 cv
375.605 290.518 374.436 289.349 372.994 289.349 cv
371.551 289.349 370.382 290.518 370.382 291.96 cv
370.382 293.402 371.551 294.572 372.994 294.572 cv
cp
f
383.546 294.572 mo
384.989 294.572 386.158 293.402 386.158 291.96 cv
386.158 290.518 384.989 289.349 383.546 289.349 cv
382.104 289.349 380.935 290.518 380.935 291.96 cv
380.935 293.402 382.104 294.572 383.546 294.572 cv
cp
f
394.099 294.572 mo
395.542 294.572 396.711 293.402 396.711 291.96 cv
396.711 290.518 395.542 289.349 394.099 289.349 cv
392.657 289.349 391.488 290.518 391.488 291.96 cv
391.488 293.402 392.657 294.572 394.099 294.572 cv
cp
f
404.652 294.572 mo
406.093 294.572 407.263 293.402 407.263 291.96 cv
407.263 290.518 406.093 289.349 404.652 289.349 cv
403.208 289.349 402.042 290.518 402.042 291.96 cv
402.042 293.402 403.208 294.572 404.652 294.572 cv
cp
f
415.205 294.572 mo
416.646 294.572 417.816 293.402 417.816 291.96 cv
417.816 290.518 416.646 289.349 415.205 289.349 cv
413.762 289.349 412.593 290.518 412.593 291.96 cv
412.593 293.402 413.762 294.572 415.205 294.572 cv
cp
f
425.757 294.572 mo
427.2 294.572 428.369 293.402 428.369 291.96 cv
428.369 290.518 427.2 289.349 425.757 289.349 cv
424.314 289.349 423.146 290.518 423.146 291.96 cv
423.146 293.402 424.314 294.572 425.757 294.572 cv
cp
f
436.31 294.572 mo
437.751 294.572 438.921 293.402 438.921 291.96 cv
438.921 290.518 437.751 289.349 436.31 289.349 cv
434.867 289.349 433.697 290.518 433.697 291.96 cv
433.697 293.402 434.867 294.572 436.31 294.572 cv
cp
f
446.863 294.572 mo
448.304 294.572 449.474 293.402 449.474 291.96 cv
449.474 290.518 448.304 289.349 446.863 289.349 cv
445.42 289.349 444.25 290.518 444.25 291.96 cv
444.25 293.402 445.42 294.572 446.863 294.572 cv
cp
f
457.417 294.572 mo
458.858 294.572 460.027 293.402 460.027 291.96 cv
460.027 290.518 458.858 289.349 457.417 289.349 cv
455.972 289.349 454.803 290.518 454.803 291.96 cv
454.803 293.402 455.972 294.572 457.417 294.572 cv
cp
f
467.968 294.572 mo
469.41 294.572 470.58 293.402 470.58 291.96 cv
470.58 290.518 469.41 289.349 467.968 289.349 cv
466.525 289.349 465.355 290.518 465.355 291.96 cv
465.355 293.402 466.525 294.572 467.968 294.572 cv
cp
f
478.521 294.572 mo
479.962 294.572 481.132 293.402 481.132 291.96 cv
481.132 290.518 479.962 289.349 478.521 289.349 cv
477.079 289.349 475.908 290.518 475.908 291.96 cv
475.908 293.402 477.079 294.572 478.521 294.572 cv
cp
f
489.072 294.572 mo
490.516 294.572 491.685 293.402 491.685 291.96 cv
491.685 290.518 490.516 289.349 489.072 289.349 cv
487.631 289.349 486.461 290.518 486.461 291.96 cv
486.461 293.402 487.631 294.572 489.072 294.572 cv
cp
f
499.625 294.572 mo
501.068 294.572 502.238 293.402 502.238 291.96 cv
502.238 290.518 501.068 289.349 499.625 289.349 cv
498.183 289.349 497.013 290.518 497.013 291.96 cv
497.013 293.402 498.183 294.572 499.625 294.572 cv
cp
f
510.178 294.572 mo
511.621 294.572 512.792 293.402 512.792 291.96 cv
512.792 290.518 511.621 289.349 510.178 289.349 cv
508.737 289.349 507.566 290.518 507.566 291.96 cv
507.566 293.402 508.737 294.572 510.178 294.572 cv
cp
f
520.73 294.572 mo
522.174 294.572 523.343 293.402 523.343 291.96 cv
523.343 290.518 522.174 289.349 520.73 289.349 cv
519.289 289.349 518.119 290.518 518.119 291.96 cv
518.119 293.402 519.289 294.572 520.73 294.572 cv
cp
f
531.283 294.572 mo
532.726 294.572 533.896 293.402 533.896 291.96 cv
533.896 290.518 532.726 289.349 531.283 289.349 cv
529.841 289.349 528.671 290.518 528.671 291.96 cv
528.671 293.402 529.841 294.572 531.283 294.572 cv
cp
f
541.835 294.572 mo
543.279 294.572 544.447 293.402 544.447 291.96 cv
544.447 290.518 543.279 289.349 541.835 289.349 cv
540.395 289.349 539.224 290.518 539.224 291.96 cv
539.224 293.402 540.395 294.572 541.835 294.572 cv
cp
f
552.388 294.572 mo
553.833 294.572 555 293.402 555 291.96 cv
555 290.518 553.833 289.349 552.388 289.349 cv
550.947 289.349 549.777 290.518 549.777 291.96 cv
549.777 293.402 550.947 294.572 552.388 294.572 cv
cp
f
562.941 294.572 mo
564.384 294.572 565.553 293.402 565.553 291.96 cv
565.553 290.518 564.384 289.349 562.941 289.349 cv
561.5 289.349 560.33 290.518 560.33 291.96 cv
560.33 293.402 561.5 294.572 562.941 294.572 cv
cp
f
573.494 294.572 mo
574.937 294.572 576.105 293.402 576.105 291.96 cv
576.105 290.518 574.937 289.349 573.494 289.349 cv
572.053 289.349 570.882 290.518 570.882 291.96 cv
570.882 293.402 572.053 294.572 573.494 294.572 cv
cp
f
225.256 305.125 mo
226.699 305.125 227.868 303.955 227.868 302.513 cv
227.868 301.07 226.699 299.901 225.256 299.901 cv
223.814 299.901 222.645 301.07 222.645 302.513 cv
222.645 303.955 223.814 305.125 225.256 305.125 cv
cp
f
235.809 305.125 mo
237.251 305.125 238.421 303.955 238.421 302.513 cv
238.421 301.07 237.251 299.901 235.809 299.901 cv
234.367 299.901 233.197 301.07 233.197 302.513 cv
233.197 303.955 234.367 305.125 235.809 305.125 cv
cp
f
246.362 305.125 mo
247.804 305.125 248.974 303.955 248.974 302.513 cv
248.974 301.07 247.804 299.901 246.362 299.901 cv
244.919 299.901 243.75 301.07 243.75 302.513 cv
243.75 303.955 244.919 305.125 246.362 305.125 cv
cp
f
256.915 305.125 mo
258.357 305.125 259.526 303.955 259.526 302.513 cv
259.526 301.07 258.357 299.901 256.915 299.901 cv
255.472 299.901 254.303 301.07 254.303 302.513 cv
254.303 303.955 255.472 305.125 256.915 305.125 cv
cp
f
267.467 305.125 mo
268.91 305.125 270.079 303.955 270.079 302.513 cv
270.079 301.07 268.91 299.901 267.467 299.901 cv
266.025 299.901 264.855 301.07 264.855 302.513 cv
264.855 303.955 266.025 305.125 267.467 305.125 cv
cp
f
278.02 305.125 mo
279.462 305.125 280.631 303.955 280.631 302.513 cv
280.631 301.07 279.462 299.901 278.02 299.901 cv
276.578 299.901 275.408 301.07 275.408 302.513 cv
275.408 303.955 276.578 305.125 278.02 305.125 cv
cp
f
288.572 305.125 mo
290.015 305.125 291.184 303.955 291.184 302.513 cv
291.184 301.07 290.015 299.901 288.572 299.901 cv
287.13 299.901 285.961 301.07 285.961 302.513 cv
285.961 303.955 287.13 305.125 288.572 305.125 cv
cp
f
299.125 305.125 mo
300.567 305.125 301.737 303.955 301.737 302.513 cv
301.737 301.07 300.567 299.901 299.125 299.901 cv
297.683 299.901 296.514 301.07 296.514 302.513 cv
296.514 303.955 297.683 305.125 299.125 305.125 cv
cp
f
309.678 305.125 mo
311.12 305.125 312.29 303.955 312.29 302.513 cv
312.29 301.07 311.12 299.901 309.678 299.901 cv
308.235 299.901 307.066 301.07 307.066 302.513 cv
307.066 303.955 308.235 305.125 309.678 305.125 cv
cp
f
320.23 305.125 mo
321.673 305.125 322.842 303.955 322.842 302.513 cv
322.842 301.07 321.673 299.901 320.23 299.901 cv
318.788 299.901 317.619 301.07 317.619 302.513 cv
317.619 303.955 318.788 305.125 320.23 305.125 cv
cp
f
330.783 305.125 mo
332.226 305.125 333.395 303.955 333.395 302.513 cv
333.395 301.07 332.226 299.901 330.783 299.901 cv
329.341 299.901 328.171 301.07 328.171 302.513 cv
328.171 303.955 329.341 305.125 330.783 305.125 cv
cp
f
341.336 305.125 mo
342.778 305.125 343.947 303.955 343.947 302.513 cv
343.947 301.07 342.778 299.901 341.336 299.901 cv
339.894 299.901 338.724 301.07 338.724 302.513 cv
338.724 303.955 339.894 305.125 341.336 305.125 cv
cp
f
351.889 305.125 mo
353.331 305.125 354.5 303.955 354.5 302.513 cv
354.5 301.07 353.331 299.901 351.889 299.901 cv
350.446 299.901 349.277 301.07 349.277 302.513 cv
349.277 303.955 350.446 305.125 351.889 305.125 cv
cp
f
362.441 305.125 mo
363.883 305.125 365.053 303.955 365.053 302.513 cv
365.053 301.07 363.883 299.901 362.441 299.901 cv
360.999 299.901 359.83 301.07 359.83 302.513 cv
359.83 303.955 360.999 305.125 362.441 305.125 cv
cp
f
372.994 305.125 mo
374.436 305.125 375.605 303.955 375.605 302.513 cv
375.605 301.07 374.436 299.901 372.994 299.901 cv
371.551 299.901 370.382 301.07 370.382 302.513 cv
370.382 303.955 371.551 305.125 372.994 305.125 cv
cp
f
383.546 305.125 mo
384.989 305.125 386.158 303.955 386.158 302.513 cv
386.158 301.07 384.989 299.901 383.546 299.901 cv
382.104 299.901 380.935 301.07 380.935 302.513 cv
380.935 303.955 382.104 305.125 383.546 305.125 cv
cp
f
394.099 305.125 mo
395.542 305.125 396.711 303.955 396.711 302.513 cv
396.711 301.07 395.542 299.901 394.099 299.901 cv
392.657 299.901 391.488 301.07 391.488 302.513 cv
391.488 303.955 392.657 305.125 394.099 305.125 cv
cp
f
404.652 305.125 mo
406.093 305.125 407.263 303.955 407.263 302.513 cv
407.263 301.07 406.093 299.901 404.652 299.901 cv
403.208 299.901 402.042 301.07 402.042 302.513 cv
402.042 303.955 403.208 305.125 404.652 305.125 cv
cp
f
415.205 305.125 mo
416.646 305.125 417.816 303.955 417.816 302.513 cv
417.816 301.07 416.646 299.901 415.205 299.901 cv
413.762 299.901 412.593 301.07 412.593 302.513 cv
412.593 303.955 413.762 305.125 415.205 305.125 cv
cp
f
425.757 305.125 mo
427.2 305.125 428.369 303.955 428.369 302.513 cv
428.369 301.07 427.2 299.901 425.757 299.901 cv
424.314 299.901 423.146 301.07 423.146 302.513 cv
423.146 303.955 424.314 305.125 425.757 305.125 cv
cp
f
436.31 305.125 mo
437.751 305.125 438.921 303.955 438.921 302.513 cv
438.921 301.07 437.751 299.901 436.31 299.901 cv
434.867 299.901 433.697 301.07 433.697 302.513 cv
433.697 303.955 434.867 305.125 436.31 305.125 cv
cp
f
446.863 305.125 mo
448.304 305.125 449.474 303.955 449.474 302.513 cv
449.474 301.07 448.304 299.901 446.863 299.901 cv
445.42 299.901 444.25 301.07 444.25 302.513 cv
444.25 303.955 445.42 305.125 446.863 305.125 cv
cp
f
457.417 305.125 mo
458.858 305.125 460.027 303.955 460.027 302.513 cv
460.027 301.07 458.858 299.901 457.417 299.901 cv
455.972 299.901 454.803 301.07 454.803 302.513 cv
454.803 303.955 455.972 305.125 457.417 305.125 cv
cp
f
467.968 305.125 mo
469.41 305.125 470.58 303.955 470.58 302.513 cv
470.58 301.07 469.41 299.901 467.968 299.901 cv
466.525 299.901 465.355 301.07 465.355 302.513 cv
465.355 303.955 466.525 305.125 467.968 305.125 cv
cp
f
478.521 305.125 mo
479.962 305.125 481.132 303.955 481.132 302.513 cv
481.132 301.07 479.962 299.901 478.521 299.901 cv
477.079 299.901 475.908 301.07 475.908 302.513 cv
475.908 303.955 477.079 305.125 478.521 305.125 cv
cp
f
489.072 305.125 mo
490.516 305.125 491.685 303.955 491.685 302.513 cv
491.685 301.07 490.516 299.901 489.072 299.901 cv
487.631 299.901 486.461 301.07 486.461 302.513 cv
486.461 303.955 487.631 305.125 489.072 305.125 cv
cp
f
499.625 305.125 mo
501.068 305.125 502.238 303.955 502.238 302.513 cv
502.238 301.07 501.068 299.901 499.625 299.901 cv
498.183 299.901 497.013 301.07 497.013 302.513 cv
497.013 303.955 498.183 305.125 499.625 305.125 cv
cp
f
510.178 305.125 mo
511.621 305.125 512.792 303.955 512.792 302.513 cv
512.792 301.07 511.621 299.901 510.178 299.901 cv
508.737 299.901 507.566 301.07 507.566 302.513 cv
507.566 303.955 508.737 305.125 510.178 305.125 cv
cp
f
520.73 305.125 mo
522.174 305.125 523.343 303.955 523.343 302.513 cv
523.343 301.07 522.174 299.901 520.73 299.901 cv
519.289 299.901 518.119 301.07 518.119 302.513 cv
518.119 303.955 519.289 305.125 520.73 305.125 cv
cp
f
531.283 305.125 mo
532.726 305.125 533.896 303.955 533.896 302.513 cv
533.896 301.07 532.726 299.901 531.283 299.901 cv
529.841 299.901 528.671 301.07 528.671 302.513 cv
528.671 303.955 529.841 305.125 531.283 305.125 cv
cp
f
541.835 305.125 mo
543.279 305.125 544.447 303.955 544.447 302.513 cv
544.447 301.07 543.279 299.901 541.835 299.901 cv
540.395 299.901 539.224 301.07 539.224 302.513 cv
539.224 303.955 540.395 305.125 541.835 305.125 cv
cp
f
552.388 305.125 mo
553.833 305.125 555 303.955 555 302.513 cv
555 301.07 553.833 299.901 552.388 299.901 cv
550.947 299.901 549.777 301.07 549.777 302.513 cv
549.777 303.955 550.947 305.125 552.388 305.125 cv
cp
f
562.941 305.125 mo
564.384 305.125 565.553 303.955 565.553 302.513 cv
565.553 301.07 564.384 299.901 562.941 299.901 cv
561.5 299.901 560.33 301.07 560.33 302.513 cv
560.33 303.955 561.5 305.125 562.941 305.125 cv
cp
f
573.494 305.125 mo
574.937 305.125 576.105 303.955 576.105 302.513 cv
576.105 301.07 574.937 299.901 573.494 299.901 cv
572.053 299.901 570.882 301.07 570.882 302.513 cv
570.882 303.955 572.053 305.125 573.494 305.125 cv
cp
f
626.257 305.125 mo
627.701 305.125 628.869 303.955 628.869 302.513 cv
628.869 301.07 627.701 299.901 626.257 299.901 cv
624.816 299.901 623.646 301.07 623.646 302.513 cv
623.646 303.955 624.816 305.125 626.257 305.125 cv
cp
f
214.704 315.677 mo
216.146 315.677 217.315 314.508 217.315 313.065 cv
217.315 311.623 216.146 310.454 214.704 310.454 cv
213.261 310.454 212.092 311.623 212.092 313.065 cv
212.092 314.508 213.261 315.677 214.704 315.677 cv
cp
f
225.256 315.677 mo
226.699 315.677 227.868 314.508 227.868 313.065 cv
227.868 311.623 226.699 310.454 225.256 310.454 cv
223.814 310.454 222.645 311.623 222.645 313.065 cv
222.645 314.508 223.814 315.677 225.256 315.677 cv
cp
f
235.809 315.677 mo
237.251 315.677 238.421 314.508 238.421 313.065 cv
238.421 311.623 237.251 310.454 235.809 310.454 cv
234.367 310.454 233.197 311.623 233.197 313.065 cv
233.197 314.508 234.367 315.677 235.809 315.677 cv
cp
f
246.362 315.677 mo
247.804 315.677 248.974 314.508 248.974 313.065 cv
248.974 311.623 247.804 310.454 246.362 310.454 cv
244.919 310.454 243.75 311.623 243.75 313.065 cv
243.75 314.508 244.919 315.677 246.362 315.677 cv
cp
f
256.915 315.677 mo
258.357 315.677 259.526 314.508 259.526 313.065 cv
259.526 311.623 258.357 310.454 256.915 310.454 cv
255.472 310.454 254.303 311.623 254.303 313.065 cv
254.303 314.508 255.472 315.677 256.915 315.677 cv
cp
f
267.467 315.677 mo
268.91 315.677 270.079 314.508 270.079 313.065 cv
270.079 311.623 268.91 310.454 267.467 310.454 cv
266.025 310.454 264.855 311.623 264.855 313.065 cv
264.855 314.508 266.025 315.677 267.467 315.677 cv
cp
f
278.02 315.677 mo
279.462 315.677 280.631 314.508 280.631 313.065 cv
280.631 311.623 279.462 310.454 278.02 310.454 cv
276.578 310.454 275.408 311.623 275.408 313.065 cv
275.408 314.508 276.578 315.677 278.02 315.677 cv
cp
f
288.572 315.677 mo
290.015 315.677 291.184 314.508 291.184 313.065 cv
291.184 311.623 290.015 310.454 288.572 310.454 cv
287.13 310.454 285.961 311.623 285.961 313.065 cv
285.961 314.508 287.13 315.677 288.572 315.677 cv
cp
f
299.125 315.677 mo
300.567 315.677 301.737 314.508 301.737 313.065 cv
301.737 311.623 300.567 310.454 299.125 310.454 cv
297.683 310.454 296.514 311.623 296.514 313.065 cv
296.514 314.508 297.683 315.677 299.125 315.677 cv
cp
f
309.678 315.677 mo
311.12 315.677 312.29 314.508 312.29 313.065 cv
312.29 311.623 311.12 310.454 309.678 310.454 cv
308.235 310.454 307.066 311.623 307.066 313.065 cv
307.066 314.508 308.235 315.677 309.678 315.677 cv
cp
f
320.23 315.677 mo
321.673 315.677 322.842 314.508 322.842 313.065 cv
322.842 311.623 321.673 310.454 320.23 310.454 cv
318.788 310.454 317.619 311.623 317.619 313.065 cv
317.619 314.508 318.788 315.677 320.23 315.677 cv
cp
f
330.783 315.677 mo
332.226 315.677 333.395 314.508 333.395 313.065 cv
333.395 311.623 332.226 310.454 330.783 310.454 cv
329.341 310.454 328.171 311.623 328.171 313.065 cv
328.171 314.508 329.341 315.677 330.783 315.677 cv
cp
f
341.336 315.677 mo
342.778 315.677 343.947 314.508 343.947 313.065 cv
343.947 311.623 342.778 310.454 341.336 310.454 cv
339.894 310.454 338.724 311.623 338.724 313.065 cv
338.724 314.508 339.894 315.677 341.336 315.677 cv
cp
f
351.889 315.677 mo
353.331 315.677 354.5 314.508 354.5 313.065 cv
354.5 311.623 353.331 310.454 351.889 310.454 cv
350.446 310.454 349.277 311.623 349.277 313.065 cv
349.277 314.508 350.446 315.677 351.889 315.677 cv
cp
f
362.441 315.677 mo
363.883 315.677 365.053 314.508 365.053 313.065 cv
365.053 311.623 363.883 310.454 362.441 310.454 cv
360.999 310.454 359.83 311.623 359.83 313.065 cv
359.83 314.508 360.999 315.677 362.441 315.677 cv
cp
f
372.994 315.677 mo
374.436 315.677 375.605 314.508 375.605 313.065 cv
375.605 311.623 374.436 310.454 372.994 310.454 cv
371.551 310.454 370.382 311.623 370.382 313.065 cv
370.382 314.508 371.551 315.677 372.994 315.677 cv
cp
f
383.546 315.677 mo
384.989 315.677 386.158 314.508 386.158 313.065 cv
386.158 311.623 384.989 310.454 383.546 310.454 cv
382.104 310.454 380.935 311.623 380.935 313.065 cv
380.935 314.508 382.104 315.677 383.546 315.677 cv
cp
f
394.099 315.677 mo
395.542 315.677 396.711 314.508 396.711 313.065 cv
396.711 311.623 395.542 310.454 394.099 310.454 cv
392.657 310.454 391.488 311.623 391.488 313.065 cv
391.488 314.508 392.657 315.677 394.099 315.677 cv
cp
f
404.652 315.677 mo
406.093 315.677 407.263 314.508 407.263 313.065 cv
407.263 311.623 406.093 310.454 404.652 310.454 cv
403.208 310.454 402.042 311.623 402.042 313.065 cv
402.042 314.508 403.208 315.677 404.652 315.677 cv
cp
f
415.205 315.677 mo
416.646 315.677 417.816 314.508 417.816 313.065 cv
417.816 311.623 416.646 310.454 415.205 310.454 cv
413.762 310.454 412.593 311.623 412.593 313.065 cv
412.593 314.508 413.762 315.677 415.205 315.677 cv
cp
f
425.757 315.677 mo
427.2 315.677 428.369 314.508 428.369 313.065 cv
428.369 311.623 427.2 310.454 425.757 310.454 cv
424.314 310.454 423.146 311.623 423.146 313.065 cv
423.146 314.508 424.314 315.677 425.757 315.677 cv
cp
f
436.31 315.677 mo
437.751 315.677 438.921 314.508 438.921 313.065 cv
438.921 311.623 437.751 310.454 436.31 310.454 cv
434.867 310.454 433.697 311.623 433.697 313.065 cv
433.697 314.508 434.867 315.677 436.31 315.677 cv
cp
f
446.863 315.677 mo
448.304 315.677 449.474 314.508 449.474 313.065 cv
449.474 311.623 448.304 310.454 446.863 310.454 cv
445.42 310.454 444.25 311.623 444.25 313.065 cv
444.25 314.508 445.42 315.677 446.863 315.677 cv
cp
f
457.417 315.677 mo
458.858 315.677 460.027 314.508 460.027 313.065 cv
460.027 311.623 458.858 310.454 457.417 310.454 cv
455.972 310.454 454.803 311.623 454.803 313.065 cv
454.803 314.508 455.972 315.677 457.417 315.677 cv
cp
f
467.968 315.677 mo
469.41 315.677 470.58 314.508 470.58 313.065 cv
470.58 311.623 469.41 310.454 467.968 310.454 cv
466.525 310.454 465.355 311.623 465.355 313.065 cv
465.355 314.508 466.525 315.677 467.968 315.677 cv
cp
f
478.521 315.677 mo
479.962 315.677 481.132 314.508 481.132 313.065 cv
481.132 311.623 479.962 310.454 478.521 310.454 cv
477.079 310.454 475.908 311.623 475.908 313.065 cv
475.908 314.508 477.079 315.677 478.521 315.677 cv
cp
f
489.072 315.677 mo
490.516 315.677 491.685 314.508 491.685 313.065 cv
491.685 311.623 490.516 310.454 489.072 310.454 cv
487.631 310.454 486.461 311.623 486.461 313.065 cv
486.461 314.508 487.631 315.677 489.072 315.677 cv
cp
f
499.625 315.677 mo
501.068 315.677 502.238 314.508 502.238 313.065 cv
502.238 311.623 501.068 310.454 499.625 310.454 cv
498.183 310.454 497.013 311.623 497.013 313.065 cv
497.013 314.508 498.183 315.677 499.625 315.677 cv
cp
f
510.178 315.677 mo
511.621 315.677 512.792 314.508 512.792 313.065 cv
512.792 311.623 511.621 310.454 510.178 310.454 cv
508.737 310.454 507.566 311.623 507.566 313.065 cv
507.566 314.508 508.737 315.677 510.178 315.677 cv
cp
f
520.73 315.677 mo
522.174 315.677 523.343 314.508 523.343 313.065 cv
523.343 311.623 522.174 310.454 520.73 310.454 cv
519.289 310.454 518.119 311.623 518.119 313.065 cv
518.119 314.508 519.289 315.677 520.73 315.677 cv
cp
f
531.283 315.677 mo
532.726 315.677 533.896 314.508 533.896 313.065 cv
533.896 311.623 532.726 310.454 531.283 310.454 cv
529.841 310.454 528.671 311.623 528.671 313.065 cv
528.671 314.508 529.841 315.677 531.283 315.677 cv
cp
f
541.835 315.677 mo
543.279 315.677 544.447 314.508 544.447 313.065 cv
544.447 311.623 543.279 310.454 541.835 310.454 cv
540.395 310.454 539.224 311.623 539.224 313.065 cv
539.224 314.508 540.395 315.677 541.835 315.677 cv
cp
f
552.388 315.677 mo
553.833 315.677 555 314.508 555 313.065 cv
555 311.623 553.833 310.454 552.388 310.454 cv
550.947 310.454 549.777 311.623 549.777 313.065 cv
549.777 314.508 550.947 315.677 552.388 315.677 cv
cp
f
562.941 315.677 mo
564.384 315.677 565.553 314.508 565.553 313.065 cv
565.553 311.623 564.384 310.454 562.941 310.454 cv
561.5 310.454 560.33 311.623 560.33 313.065 cv
560.33 314.508 561.5 315.677 562.941 315.677 cv
cp
f
573.494 315.677 mo
574.937 315.677 576.105 314.508 576.105 313.065 cv
576.105 311.623 574.937 310.454 573.494 310.454 cv
572.053 310.454 570.882 311.623 570.882 313.065 cv
570.882 314.508 572.053 315.677 573.494 315.677 cv
cp
f
584.046 315.677 mo
585.491 315.677 586.658 314.508 586.658 313.065 cv
586.658 311.623 585.491 310.454 584.046 310.454 cv
582.605 310.454 581.435 311.623 581.435 313.065 cv
581.435 314.508 582.605 315.677 584.046 315.677 cv
cp
f
594.599 315.677 mo
596.042 315.677 597.21 314.508 597.21 313.065 cv
597.21 311.623 596.042 310.454 594.599 310.454 cv
593.158 310.454 591.988 311.623 591.988 313.065 cv
591.988 314.508 593.158 315.677 594.599 315.677 cv
cp
f
605.152 315.677 mo
606.595 315.677 607.763 314.508 607.763 313.065 cv
607.763 311.623 606.595 310.454 605.152 310.454 cv
603.71 310.454 602.542 311.623 602.542 313.065 cv
602.542 314.508 603.71 315.677 605.152 315.677 cv
cp
f
615.705 315.677 mo
617.148 315.677 618.316 314.508 618.316 313.065 cv
618.316 311.623 617.148 310.454 615.705 310.454 cv
614.263 310.454 613.093 311.623 613.093 313.065 cv
613.093 314.508 614.263 315.677 615.705 315.677 cv
cp
f
626.257 315.677 mo
627.701 315.677 628.869 314.508 628.869 313.065 cv
628.869 311.623 627.701 310.454 626.257 310.454 cv
624.816 310.454 623.646 311.623 623.646 313.065 cv
623.646 314.508 624.816 315.677 626.257 315.677 cv
cp
f
636.81 315.677 mo
638.251 315.677 639.421 314.508 639.421 313.065 cv
639.421 311.623 638.251 310.454 636.81 310.454 cv
635.369 310.454 634.2 311.623 634.2 313.065 cv
634.2 314.508 635.369 315.677 636.81 315.677 cv
cp
f
647.363 315.677 mo
648.804 315.677 649.974 314.508 649.974 313.065 cv
649.974 311.623 648.804 310.454 647.363 310.454 cv
645.919 310.454 644.751 311.623 644.751 313.065 cv
644.751 314.508 645.919 315.677 647.363 315.677 cv
cp
f
679.021 315.677 mo
680.462 315.677 681.632 314.508 681.632 313.065 cv
681.632 311.623 680.462 310.454 679.021 310.454 cv
677.578 310.454 676.41 311.623 676.41 313.065 cv
676.41 314.508 677.578 315.677 679.021 315.677 cv
cp
f
689.574 315.677 mo
691.015 315.677 692.185 314.508 692.185 313.065 cv
692.185 311.623 691.015 310.454 689.574 310.454 cv
688.131 310.454 686.962 311.623 686.962 313.065 cv
686.962 314.508 688.131 315.677 689.574 315.677 cv
cp
f
700.126 315.677 mo
701.568 315.677 702.738 314.508 702.738 313.065 cv
702.738 311.623 701.568 310.454 700.126 310.454 cv
698.683 310.454 697.515 311.623 697.515 313.065 cv
697.515 314.508 698.683 315.677 700.126 315.677 cv
cp
f
710.679 315.677 mo
712.121 315.677 713.292 314.508 713.292 313.065 cv
713.292 311.623 712.121 310.454 710.679 310.454 cv
709.236 310.454 708.068 311.623 708.068 313.065 cv
708.068 314.508 709.236 315.677 710.679 315.677 cv
cp
f
193.599 326.229 mo
195.041 326.229 196.21 325.061 196.21 323.618 cv
196.21 322.176 195.041 321.006 193.599 321.006 cv
192.156 321.006 190.987 322.176 190.987 323.618 cv
190.987 325.061 192.156 326.229 193.599 326.229 cv
cp
f
204.151 326.229 mo
205.594 326.229 206.763 325.061 206.763 323.618 cv
206.763 322.176 205.594 321.006 204.151 321.006 cv
202.709 321.006 201.54 322.176 201.54 323.618 cv
201.54 325.061 202.709 326.229 204.151 326.229 cv
cp
f
214.704 326.229 mo
216.146 326.229 217.315 325.061 217.315 323.618 cv
217.315 322.176 216.146 321.006 214.704 321.006 cv
213.261 321.006 212.092 322.176 212.092 323.618 cv
212.092 325.061 213.261 326.229 214.704 326.229 cv
cp
f
225.256 326.229 mo
226.699 326.229 227.868 325.061 227.868 323.618 cv
227.868 322.176 226.699 321.006 225.256 321.006 cv
223.814 321.006 222.645 322.176 222.645 323.618 cv
222.645 325.061 223.814 326.229 225.256 326.229 cv
cp
f
235.809 326.229 mo
237.251 326.229 238.421 325.061 238.421 323.618 cv
238.421 322.176 237.251 321.006 235.809 321.006 cv
234.367 321.006 233.197 322.176 233.197 323.618 cv
233.197 325.061 234.367 326.229 235.809 326.229 cv
cp
f
246.362 326.229 mo
247.804 326.229 248.974 325.061 248.974 323.618 cv
248.974 322.176 247.804 321.006 246.362 321.006 cv
244.919 321.006 243.75 322.176 243.75 323.618 cv
243.75 325.061 244.919 326.229 246.362 326.229 cv
cp
f
256.915 326.229 mo
258.357 326.229 259.526 325.061 259.526 323.618 cv
259.526 322.176 258.357 321.006 256.915 321.006 cv
255.472 321.006 254.303 322.176 254.303 323.618 cv
254.303 325.061 255.472 326.229 256.915 326.229 cv
cp
f
267.467 326.229 mo
268.91 326.229 270.079 325.061 270.079 323.618 cv
270.079 322.176 268.91 321.006 267.467 321.006 cv
266.025 321.006 264.855 322.176 264.855 323.618 cv
264.855 325.061 266.025 326.229 267.467 326.229 cv
cp
f
278.02 326.229 mo
279.462 326.229 280.631 325.061 280.631 323.618 cv
280.631 322.176 279.462 321.006 278.02 321.006 cv
276.578 321.006 275.408 322.176 275.408 323.618 cv
275.408 325.061 276.578 326.229 278.02 326.229 cv
cp
f
288.572 326.229 mo
290.015 326.229 291.184 325.061 291.184 323.618 cv
291.184 322.176 290.015 321.006 288.572 321.006 cv
287.13 321.006 285.961 322.176 285.961 323.618 cv
285.961 325.061 287.13 326.229 288.572 326.229 cv
cp
f
299.125 326.229 mo
300.567 326.229 301.737 325.061 301.737 323.618 cv
301.737 322.176 300.567 321.006 299.125 321.006 cv
297.683 321.006 296.514 322.176 296.514 323.618 cv
296.514 325.061 297.683 326.229 299.125 326.229 cv
cp
f
309.678 326.229 mo
311.12 326.229 312.29 325.061 312.29 323.618 cv
312.29 322.176 311.12 321.006 309.678 321.006 cv
308.235 321.006 307.066 322.176 307.066 323.618 cv
307.066 325.061 308.235 326.229 309.678 326.229 cv
cp
f
320.23 326.229 mo
321.673 326.229 322.842 325.061 322.842 323.618 cv
322.842 322.176 321.673 321.006 320.23 321.006 cv
318.788 321.006 317.619 322.176 317.619 323.618 cv
317.619 325.061 318.788 326.229 320.23 326.229 cv
cp
f
330.783 326.229 mo
332.226 326.229 333.395 325.061 333.395 323.618 cv
333.395 322.176 332.226 321.006 330.783 321.006 cv
329.341 321.006 328.171 322.176 328.171 323.618 cv
328.171 325.061 329.341 326.229 330.783 326.229 cv
cp
f
341.336 326.229 mo
342.778 326.229 343.947 325.061 343.947 323.618 cv
343.947 322.176 342.778 321.006 341.336 321.006 cv
339.894 321.006 338.724 322.176 338.724 323.618 cv
338.724 325.061 339.894 326.229 341.336 326.229 cv
cp
f
351.889 326.229 mo
353.331 326.229 354.5 325.061 354.5 323.618 cv
354.5 322.176 353.331 321.006 351.889 321.006 cv
350.446 321.006 349.277 322.176 349.277 323.618 cv
349.277 325.061 350.446 326.229 351.889 326.229 cv
cp
f
362.441 326.229 mo
363.883 326.229 365.053 325.061 365.053 323.618 cv
365.053 322.176 363.883 321.006 362.441 321.006 cv
360.999 321.006 359.83 322.176 359.83 323.618 cv
359.83 325.061 360.999 326.229 362.441 326.229 cv
cp
f
372.994 326.229 mo
374.436 326.229 375.605 325.061 375.605 323.618 cv
375.605 322.176 374.436 321.006 372.994 321.006 cv
371.551 321.006 370.382 322.176 370.382 323.618 cv
370.382 325.061 371.551 326.229 372.994 326.229 cv
cp
f
383.546 326.229 mo
384.989 326.229 386.158 325.061 386.158 323.618 cv
386.158 322.176 384.989 321.006 383.546 321.006 cv
382.104 321.006 380.935 322.176 380.935 323.618 cv
380.935 325.061 382.104 326.229 383.546 326.229 cv
cp
f
394.099 326.229 mo
395.542 326.229 396.711 325.061 396.711 323.618 cv
396.711 322.176 395.542 321.006 394.099 321.006 cv
392.657 321.006 391.488 322.176 391.488 323.618 cv
391.488 325.061 392.657 326.229 394.099 326.229 cv
cp
f
404.652 326.229 mo
406.093 326.229 407.263 325.061 407.263 323.618 cv
407.263 322.176 406.093 321.006 404.652 321.006 cv
403.208 321.006 402.042 322.176 402.042 323.618 cv
402.042 325.061 403.208 326.229 404.652 326.229 cv
cp
f
415.205 326.229 mo
416.646 326.229 417.816 325.061 417.816 323.618 cv
417.816 322.176 416.646 321.006 415.205 321.006 cv
413.762 321.006 412.593 322.176 412.593 323.618 cv
412.593 325.061 413.762 326.229 415.205 326.229 cv
cp
f
425.757 326.229 mo
427.2 326.229 428.369 325.061 428.369 323.618 cv
428.369 322.176 427.2 321.006 425.757 321.006 cv
424.314 321.006 423.146 322.176 423.146 323.618 cv
423.146 325.061 424.314 326.229 425.757 326.229 cv
cp
f
436.31 326.229 mo
437.751 326.229 438.921 325.061 438.921 323.618 cv
438.921 322.176 437.751 321.006 436.31 321.006 cv
434.867 321.006 433.697 322.176 433.697 323.618 cv
433.697 325.061 434.867 326.229 436.31 326.229 cv
cp
f
446.863 326.229 mo
448.304 326.229 449.474 325.061 449.474 323.618 cv
449.474 322.176 448.304 321.006 446.863 321.006 cv
445.42 321.006 444.25 322.176 444.25 323.618 cv
444.25 325.061 445.42 326.229 446.863 326.229 cv
cp
f
457.417 326.229 mo
458.858 326.229 460.027 325.061 460.027 323.618 cv
460.027 322.176 458.858 321.006 457.417 321.006 cv
455.972 321.006 454.803 322.176 454.803 323.618 cv
454.803 325.061 455.972 326.229 457.417 326.229 cv
cp
f
467.968 326.229 mo
469.41 326.229 470.58 325.061 470.58 323.618 cv
470.58 322.176 469.41 321.006 467.968 321.006 cv
466.525 321.006 465.355 322.176 465.355 323.618 cv
465.355 325.061 466.525 326.229 467.968 326.229 cv
cp
f
478.521 326.229 mo
479.962 326.229 481.132 325.061 481.132 323.618 cv
481.132 322.176 479.962 321.006 478.521 321.006 cv
477.079 321.006 475.908 322.176 475.908 323.618 cv
475.908 325.061 477.079 326.229 478.521 326.229 cv
cp
f
489.072 326.229 mo
490.516 326.229 491.685 325.061 491.685 323.618 cv
491.685 322.176 490.516 321.006 489.072 321.006 cv
487.631 321.006 486.461 322.176 486.461 323.618 cv
486.461 325.061 487.631 326.229 489.072 326.229 cv
cp
f
499.625 326.229 mo
501.068 326.229 502.238 325.061 502.238 323.618 cv
502.238 322.176 501.068 321.006 499.625 321.006 cv
498.183 321.006 497.013 322.176 497.013 323.618 cv
497.013 325.061 498.183 326.229 499.625 326.229 cv
cp
f
510.178 326.229 mo
511.621 326.229 512.792 325.061 512.792 323.618 cv
512.792 322.176 511.621 321.006 510.178 321.006 cv
508.737 321.006 507.566 322.176 507.566 323.618 cv
507.566 325.061 508.737 326.229 510.178 326.229 cv
cp
f
520.73 326.229 mo
522.174 326.229 523.343 325.061 523.343 323.618 cv
523.343 322.176 522.174 321.006 520.73 321.006 cv
519.289 321.006 518.119 322.176 518.119 323.618 cv
518.119 325.061 519.289 326.229 520.73 326.229 cv
cp
f
531.283 326.229 mo
532.726 326.229 533.896 325.061 533.896 323.618 cv
533.896 322.176 532.726 321.006 531.283 321.006 cv
529.841 321.006 528.671 322.176 528.671 323.618 cv
528.671 325.061 529.841 326.229 531.283 326.229 cv
cp
f
541.835 326.229 mo
543.279 326.229 544.447 325.061 544.447 323.618 cv
544.447 322.176 543.279 321.006 541.835 321.006 cv
540.395 321.006 539.224 322.176 539.224 323.618 cv
539.224 325.061 540.395 326.229 541.835 326.229 cv
cp
f
552.388 326.229 mo
553.833 326.229 555 325.061 555 323.618 cv
555 322.176 553.833 321.006 552.388 321.006 cv
550.947 321.006 549.777 322.176 549.777 323.618 cv
549.777 325.061 550.947 326.229 552.388 326.229 cv
cp
f
562.941 326.229 mo
564.384 326.229 565.553 325.061 565.553 323.618 cv
565.553 322.176 564.384 321.006 562.941 321.006 cv
561.5 321.006 560.33 322.176 560.33 323.618 cv
560.33 325.061 561.5 326.229 562.941 326.229 cv
cp
f
573.494 326.229 mo
574.937 326.229 576.105 325.061 576.105 323.618 cv
576.105 322.176 574.937 321.006 573.494 321.006 cv
572.053 321.006 570.882 322.176 570.882 323.618 cv
570.882 325.061 572.053 326.229 573.494 326.229 cv
cp
f
584.046 326.229 mo
585.491 326.229 586.658 325.061 586.658 323.618 cv
586.658 322.176 585.491 321.006 584.046 321.006 cv
582.605 321.006 581.435 322.176 581.435 323.618 cv
581.435 325.061 582.605 326.229 584.046 326.229 cv
cp
f
594.599 326.229 mo
596.042 326.229 597.21 325.061 597.21 323.618 cv
597.21 322.176 596.042 321.006 594.599 321.006 cv
593.158 321.006 591.988 322.176 591.988 323.618 cv
591.988 325.061 593.158 326.229 594.599 326.229 cv
cp
f
605.152 326.229 mo
606.595 326.229 607.763 325.061 607.763 323.618 cv
607.763 322.176 606.595 321.006 605.152 321.006 cv
603.71 321.006 602.542 322.176 602.542 323.618 cv
602.542 325.061 603.71 326.229 605.152 326.229 cv
cp
f
615.705 326.229 mo
617.148 326.229 618.316 325.061 618.316 323.618 cv
618.316 322.176 617.148 321.006 615.705 321.006 cv
614.263 321.006 613.093 322.176 613.093 323.618 cv
613.093 325.061 614.263 326.229 615.705 326.229 cv
cp
f
626.257 326.229 mo
627.701 326.229 628.869 325.061 628.869 323.618 cv
628.869 322.176 627.701 321.006 626.257 321.006 cv
624.816 321.006 623.646 322.176 623.646 323.618 cv
623.646 325.061 624.816 326.229 626.257 326.229 cv
cp
f
636.81 326.229 mo
638.251 326.229 639.421 325.061 639.421 323.618 cv
639.421 322.176 638.251 321.006 636.81 321.006 cv
635.369 321.006 634.2 322.176 634.2 323.618 cv
634.2 325.061 635.369 326.229 636.81 326.229 cv
cp
f
647.363 326.229 mo
648.804 326.229 649.974 325.061 649.974 323.618 cv
649.974 322.176 648.804 321.006 647.363 321.006 cv
645.919 321.006 644.751 322.176 644.751 323.618 cv
644.751 325.061 645.919 326.229 647.363 326.229 cv
cp
f
657.917 326.229 mo
659.357 326.229 660.527 325.061 660.527 323.618 cv
660.527 322.176 659.357 321.006 657.917 321.006 cv
656.472 321.006 655.304 322.176 655.304 323.618 cv
655.304 325.061 656.472 326.229 657.917 326.229 cv
cp
f
668.468 326.229 mo
669.91 326.229 671.08 325.061 671.08 323.618 cv
671.08 322.176 669.91 321.006 668.468 321.006 cv
667.025 321.006 665.857 322.176 665.857 323.618 cv
665.857 325.061 667.025 326.229 668.468 326.229 cv
cp
f
679.021 326.229 mo
680.462 326.229 681.632 325.061 681.632 323.618 cv
681.632 322.176 680.462 321.006 679.021 321.006 cv
677.578 321.006 676.41 322.176 676.41 323.618 cv
676.41 325.061 677.578 326.229 679.021 326.229 cv
cp
f
689.574 326.229 mo
691.015 326.229 692.185 325.061 692.185 323.618 cv
692.185 322.176 691.015 321.006 689.574 321.006 cv
688.131 321.006 686.962 322.176 686.962 323.618 cv
686.962 325.061 688.131 326.229 689.574 326.229 cv
cp
f
700.126 326.229 mo
701.568 326.229 702.738 325.061 702.738 323.618 cv
702.738 322.176 701.568 321.006 700.126 321.006 cv
698.683 321.006 697.515 322.176 697.515 323.618 cv
697.515 325.061 698.683 326.229 700.126 326.229 cv
cp
f
710.679 326.229 mo
712.121 326.229 713.292 325.061 713.292 323.618 cv
713.292 322.176 712.121 321.006 710.679 321.006 cv
709.236 321.006 708.068 322.176 708.068 323.618 cv
708.068 325.061 709.236 326.229 710.679 326.229 cv
cp
f
183.046 336.782 mo
184.488 336.782 185.657 335.613 185.657 334.171 cv
185.657 332.729 184.488 331.559 183.046 331.559 cv
181.604 331.559 180.434 332.729 180.434 334.171 cv
180.434 335.613 181.604 336.782 183.046 336.782 cv
cp
f
193.599 336.782 mo
195.041 336.782 196.21 335.613 196.21 334.171 cv
196.21 332.729 195.041 331.559 193.599 331.559 cv
192.156 331.559 190.987 332.729 190.987 334.171 cv
190.987 335.613 192.156 336.782 193.599 336.782 cv
cp
f
204.151 336.782 mo
205.594 336.782 206.763 335.613 206.763 334.171 cv
206.763 332.729 205.594 331.559 204.151 331.559 cv
202.709 331.559 201.54 332.729 201.54 334.171 cv
201.54 335.613 202.709 336.782 204.151 336.782 cv
cp
f
214.704 336.782 mo
216.146 336.782 217.315 335.613 217.315 334.171 cv
217.315 332.729 216.146 331.559 214.704 331.559 cv
213.261 331.559 212.092 332.729 212.092 334.171 cv
212.092 335.613 213.261 336.782 214.704 336.782 cv
cp
f
225.256 336.782 mo
226.699 336.782 227.868 335.613 227.868 334.171 cv
227.868 332.729 226.699 331.559 225.256 331.559 cv
223.814 331.559 222.645 332.729 222.645 334.171 cv
222.645 335.613 223.814 336.782 225.256 336.782 cv
cp
f
235.809 336.782 mo
237.251 336.782 238.421 335.613 238.421 334.171 cv
238.421 332.729 237.251 331.559 235.809 331.559 cv
234.367 331.559 233.197 332.729 233.197 334.171 cv
233.197 335.613 234.367 336.782 235.809 336.782 cv
cp
f
246.362 336.782 mo
247.804 336.782 248.974 335.613 248.974 334.171 cv
248.974 332.729 247.804 331.559 246.362 331.559 cv
244.919 331.559 243.75 332.729 243.75 334.171 cv
243.75 335.613 244.919 336.782 246.362 336.782 cv
cp
f
256.915 336.782 mo
258.357 336.782 259.526 335.613 259.526 334.171 cv
259.526 332.729 258.357 331.559 256.915 331.559 cv
255.472 331.559 254.303 332.729 254.303 334.171 cv
254.303 335.613 255.472 336.782 256.915 336.782 cv
cp
f
267.467 336.782 mo
268.91 336.782 270.079 335.613 270.079 334.171 cv
270.079 332.729 268.91 331.559 267.467 331.559 cv
266.025 331.559 264.855 332.729 264.855 334.171 cv
264.855 335.613 266.025 336.782 267.467 336.782 cv
cp
f
278.02 336.782 mo
279.462 336.782 280.631 335.613 280.631 334.171 cv
280.631 332.729 279.462 331.559 278.02 331.559 cv
276.578 331.559 275.408 332.729 275.408 334.171 cv
275.408 335.613 276.578 336.782 278.02 336.782 cv
cp
f
288.572 336.782 mo
290.015 336.782 291.184 335.613 291.184 334.171 cv
291.184 332.729 290.015 331.559 288.572 331.559 cv
287.13 331.559 285.961 332.729 285.961 334.171 cv
285.961 335.613 287.13 336.782 288.572 336.782 cv
cp
f
299.125 336.782 mo
300.567 336.782 301.737 335.613 301.737 334.171 cv
301.737 332.729 300.567 331.559 299.125 331.559 cv
297.683 331.559 296.514 332.729 296.514 334.171 cv
296.514 335.613 297.683 336.782 299.125 336.782 cv
cp
f
309.678 336.782 mo
311.12 336.782 312.29 335.613 312.29 334.171 cv
312.29 332.729 311.12 331.559 309.678 331.559 cv
308.235 331.559 307.066 332.729 307.066 334.171 cv
307.066 335.613 308.235 336.782 309.678 336.782 cv
cp
f
320.23 336.782 mo
321.673 336.782 322.842 335.613 322.842 334.171 cv
322.842 332.729 321.673 331.559 320.23 331.559 cv
318.788 331.559 317.619 332.729 317.619 334.171 cv
317.619 335.613 318.788 336.782 320.23 336.782 cv
cp
f
330.783 336.782 mo
332.226 336.782 333.395 335.613 333.395 334.171 cv
333.395 332.729 332.226 331.559 330.783 331.559 cv
329.341 331.559 328.171 332.729 328.171 334.171 cv
328.171 335.613 329.341 336.782 330.783 336.782 cv
cp
f
341.336 336.782 mo
342.778 336.782 343.947 335.613 343.947 334.171 cv
343.947 332.729 342.778 331.559 341.336 331.559 cv
339.894 331.559 338.724 332.729 338.724 334.171 cv
338.724 335.613 339.894 336.782 341.336 336.782 cv
cp
f
351.889 336.782 mo
353.331 336.782 354.5 335.613 354.5 334.171 cv
354.5 332.729 353.331 331.559 351.889 331.559 cv
350.446 331.559 349.277 332.729 349.277 334.171 cv
349.277 335.613 350.446 336.782 351.889 336.782 cv
cp
f
362.441 336.782 mo
363.883 336.782 365.053 335.613 365.053 334.171 cv
365.053 332.729 363.883 331.559 362.441 331.559 cv
360.999 331.559 359.83 332.729 359.83 334.171 cv
359.83 335.613 360.999 336.782 362.441 336.782 cv
cp
f
372.994 336.782 mo
374.436 336.782 375.605 335.613 375.605 334.171 cv
375.605 332.729 374.436 331.559 372.994 331.559 cv
371.551 331.559 370.382 332.729 370.382 334.171 cv
370.382 335.613 371.551 336.782 372.994 336.782 cv
cp
f
383.546 336.782 mo
384.989 336.782 386.158 335.613 386.158 334.171 cv
386.158 332.729 384.989 331.559 383.546 331.559 cv
382.104 331.559 380.935 332.729 380.935 334.171 cv
380.935 335.613 382.104 336.782 383.546 336.782 cv
cp
f
394.099 336.782 mo
395.542 336.782 396.711 335.613 396.711 334.171 cv
396.711 332.729 395.542 331.559 394.099 331.559 cv
392.657 331.559 391.488 332.729 391.488 334.171 cv
391.488 335.613 392.657 336.782 394.099 336.782 cv
cp
f
404.652 336.782 mo
406.093 336.782 407.263 335.613 407.263 334.171 cv
407.263 332.729 406.093 331.559 404.652 331.559 cv
403.208 331.559 402.042 332.729 402.042 334.171 cv
402.042 335.613 403.208 336.782 404.652 336.782 cv
cp
f
415.205 336.782 mo
416.646 336.782 417.816 335.613 417.816 334.171 cv
417.816 332.729 416.646 331.559 415.205 331.559 cv
413.762 331.559 412.593 332.729 412.593 334.171 cv
412.593 335.613 413.762 336.782 415.205 336.782 cv
cp
f
425.757 336.782 mo
427.2 336.782 428.369 335.613 428.369 334.171 cv
428.369 332.729 427.2 331.559 425.757 331.559 cv
424.314 331.559 423.146 332.729 423.146 334.171 cv
423.146 335.613 424.314 336.782 425.757 336.782 cv
cp
f
436.31 336.782 mo
437.751 336.782 438.921 335.613 438.921 334.171 cv
438.921 332.729 437.751 331.559 436.31 331.559 cv
434.867 331.559 433.697 332.729 433.697 334.171 cv
433.697 335.613 434.867 336.782 436.31 336.782 cv
cp
f
446.863 336.782 mo
448.304 336.782 449.474 335.613 449.474 334.171 cv
449.474 332.729 448.304 331.559 446.863 331.559 cv
445.42 331.559 444.25 332.729 444.25 334.171 cv
444.25 335.613 445.42 336.782 446.863 336.782 cv
cp
f
457.417 336.782 mo
458.858 336.782 460.027 335.613 460.027 334.171 cv
460.027 332.729 458.858 331.559 457.417 331.559 cv
455.972 331.559 454.803 332.729 454.803 334.171 cv
454.803 335.613 455.972 336.782 457.417 336.782 cv
cp
f
467.968 336.782 mo
469.41 336.782 470.58 335.613 470.58 334.171 cv
470.58 332.729 469.41 331.559 467.968 331.559 cv
466.525 331.559 465.355 332.729 465.355 334.171 cv
465.355 335.613 466.525 336.782 467.968 336.782 cv
cp
f
478.521 336.782 mo
479.962 336.782 481.132 335.613 481.132 334.171 cv
481.132 332.729 479.962 331.559 478.521 331.559 cv
477.079 331.559 475.908 332.729 475.908 334.171 cv
475.908 335.613 477.079 336.782 478.521 336.782 cv
cp
f
489.072 336.782 mo
490.516 336.782 491.685 335.613 491.685 334.171 cv
491.685 332.729 490.516 331.559 489.072 331.559 cv
487.631 331.559 486.461 332.729 486.461 334.171 cv
486.461 335.613 487.631 336.782 489.072 336.782 cv
cp
f
499.625 336.782 mo
501.068 336.782 502.238 335.613 502.238 334.171 cv
502.238 332.729 501.068 331.559 499.625 331.559 cv
498.183 331.559 497.013 332.729 497.013 334.171 cv
497.013 335.613 498.183 336.782 499.625 336.782 cv
cp
f
510.178 336.782 mo
511.621 336.782 512.792 335.613 512.792 334.171 cv
512.792 332.729 511.621 331.559 510.178 331.559 cv
508.737 331.559 507.566 332.729 507.566 334.171 cv
507.566 335.613 508.737 336.782 510.178 336.782 cv
cp
f
520.73 336.782 mo
522.174 336.782 523.343 335.613 523.343 334.171 cv
523.343 332.729 522.174 331.559 520.73 331.559 cv
519.289 331.559 518.119 332.729 518.119 334.171 cv
518.119 335.613 519.289 336.782 520.73 336.782 cv
cp
f
531.283 336.782 mo
532.726 336.782 533.896 335.613 533.896 334.171 cv
533.896 332.729 532.726 331.559 531.283 331.559 cv
529.841 331.559 528.671 332.729 528.671 334.171 cv
528.671 335.613 529.841 336.782 531.283 336.782 cv
cp
f
541.835 336.782 mo
543.279 336.782 544.447 335.613 544.447 334.171 cv
544.447 332.729 543.279 331.559 541.835 331.559 cv
540.395 331.559 539.224 332.729 539.224 334.171 cv
539.224 335.613 540.395 336.782 541.835 336.782 cv
cp
f
552.388 336.782 mo
553.833 336.782 555 335.613 555 334.171 cv
555 332.729 553.833 331.559 552.388 331.559 cv
550.947 331.559 549.777 332.729 549.777 334.171 cv
549.777 335.613 550.947 336.782 552.388 336.782 cv
cp
f
562.941 336.782 mo
564.384 336.782 565.553 335.613 565.553 334.171 cv
565.553 332.729 564.384 331.559 562.941 331.559 cv
561.5 331.559 560.33 332.729 560.33 334.171 cv
560.33 335.613 561.5 336.782 562.941 336.782 cv
cp
f
573.494 336.782 mo
574.937 336.782 576.105 335.613 576.105 334.171 cv
576.105 332.729 574.937 331.559 573.494 331.559 cv
572.053 331.559 570.882 332.729 570.882 334.171 cv
570.882 335.613 572.053 336.782 573.494 336.782 cv
cp
f
584.046 336.782 mo
585.491 336.782 586.658 335.613 586.658 334.171 cv
586.658 332.729 585.491 331.559 584.046 331.559 cv
582.605 331.559 581.435 332.729 581.435 334.171 cv
581.435 335.613 582.605 336.782 584.046 336.782 cv
cp
f
594.599 336.782 mo
596.042 336.782 597.21 335.613 597.21 334.171 cv
597.21 332.729 596.042 331.559 594.599 331.559 cv
593.158 331.559 591.988 332.729 591.988 334.171 cv
591.988 335.613 593.158 336.782 594.599 336.782 cv
cp
f
605.152 336.782 mo
606.595 336.782 607.763 335.613 607.763 334.171 cv
607.763 332.729 606.595 331.559 605.152 331.559 cv
603.71 331.559 602.542 332.729 602.542 334.171 cv
602.542 335.613 603.71 336.782 605.152 336.782 cv
cp
f
615.705 336.782 mo
617.148 336.782 618.316 335.613 618.316 334.171 cv
618.316 332.729 617.148 331.559 615.705 331.559 cv
614.263 331.559 613.093 332.729 613.093 334.171 cv
613.093 335.613 614.263 336.782 615.705 336.782 cv
cp
f
626.257 336.782 mo
627.701 336.782 628.869 335.613 628.869 334.171 cv
628.869 332.729 627.701 331.559 626.257 331.559 cv
624.816 331.559 623.646 332.729 623.646 334.171 cv
623.646 335.613 624.816 336.782 626.257 336.782 cv
cp
f
636.81 336.782 mo
638.251 336.782 639.421 335.613 639.421 334.171 cv
639.421 332.729 638.251 331.559 636.81 331.559 cv
635.369 331.559 634.2 332.729 634.2 334.171 cv
634.2 335.613 635.369 336.782 636.81 336.782 cv
cp
f
647.363 336.782 mo
648.804 336.782 649.974 335.613 649.974 334.171 cv
649.974 332.729 648.804 331.559 647.363 331.559 cv
645.919 331.559 644.751 332.729 644.751 334.171 cv
644.751 335.613 645.919 336.782 647.363 336.782 cv
cp
f
657.917 336.782 mo
659.357 336.782 660.527 335.613 660.527 334.171 cv
660.527 332.729 659.357 331.559 657.917 331.559 cv
656.472 331.559 655.304 332.729 655.304 334.171 cv
655.304 335.613 656.472 336.782 657.917 336.782 cv
cp
f
668.468 336.782 mo
669.91 336.782 671.08 335.613 671.08 334.171 cv
671.08 332.729 669.91 331.559 668.468 331.559 cv
667.025 331.559 665.857 332.729 665.857 334.171 cv
665.857 335.613 667.025 336.782 668.468 336.782 cv
cp
f
679.021 336.782 mo
680.462 336.782 681.632 335.613 681.632 334.171 cv
681.632 332.729 680.462 331.559 679.021 331.559 cv
677.578 331.559 676.41 332.729 676.41 334.171 cv
676.41 335.613 677.578 336.782 679.021 336.782 cv
cp
f
689.574 336.782 mo
691.015 336.782 692.185 335.613 692.185 334.171 cv
692.185 332.729 691.015 331.559 689.574 331.559 cv
688.131 331.559 686.962 332.729 686.962 334.171 cv
686.962 335.613 688.131 336.782 689.574 336.782 cv
cp
f
700.126 336.782 mo
701.568 336.782 702.738 335.613 702.738 334.171 cv
702.738 332.729 701.568 331.559 700.126 331.559 cv
698.683 331.559 697.515 332.729 697.515 334.171 cv
697.515 335.613 698.683 336.782 700.126 336.782 cv
cp
f
710.679 336.782 mo
712.121 336.782 713.292 335.613 713.292 334.171 cv
713.292 332.729 712.121 331.559 710.679 331.559 cv
709.236 331.559 708.068 332.729 708.068 334.171 cv
708.068 335.613 709.236 336.782 710.679 336.782 cv
cp
f
172.493 347.335 mo
173.936 347.335 175.105 346.166 175.105 344.724 cv
175.105 343.281 173.936 342.112 172.493 342.112 cv
171.051 342.112 169.881 343.281 169.881 344.724 cv
169.881 346.166 171.051 347.335 172.493 347.335 cv
cp
f
183.046 347.335 mo
184.488 347.335 185.657 346.166 185.657 344.724 cv
185.657 343.281 184.488 342.112 183.046 342.112 cv
181.604 342.112 180.434 343.281 180.434 344.724 cv
180.434 346.166 181.604 347.335 183.046 347.335 cv
cp
f
193.599 347.335 mo
195.041 347.335 196.21 346.166 196.21 344.724 cv
196.21 343.281 195.041 342.112 193.599 342.112 cv
192.156 342.112 190.987 343.281 190.987 344.724 cv
190.987 346.166 192.156 347.335 193.599 347.335 cv
cp
f
204.151 347.335 mo
205.594 347.335 206.763 346.166 206.763 344.724 cv
206.763 343.281 205.594 342.112 204.151 342.112 cv
202.709 342.112 201.54 343.281 201.54 344.724 cv
201.54 346.166 202.709 347.335 204.151 347.335 cv
cp
f
214.704 347.335 mo
216.146 347.335 217.315 346.166 217.315 344.724 cv
217.315 343.281 216.146 342.112 214.704 342.112 cv
213.261 342.112 212.092 343.281 212.092 344.724 cv
212.092 346.166 213.261 347.335 214.704 347.335 cv
cp
f
225.256 347.335 mo
226.699 347.335 227.868 346.166 227.868 344.724 cv
227.868 343.281 226.699 342.112 225.256 342.112 cv
223.814 342.112 222.645 343.281 222.645 344.724 cv
222.645 346.166 223.814 347.335 225.256 347.335 cv
cp
f
235.809 347.335 mo
237.251 347.335 238.421 346.166 238.421 344.724 cv
238.421 343.281 237.251 342.112 235.809 342.112 cv
234.367 342.112 233.197 343.281 233.197 344.724 cv
233.197 346.166 234.367 347.335 235.809 347.335 cv
cp
f
246.362 347.335 mo
247.804 347.335 248.974 346.166 248.974 344.724 cv
248.974 343.281 247.804 342.112 246.362 342.112 cv
244.919 342.112 243.75 343.281 243.75 344.724 cv
243.75 346.166 244.919 347.335 246.362 347.335 cv
cp
f
256.915 347.335 mo
258.357 347.335 259.526 346.166 259.526 344.724 cv
259.526 343.281 258.357 342.112 256.915 342.112 cv
255.472 342.112 254.303 343.281 254.303 344.724 cv
254.303 346.166 255.472 347.335 256.915 347.335 cv
cp
f
267.467 347.335 mo
268.91 347.335 270.079 346.166 270.079 344.724 cv
270.079 343.281 268.91 342.112 267.467 342.112 cv
266.025 342.112 264.855 343.281 264.855 344.724 cv
264.855 346.166 266.025 347.335 267.467 347.335 cv
cp
f
278.02 347.335 mo
279.462 347.335 280.631 346.166 280.631 344.724 cv
280.631 343.281 279.462 342.112 278.02 342.112 cv
276.578 342.112 275.408 343.281 275.408 344.724 cv
275.408 346.166 276.578 347.335 278.02 347.335 cv
cp
f
288.572 347.335 mo
290.015 347.335 291.184 346.166 291.184 344.724 cv
291.184 343.281 290.015 342.112 288.572 342.112 cv
287.13 342.112 285.961 343.281 285.961 344.724 cv
285.961 346.166 287.13 347.335 288.572 347.335 cv
cp
f
299.125 347.335 mo
300.567 347.335 301.737 346.166 301.737 344.724 cv
301.737 343.281 300.567 342.112 299.125 342.112 cv
297.683 342.112 296.514 343.281 296.514 344.724 cv
296.514 346.166 297.683 347.335 299.125 347.335 cv
cp
f
309.678 347.335 mo
311.12 347.335 312.29 346.166 312.29 344.724 cv
312.29 343.281 311.12 342.112 309.678 342.112 cv
308.235 342.112 307.066 343.281 307.066 344.724 cv
307.066 346.166 308.235 347.335 309.678 347.335 cv
cp
f
320.23 347.335 mo
321.673 347.335 322.842 346.166 322.842 344.724 cv
322.842 343.281 321.673 342.112 320.23 342.112 cv
318.788 342.112 317.619 343.281 317.619 344.724 cv
317.619 346.166 318.788 347.335 320.23 347.335 cv
cp
f
330.783 347.335 mo
332.226 347.335 333.395 346.166 333.395 344.724 cv
333.395 343.281 332.226 342.112 330.783 342.112 cv
329.341 342.112 328.171 343.281 328.171 344.724 cv
328.171 346.166 329.341 347.335 330.783 347.335 cv
cp
f
341.336 347.335 mo
342.778 347.335 343.947 346.166 343.947 344.724 cv
343.947 343.281 342.778 342.112 341.336 342.112 cv
339.894 342.112 338.724 343.281 338.724 344.724 cv
338.724 346.166 339.894 347.335 341.336 347.335 cv
cp
f
351.889 347.335 mo
353.331 347.335 354.5 346.166 354.5 344.724 cv
354.5 343.281 353.331 342.112 351.889 342.112 cv
350.446 342.112 349.277 343.281 349.277 344.724 cv
349.277 346.166 350.446 347.335 351.889 347.335 cv
cp
f
362.441 347.335 mo
363.883 347.335 365.053 346.166 365.053 344.724 cv
365.053 343.281 363.883 342.112 362.441 342.112 cv
360.999 342.112 359.83 343.281 359.83 344.724 cv
359.83 346.166 360.999 347.335 362.441 347.335 cv
cp
f
372.994 347.335 mo
374.436 347.335 375.605 346.166 375.605 344.724 cv
375.605 343.281 374.436 342.112 372.994 342.112 cv
371.551 342.112 370.382 343.281 370.382 344.724 cv
370.382 346.166 371.551 347.335 372.994 347.335 cv
cp
f
383.546 347.335 mo
384.989 347.335 386.158 346.166 386.158 344.724 cv
386.158 343.281 384.989 342.112 383.546 342.112 cv
382.104 342.112 380.935 343.281 380.935 344.724 cv
380.935 346.166 382.104 347.335 383.546 347.335 cv
cp
f
394.099 347.335 mo
395.542 347.335 396.711 346.166 396.711 344.724 cv
396.711 343.281 395.542 342.112 394.099 342.112 cv
392.657 342.112 391.488 343.281 391.488 344.724 cv
391.488 346.166 392.657 347.335 394.099 347.335 cv
cp
f
404.652 347.335 mo
406.093 347.335 407.263 346.166 407.263 344.724 cv
407.263 343.281 406.093 342.112 404.652 342.112 cv
403.208 342.112 402.042 343.281 402.042 344.724 cv
402.042 346.166 403.208 347.335 404.652 347.335 cv
cp
f
415.205 347.335 mo
416.646 347.335 417.816 346.166 417.816 344.724 cv
417.816 343.281 416.646 342.112 415.205 342.112 cv
413.762 342.112 412.593 343.281 412.593 344.724 cv
412.593 346.166 413.762 347.335 415.205 347.335 cv
cp
f
425.757 347.335 mo
427.2 347.335 428.369 346.166 428.369 344.724 cv
428.369 343.281 427.2 342.112 425.757 342.112 cv
424.314 342.112 423.146 343.281 423.146 344.724 cv
423.146 346.166 424.314 347.335 425.757 347.335 cv
cp
f
436.31 347.335 mo
437.751 347.335 438.921 346.166 438.921 344.724 cv
438.921 343.281 437.751 342.112 436.31 342.112 cv
434.867 342.112 433.697 343.281 433.697 344.724 cv
433.697 346.166 434.867 347.335 436.31 347.335 cv
cp
f
446.863 347.335 mo
448.304 347.335 449.474 346.166 449.474 344.724 cv
449.474 343.281 448.304 342.112 446.863 342.112 cv
445.42 342.112 444.25 343.281 444.25 344.724 cv
444.25 346.166 445.42 347.335 446.863 347.335 cv
cp
f
457.417 347.335 mo
458.858 347.335 460.027 346.166 460.027 344.724 cv
460.027 343.281 458.858 342.112 457.417 342.112 cv
455.972 342.112 454.803 343.281 454.803 344.724 cv
454.803 346.166 455.972 347.335 457.417 347.335 cv
cp
f
467.968 347.335 mo
469.41 347.335 470.58 346.166 470.58 344.724 cv
470.58 343.281 469.41 342.112 467.968 342.112 cv
466.525 342.112 465.355 343.281 465.355 344.724 cv
465.355 346.166 466.525 347.335 467.968 347.335 cv
cp
f
478.521 347.335 mo
479.962 347.335 481.132 346.166 481.132 344.724 cv
481.132 343.281 479.962 342.112 478.521 342.112 cv
477.079 342.112 475.908 343.281 475.908 344.724 cv
475.908 346.166 477.079 347.335 478.521 347.335 cv
cp
f
489.072 347.335 mo
490.516 347.335 491.685 346.166 491.685 344.724 cv
491.685 343.281 490.516 342.112 489.072 342.112 cv
487.631 342.112 486.461 343.281 486.461 344.724 cv
486.461 346.166 487.631 347.335 489.072 347.335 cv
cp
f
499.625 347.335 mo
501.068 347.335 502.238 346.166 502.238 344.724 cv
502.238 343.281 501.068 342.112 499.625 342.112 cv
498.183 342.112 497.013 343.281 497.013 344.724 cv
497.013 346.166 498.183 347.335 499.625 347.335 cv
cp
f
510.178 347.335 mo
511.621 347.335 512.792 346.166 512.792 344.724 cv
512.792 343.281 511.621 342.112 510.178 342.112 cv
508.737 342.112 507.566 343.281 507.566 344.724 cv
507.566 346.166 508.737 347.335 510.178 347.335 cv
cp
f
520.73 347.335 mo
522.174 347.335 523.343 346.166 523.343 344.724 cv
523.343 343.281 522.174 342.112 520.73 342.112 cv
519.289 342.112 518.119 343.281 518.119 344.724 cv
518.119 346.166 519.289 347.335 520.73 347.335 cv
cp
f
531.283 347.335 mo
532.726 347.335 533.896 346.166 533.896 344.724 cv
533.896 343.281 532.726 342.112 531.283 342.112 cv
529.841 342.112 528.671 343.281 528.671 344.724 cv
528.671 346.166 529.841 347.335 531.283 347.335 cv
cp
f
541.835 347.335 mo
543.279 347.335 544.447 346.166 544.447 344.724 cv
544.447 343.281 543.279 342.112 541.835 342.112 cv
540.395 342.112 539.224 343.281 539.224 344.724 cv
539.224 346.166 540.395 347.335 541.835 347.335 cv
cp
f
552.388 347.335 mo
553.833 347.335 555 346.166 555 344.724 cv
555 343.281 553.833 342.112 552.388 342.112 cv
550.947 342.112 549.777 343.281 549.777 344.724 cv
549.777 346.166 550.947 347.335 552.388 347.335 cv
cp
f
562.941 347.335 mo
564.384 347.335 565.553 346.166 565.553 344.724 cv
565.553 343.281 564.384 342.112 562.941 342.112 cv
561.5 342.112 560.33 343.281 560.33 344.724 cv
560.33 346.166 561.5 347.335 562.941 347.335 cv
cp
f
573.494 347.335 mo
574.937 347.335 576.105 346.166 576.105 344.724 cv
576.105 343.281 574.937 342.112 573.494 342.112 cv
572.053 342.112 570.882 343.281 570.882 344.724 cv
570.882 346.166 572.053 347.335 573.494 347.335 cv
cp
f
584.046 347.335 mo
585.491 347.335 586.658 346.166 586.658 344.724 cv
586.658 343.281 585.491 342.112 584.046 342.112 cv
582.605 342.112 581.435 343.281 581.435 344.724 cv
581.435 346.166 582.605 347.335 584.046 347.335 cv
cp
f
594.599 347.335 mo
596.042 347.335 597.21 346.166 597.21 344.724 cv
597.21 343.281 596.042 342.112 594.599 342.112 cv
593.158 342.112 591.988 343.281 591.988 344.724 cv
591.988 346.166 593.158 347.335 594.599 347.335 cv
cp
f
605.152 347.335 mo
606.595 347.335 607.763 346.166 607.763 344.724 cv
607.763 343.281 606.595 342.112 605.152 342.112 cv
603.71 342.112 602.542 343.281 602.542 344.724 cv
602.542 346.166 603.71 347.335 605.152 347.335 cv
cp
f
615.705 347.335 mo
617.148 347.335 618.316 346.166 618.316 344.724 cv
618.316 343.281 617.148 342.112 615.705 342.112 cv
614.263 342.112 613.093 343.281 613.093 344.724 cv
613.093 346.166 614.263 347.335 615.705 347.335 cv
cp
f
626.257 347.335 mo
627.701 347.335 628.869 346.166 628.869 344.724 cv
628.869 343.281 627.701 342.112 626.257 342.112 cv
624.816 342.112 623.646 343.281 623.646 344.724 cv
623.646 346.166 624.816 347.335 626.257 347.335 cv
cp
f
636.81 347.335 mo
638.251 347.335 639.421 346.166 639.421 344.724 cv
639.421 343.281 638.251 342.112 636.81 342.112 cv
635.369 342.112 634.2 343.281 634.2 344.724 cv
634.2 346.166 635.369 347.335 636.81 347.335 cv
cp
f
647.363 347.335 mo
648.804 347.335 649.974 346.166 649.974 344.724 cv
649.974 343.281 648.804 342.112 647.363 342.112 cv
645.919 342.112 644.751 343.281 644.751 344.724 cv
644.751 346.166 645.919 347.335 647.363 347.335 cv
cp
f
657.917 347.335 mo
659.357 347.335 660.527 346.166 660.527 344.724 cv
660.527 343.281 659.357 342.112 657.917 342.112 cv
656.472 342.112 655.304 343.281 655.304 344.724 cv
655.304 346.166 656.472 347.335 657.917 347.335 cv
cp
f
668.468 347.335 mo
669.91 347.335 671.08 346.166 671.08 344.724 cv
671.08 343.281 669.91 342.112 668.468 342.112 cv
667.025 342.112 665.857 343.281 665.857 344.724 cv
665.857 346.166 667.025 347.335 668.468 347.335 cv
cp
f
679.021 347.335 mo
680.462 347.335 681.632 346.166 681.632 344.724 cv
681.632 343.281 680.462 342.112 679.021 342.112 cv
677.578 342.112 676.41 343.281 676.41 344.724 cv
676.41 346.166 677.578 347.335 679.021 347.335 cv
cp
f
689.574 347.335 mo
691.015 347.335 692.185 346.166 692.185 344.724 cv
692.185 343.281 691.015 342.112 689.574 342.112 cv
688.131 342.112 686.962 343.281 686.962 344.724 cv
686.962 346.166 688.131 347.335 689.574 347.335 cv
cp
f
700.126 347.335 mo
701.568 347.335 702.738 346.166 702.738 344.724 cv
702.738 343.281 701.568 342.112 700.126 342.112 cv
698.683 342.112 697.515 343.281 697.515 344.724 cv
697.515 346.166 698.683 347.335 700.126 347.335 cv
cp
f
710.679 347.335 mo
712.121 347.335 713.292 346.166 713.292 344.724 cv
713.292 343.281 712.121 342.112 710.679 342.112 cv
709.236 342.112 708.068 343.281 708.068 344.724 cv
708.068 346.166 709.236 347.335 710.679 347.335 cv
cp
f
161.94 357.888 mo
163.383 357.888 164.552 356.718 164.552 355.276 cv
164.552 353.833 163.383 352.665 161.94 352.665 cv
160.498 352.665 159.329 353.833 159.329 355.276 cv
159.329 356.718 160.498 357.888 161.94 357.888 cv
cp
f
172.493 357.888 mo
173.936 357.888 175.105 356.718 175.105 355.276 cv
175.105 353.833 173.936 352.665 172.493 352.665 cv
171.051 352.665 169.881 353.833 169.881 355.276 cv
169.881 356.718 171.051 357.888 172.493 357.888 cv
cp
f
183.046 357.888 mo
184.488 357.888 185.657 356.718 185.657 355.276 cv
185.657 353.833 184.488 352.665 183.046 352.665 cv
181.604 352.665 180.434 353.833 180.434 355.276 cv
180.434 356.718 181.604 357.888 183.046 357.888 cv
cp
f
193.599 357.888 mo
195.041 357.888 196.21 356.718 196.21 355.276 cv
196.21 353.833 195.041 352.665 193.599 352.665 cv
192.156 352.665 190.987 353.833 190.987 355.276 cv
190.987 356.718 192.156 357.888 193.599 357.888 cv
cp
f
204.151 357.888 mo
205.594 357.888 206.763 356.718 206.763 355.276 cv
206.763 353.833 205.594 352.665 204.151 352.665 cv
202.709 352.665 201.54 353.833 201.54 355.276 cv
201.54 356.718 202.709 357.888 204.151 357.888 cv
cp
f
214.704 357.888 mo
216.146 357.888 217.315 356.718 217.315 355.276 cv
217.315 353.833 216.146 352.665 214.704 352.665 cv
213.261 352.665 212.092 353.833 212.092 355.276 cv
212.092 356.718 213.261 357.888 214.704 357.888 cv
cp
f
225.256 357.888 mo
226.699 357.888 227.868 356.718 227.868 355.276 cv
227.868 353.833 226.699 352.665 225.256 352.665 cv
223.814 352.665 222.645 353.833 222.645 355.276 cv
222.645 356.718 223.814 357.888 225.256 357.888 cv
cp
f
235.809 357.888 mo
237.251 357.888 238.421 356.718 238.421 355.276 cv
238.421 353.833 237.251 352.665 235.809 352.665 cv
234.367 352.665 233.197 353.833 233.197 355.276 cv
233.197 356.718 234.367 357.888 235.809 357.888 cv
cp
f
246.362 357.888 mo
247.804 357.888 248.974 356.718 248.974 355.276 cv
248.974 353.833 247.804 352.665 246.362 352.665 cv
244.919 352.665 243.75 353.833 243.75 355.276 cv
243.75 356.718 244.919 357.888 246.362 357.888 cv
cp
f
256.915 357.888 mo
258.357 357.888 259.526 356.718 259.526 355.276 cv
259.526 353.833 258.357 352.665 256.915 352.665 cv
255.472 352.665 254.303 353.833 254.303 355.276 cv
254.303 356.718 255.472 357.888 256.915 357.888 cv
cp
f
267.467 357.888 mo
268.91 357.888 270.079 356.718 270.079 355.276 cv
270.079 353.833 268.91 352.665 267.467 352.665 cv
266.025 352.665 264.855 353.833 264.855 355.276 cv
264.855 356.718 266.025 357.888 267.467 357.888 cv
cp
f
278.02 357.888 mo
279.462 357.888 280.631 356.718 280.631 355.276 cv
280.631 353.833 279.462 352.665 278.02 352.665 cv
276.578 352.665 275.408 353.833 275.408 355.276 cv
275.408 356.718 276.578 357.888 278.02 357.888 cv
cp
f
288.572 357.888 mo
290.015 357.888 291.184 356.718 291.184 355.276 cv
291.184 353.833 290.015 352.665 288.572 352.665 cv
287.13 352.665 285.961 353.833 285.961 355.276 cv
285.961 356.718 287.13 357.888 288.572 357.888 cv
cp
f
299.125 357.888 mo
300.567 357.888 301.737 356.718 301.737 355.276 cv
301.737 353.833 300.567 352.665 299.125 352.665 cv
297.683 352.665 296.514 353.833 296.514 355.276 cv
296.514 356.718 297.683 357.888 299.125 357.888 cv
cp
f
309.678 357.888 mo
311.12 357.888 312.29 356.718 312.29 355.276 cv
312.29 353.833 311.12 352.665 309.678 352.665 cv
308.235 352.665 307.066 353.833 307.066 355.276 cv
307.066 356.718 308.235 357.888 309.678 357.888 cv
cp
f
320.23 357.888 mo
321.673 357.888 322.842 356.718 322.842 355.276 cv
322.842 353.833 321.673 352.665 320.23 352.665 cv
318.788 352.665 317.619 353.833 317.619 355.276 cv
317.619 356.718 318.788 357.888 320.23 357.888 cv
cp
f
330.783 357.888 mo
332.226 357.888 333.395 356.718 333.395 355.276 cv
333.395 353.833 332.226 352.665 330.783 352.665 cv
329.341 352.665 328.171 353.833 328.171 355.276 cv
328.171 356.718 329.341 357.888 330.783 357.888 cv
cp
f
341.336 357.888 mo
342.778 357.888 343.947 356.718 343.947 355.276 cv
343.947 353.833 342.778 352.665 341.336 352.665 cv
339.894 352.665 338.724 353.833 338.724 355.276 cv
338.724 356.718 339.894 357.888 341.336 357.888 cv
cp
f
351.889 357.888 mo
353.331 357.888 354.5 356.718 354.5 355.276 cv
354.5 353.833 353.331 352.665 351.889 352.665 cv
350.446 352.665 349.277 353.833 349.277 355.276 cv
349.277 356.718 350.446 357.888 351.889 357.888 cv
cp
f
362.441 357.888 mo
363.883 357.888 365.053 356.718 365.053 355.276 cv
365.053 353.833 363.883 352.665 362.441 352.665 cv
360.999 352.665 359.83 353.833 359.83 355.276 cv
359.83 356.718 360.999 357.888 362.441 357.888 cv
cp
f
372.994 357.888 mo
374.436 357.888 375.605 356.718 375.605 355.276 cv
375.605 353.833 374.436 352.665 372.994 352.665 cv
371.551 352.665 370.382 353.833 370.382 355.276 cv
370.382 356.718 371.551 357.888 372.994 357.888 cv
cp
f
383.546 357.888 mo
384.989 357.888 386.158 356.718 386.158 355.276 cv
386.158 353.833 384.989 352.665 383.546 352.665 cv
382.104 352.665 380.935 353.833 380.935 355.276 cv
380.935 356.718 382.104 357.888 383.546 357.888 cv
cp
f
394.099 357.888 mo
395.542 357.888 396.711 356.718 396.711 355.276 cv
396.711 353.833 395.542 352.665 394.099 352.665 cv
392.657 352.665 391.488 353.833 391.488 355.276 cv
391.488 356.718 392.657 357.888 394.099 357.888 cv
cp
f
404.652 357.888 mo
406.093 357.888 407.263 356.718 407.263 355.276 cv
407.263 353.833 406.093 352.665 404.652 352.665 cv
403.208 352.665 402.042 353.833 402.042 355.276 cv
402.042 356.718 403.208 357.888 404.652 357.888 cv
cp
f
415.205 357.888 mo
416.646 357.888 417.816 356.718 417.816 355.276 cv
417.816 353.833 416.646 352.665 415.205 352.665 cv
413.762 352.665 412.593 353.833 412.593 355.276 cv
412.593 356.718 413.762 357.888 415.205 357.888 cv
cp
f
425.757 357.888 mo
427.2 357.888 428.369 356.718 428.369 355.276 cv
428.369 353.833 427.2 352.665 425.757 352.665 cv
424.314 352.665 423.146 353.833 423.146 355.276 cv
423.146 356.718 424.314 357.888 425.757 357.888 cv
cp
f
436.31 357.888 mo
437.751 357.888 438.921 356.718 438.921 355.276 cv
438.921 353.833 437.751 352.665 436.31 352.665 cv
434.867 352.665 433.697 353.833 433.697 355.276 cv
433.697 356.718 434.867 357.888 436.31 357.888 cv
cp
f
446.863 357.888 mo
448.304 357.888 449.474 356.718 449.474 355.276 cv
449.474 353.833 448.304 352.665 446.863 352.665 cv
445.42 352.665 444.25 353.833 444.25 355.276 cv
444.25 356.718 445.42 357.888 446.863 357.888 cv
cp
f
457.417 357.888 mo
458.858 357.888 460.027 356.718 460.027 355.276 cv
460.027 353.833 458.858 352.665 457.417 352.665 cv
455.972 352.665 454.803 353.833 454.803 355.276 cv
454.803 356.718 455.972 357.888 457.417 357.888 cv
cp
f
467.968 357.888 mo
469.41 357.888 470.58 356.718 470.58 355.276 cv
470.58 353.833 469.41 352.665 467.968 352.665 cv
466.525 352.665 465.355 353.833 465.355 355.276 cv
465.355 356.718 466.525 357.888 467.968 357.888 cv
cp
f
478.521 357.888 mo
479.962 357.888 481.132 356.718 481.132 355.276 cv
481.132 353.833 479.962 352.665 478.521 352.665 cv
477.079 352.665 475.908 353.833 475.908 355.276 cv
475.908 356.718 477.079 357.888 478.521 357.888 cv
cp
f
489.072 357.888 mo
490.516 357.888 491.685 356.718 491.685 355.276 cv
491.685 353.833 490.516 352.665 489.072 352.665 cv
487.631 352.665 486.461 353.833 486.461 355.276 cv
486.461 356.718 487.631 357.888 489.072 357.888 cv
cp
f
499.625 357.888 mo
501.068 357.888 502.238 356.718 502.238 355.276 cv
502.238 353.833 501.068 352.665 499.625 352.665 cv
498.183 352.665 497.013 353.833 497.013 355.276 cv
497.013 356.718 498.183 357.888 499.625 357.888 cv
cp
f
510.178 357.888 mo
511.621 357.888 512.792 356.718 512.792 355.276 cv
512.792 353.833 511.621 352.665 510.178 352.665 cv
508.737 352.665 507.566 353.833 507.566 355.276 cv
507.566 356.718 508.737 357.888 510.178 357.888 cv
cp
f
520.73 357.888 mo
522.174 357.888 523.343 356.718 523.343 355.276 cv
523.343 353.833 522.174 352.665 520.73 352.665 cv
519.289 352.665 518.119 353.833 518.119 355.276 cv
518.119 356.718 519.289 357.888 520.73 357.888 cv
cp
f
531.283 357.888 mo
532.726 357.888 533.896 356.718 533.896 355.276 cv
533.896 353.833 532.726 352.665 531.283 352.665 cv
529.841 352.665 528.671 353.833 528.671 355.276 cv
528.671 356.718 529.841 357.888 531.283 357.888 cv
cp
f
541.835 357.888 mo
543.279 357.888 544.447 356.718 544.447 355.276 cv
544.447 353.833 543.279 352.665 541.835 352.665 cv
540.395 352.665 539.224 353.833 539.224 355.276 cv
539.224 356.718 540.395 357.888 541.835 357.888 cv
cp
f
552.388 357.888 mo
553.833 357.888 555 356.718 555 355.276 cv
555 353.833 553.833 352.665 552.388 352.665 cv
550.947 352.665 549.777 353.833 549.777 355.276 cv
549.777 356.718 550.947 357.888 552.388 357.888 cv
cp
f
562.941 357.888 mo
564.384 357.888 565.553 356.718 565.553 355.276 cv
565.553 353.833 564.384 352.665 562.941 352.665 cv
561.5 352.665 560.33 353.833 560.33 355.276 cv
560.33 356.718 561.5 357.888 562.941 357.888 cv
cp
f
573.494 357.888 mo
574.937 357.888 576.105 356.718 576.105 355.276 cv
576.105 353.833 574.937 352.665 573.494 352.665 cv
572.053 352.665 570.882 353.833 570.882 355.276 cv
570.882 356.718 572.053 357.888 573.494 357.888 cv
cp
f
584.046 357.888 mo
585.491 357.888 586.658 356.718 586.658 355.276 cv
586.658 353.833 585.491 352.665 584.046 352.665 cv
582.605 352.665 581.435 353.833 581.435 355.276 cv
581.435 356.718 582.605 357.888 584.046 357.888 cv
cp
f
594.599 357.888 mo
596.042 357.888 597.21 356.718 597.21 355.276 cv
597.21 353.833 596.042 352.665 594.599 352.665 cv
593.158 352.665 591.988 353.833 591.988 355.276 cv
591.988 356.718 593.158 357.888 594.599 357.888 cv
cp
f
605.152 357.888 mo
606.595 357.888 607.763 356.718 607.763 355.276 cv
607.763 353.833 606.595 352.665 605.152 352.665 cv
603.71 352.665 602.542 353.833 602.542 355.276 cv
602.542 356.718 603.71 357.888 605.152 357.888 cv
cp
f
615.705 357.888 mo
617.148 357.888 618.316 356.718 618.316 355.276 cv
618.316 353.833 617.148 352.665 615.705 352.665 cv
614.263 352.665 613.093 353.833 613.093 355.276 cv
613.093 356.718 614.263 357.888 615.705 357.888 cv
cp
f
626.257 357.888 mo
627.701 357.888 628.869 356.718 628.869 355.276 cv
628.869 353.833 627.701 352.665 626.257 352.665 cv
624.816 352.665 623.646 353.833 623.646 355.276 cv
623.646 356.718 624.816 357.888 626.257 357.888 cv
cp
f
636.81 357.888 mo
638.251 357.888 639.421 356.718 639.421 355.276 cv
639.421 353.833 638.251 352.665 636.81 352.665 cv
635.369 352.665 634.2 353.833 634.2 355.276 cv
634.2 356.718 635.369 357.888 636.81 357.888 cv
cp
f
647.363 357.888 mo
648.804 357.888 649.974 356.718 649.974 355.276 cv
649.974 353.833 648.804 352.665 647.363 352.665 cv
645.919 352.665 644.751 353.833 644.751 355.276 cv
644.751 356.718 645.919 357.888 647.363 357.888 cv
cp
f
657.917 357.888 mo
659.357 357.888 660.527 356.718 660.527 355.276 cv
660.527 353.833 659.357 352.665 657.917 352.665 cv
656.472 352.665 655.304 353.833 655.304 355.276 cv
655.304 356.718 656.472 357.888 657.917 357.888 cv
cp
f
668.468 357.888 mo
669.91 357.888 671.08 356.718 671.08 355.276 cv
671.08 353.833 669.91 352.665 668.468 352.665 cv
667.025 352.665 665.857 353.833 665.857 355.276 cv
665.857 356.718 667.025 357.888 668.468 357.888 cv
cp
f
679.021 357.888 mo
680.462 357.888 681.632 356.718 681.632 355.276 cv
681.632 353.833 680.462 352.665 679.021 352.665 cv
677.578 352.665 676.41 353.833 676.41 355.276 cv
676.41 356.718 677.578 357.888 679.021 357.888 cv
cp
f
689.574 357.888 mo
691.015 357.888 692.185 356.718 692.185 355.276 cv
692.185 353.833 691.015 352.665 689.574 352.665 cv
688.131 352.665 686.962 353.833 686.962 355.276 cv
686.962 356.718 688.131 357.888 689.574 357.888 cv
cp
f
700.126 357.888 mo
701.568 357.888 702.738 356.718 702.738 355.276 cv
702.738 353.833 701.568 352.665 700.126 352.665 cv
698.683 352.665 697.515 353.833 697.515 355.276 cv
697.515 356.718 698.683 357.888 700.126 357.888 cv
cp
f
161.94 368.44 mo
163.383 368.44 164.552 367.271 164.552 365.829 cv
164.552 364.386 163.383 363.217 161.94 363.217 cv
160.498 363.217 159.329 364.386 159.329 365.829 cv
159.329 367.271 160.498 368.44 161.94 368.44 cv
cp
f
172.493 368.44 mo
173.936 368.44 175.105 367.271 175.105 365.829 cv
175.105 364.386 173.936 363.217 172.493 363.217 cv
171.051 363.217 169.881 364.386 169.881 365.829 cv
169.881 367.271 171.051 368.44 172.493 368.44 cv
cp
f
183.046 368.44 mo
184.488 368.44 185.657 367.271 185.657 365.829 cv
185.657 364.386 184.488 363.217 183.046 363.217 cv
181.604 363.217 180.434 364.386 180.434 365.829 cv
180.434 367.271 181.604 368.44 183.046 368.44 cv
cp
f
193.599 368.44 mo
195.041 368.44 196.21 367.271 196.21 365.829 cv
196.21 364.386 195.041 363.217 193.599 363.217 cv
192.156 363.217 190.987 364.386 190.987 365.829 cv
190.987 367.271 192.156 368.44 193.599 368.44 cv
cp
f
204.151 368.44 mo
205.594 368.44 206.763 367.271 206.763 365.829 cv
206.763 364.386 205.594 363.217 204.151 363.217 cv
202.709 363.217 201.54 364.386 201.54 365.829 cv
201.54 367.271 202.709 368.44 204.151 368.44 cv
cp
f
214.704 368.44 mo
216.146 368.44 217.315 367.271 217.315 365.829 cv
217.315 364.386 216.146 363.217 214.704 363.217 cv
213.261 363.217 212.092 364.386 212.092 365.829 cv
212.092 367.271 213.261 368.44 214.704 368.44 cv
cp
f
225.256 368.44 mo
226.699 368.44 227.868 367.271 227.868 365.829 cv
227.868 364.386 226.699 363.217 225.256 363.217 cv
223.814 363.217 222.645 364.386 222.645 365.829 cv
222.645 367.271 223.814 368.44 225.256 368.44 cv
cp
f
235.809 368.44 mo
237.251 368.44 238.421 367.271 238.421 365.829 cv
238.421 364.386 237.251 363.217 235.809 363.217 cv
234.367 363.217 233.197 364.386 233.197 365.829 cv
233.197 367.271 234.367 368.44 235.809 368.44 cv
cp
f
246.362 368.44 mo
247.804 368.44 248.974 367.271 248.974 365.829 cv
248.974 364.386 247.804 363.217 246.362 363.217 cv
244.919 363.217 243.75 364.386 243.75 365.829 cv
243.75 367.271 244.919 368.44 246.362 368.44 cv
cp
f
256.915 368.44 mo
258.357 368.44 259.526 367.271 259.526 365.829 cv
259.526 364.386 258.357 363.217 256.915 363.217 cv
255.472 363.217 254.303 364.386 254.303 365.829 cv
254.303 367.271 255.472 368.44 256.915 368.44 cv
cp
f
267.467 368.44 mo
268.91 368.44 270.079 367.271 270.079 365.829 cv
270.079 364.386 268.91 363.217 267.467 363.217 cv
266.025 363.217 264.855 364.386 264.855 365.829 cv
264.855 367.271 266.025 368.44 267.467 368.44 cv
cp
f
278.02 368.44 mo
279.462 368.44 280.631 367.271 280.631 365.829 cv
280.631 364.386 279.462 363.217 278.02 363.217 cv
276.578 363.217 275.408 364.386 275.408 365.829 cv
275.408 367.271 276.578 368.44 278.02 368.44 cv
cp
f
288.572 368.44 mo
290.015 368.44 291.184 367.271 291.184 365.829 cv
291.184 364.386 290.015 363.217 288.572 363.217 cv
287.13 363.217 285.961 364.386 285.961 365.829 cv
285.961 367.271 287.13 368.44 288.572 368.44 cv
cp
f
299.125 368.44 mo
300.567 368.44 301.737 367.271 301.737 365.829 cv
301.737 364.386 300.567 363.217 299.125 363.217 cv
297.683 363.217 296.514 364.386 296.514 365.829 cv
296.514 367.271 297.683 368.44 299.125 368.44 cv
cp
f
309.678 368.44 mo
311.12 368.44 312.29 367.271 312.29 365.829 cv
312.29 364.386 311.12 363.217 309.678 363.217 cv
308.235 363.217 307.066 364.386 307.066 365.829 cv
307.066 367.271 308.235 368.44 309.678 368.44 cv
cp
f
320.23 368.44 mo
321.673 368.44 322.842 367.271 322.842 365.829 cv
322.842 364.386 321.673 363.217 320.23 363.217 cv
318.788 363.217 317.619 364.386 317.619 365.829 cv
317.619 367.271 318.788 368.44 320.23 368.44 cv
cp
f
330.783 368.44 mo
332.226 368.44 333.395 367.271 333.395 365.829 cv
333.395 364.386 332.226 363.217 330.783 363.217 cv
329.341 363.217 328.171 364.386 328.171 365.829 cv
328.171 367.271 329.341 368.44 330.783 368.44 cv
cp
f
341.336 368.44 mo
342.778 368.44 343.947 367.271 343.947 365.829 cv
343.947 364.386 342.778 363.217 341.336 363.217 cv
339.894 363.217 338.724 364.386 338.724 365.829 cv
338.724 367.271 339.894 368.44 341.336 368.44 cv
cp
f
351.889 368.44 mo
353.331 368.44 354.5 367.271 354.5 365.829 cv
354.5 364.386 353.331 363.217 351.889 363.217 cv
350.446 363.217 349.277 364.386 349.277 365.829 cv
349.277 367.271 350.446 368.44 351.889 368.44 cv
cp
f
362.441 368.44 mo
363.883 368.44 365.053 367.271 365.053 365.829 cv
365.053 364.386 363.883 363.217 362.441 363.217 cv
360.999 363.217 359.83 364.386 359.83 365.829 cv
359.83 367.271 360.999 368.44 362.441 368.44 cv
cp
f
372.994 368.44 mo
374.436 368.44 375.605 367.271 375.605 365.829 cv
375.605 364.386 374.436 363.217 372.994 363.217 cv
371.551 363.217 370.382 364.386 370.382 365.829 cv
370.382 367.271 371.551 368.44 372.994 368.44 cv
cp
f
383.546 368.44 mo
384.989 368.44 386.158 367.271 386.158 365.829 cv
386.158 364.386 384.989 363.217 383.546 363.217 cv
382.104 363.217 380.935 364.386 380.935 365.829 cv
380.935 367.271 382.104 368.44 383.546 368.44 cv
cp
f
394.099 368.44 mo
395.542 368.44 396.711 367.271 396.711 365.829 cv
396.711 364.386 395.542 363.217 394.099 363.217 cv
392.657 363.217 391.488 364.386 391.488 365.829 cv
391.488 367.271 392.657 368.44 394.099 368.44 cv
cp
f
404.652 368.44 mo
406.093 368.44 407.263 367.271 407.263 365.829 cv
407.263 364.386 406.093 363.217 404.652 363.217 cv
403.208 363.217 402.042 364.386 402.042 365.829 cv
402.042 367.271 403.208 368.44 404.652 368.44 cv
cp
f
415.205 368.44 mo
416.646 368.44 417.816 367.271 417.816 365.829 cv
417.816 364.386 416.646 363.217 415.205 363.217 cv
413.762 363.217 412.593 364.386 412.593 365.829 cv
412.593 367.271 413.762 368.44 415.205 368.44 cv
cp
f
425.757 368.44 mo
427.2 368.44 428.369 367.271 428.369 365.829 cv
428.369 364.386 427.2 363.217 425.757 363.217 cv
424.314 363.217 423.146 364.386 423.146 365.829 cv
423.146 367.271 424.314 368.44 425.757 368.44 cv
cp
f
436.31 368.44 mo
437.751 368.44 438.921 367.271 438.921 365.829 cv
438.921 364.386 437.751 363.217 436.31 363.217 cv
434.867 363.217 433.697 364.386 433.697 365.829 cv
433.697 367.271 434.867 368.44 436.31 368.44 cv
cp
f
446.863 368.44 mo
448.304 368.44 449.474 367.271 449.474 365.829 cv
449.474 364.386 448.304 363.217 446.863 363.217 cv
445.42 363.217 444.25 364.386 444.25 365.829 cv
444.25 367.271 445.42 368.44 446.863 368.44 cv
cp
f
457.417 368.44 mo
458.858 368.44 460.027 367.271 460.027 365.829 cv
460.027 364.386 458.858 363.217 457.417 363.217 cv
455.972 363.217 454.803 364.386 454.803 365.829 cv
454.803 367.271 455.972 368.44 457.417 368.44 cv
cp
f
467.968 368.44 mo
469.41 368.44 470.58 367.271 470.58 365.829 cv
470.58 364.386 469.41 363.217 467.968 363.217 cv
466.525 363.217 465.355 364.386 465.355 365.829 cv
465.355 367.271 466.525 368.44 467.968 368.44 cv
cp
f
478.521 368.44 mo
479.962 368.44 481.132 367.271 481.132 365.829 cv
481.132 364.386 479.962 363.217 478.521 363.217 cv
477.079 363.217 475.908 364.386 475.908 365.829 cv
475.908 367.271 477.079 368.44 478.521 368.44 cv
cp
f
489.072 368.44 mo
490.516 368.44 491.685 367.271 491.685 365.829 cv
491.685 364.386 490.516 363.217 489.072 363.217 cv
487.631 363.217 486.461 364.386 486.461 365.829 cv
486.461 367.271 487.631 368.44 489.072 368.44 cv
cp
f
499.625 368.44 mo
501.068 368.44 502.238 367.271 502.238 365.829 cv
502.238 364.386 501.068 363.217 499.625 363.217 cv
498.183 363.217 497.013 364.386 497.013 365.829 cv
497.013 367.271 498.183 368.44 499.625 368.44 cv
cp
f
510.178 368.44 mo
511.621 368.44 512.792 367.271 512.792 365.829 cv
512.792 364.386 511.621 363.217 510.178 363.217 cv
508.737 363.217 507.566 364.386 507.566 365.829 cv
507.566 367.271 508.737 368.44 510.178 368.44 cv
cp
f
520.73 368.44 mo
522.174 368.44 523.343 367.271 523.343 365.829 cv
523.343 364.386 522.174 363.217 520.73 363.217 cv
519.289 363.217 518.119 364.386 518.119 365.829 cv
518.119 367.271 519.289 368.44 520.73 368.44 cv
cp
f
531.283 368.44 mo
532.726 368.44 533.896 367.271 533.896 365.829 cv
533.896 364.386 532.726 363.217 531.283 363.217 cv
529.841 363.217 528.671 364.386 528.671 365.829 cv
528.671 367.271 529.841 368.44 531.283 368.44 cv
cp
f
541.835 368.44 mo
543.279 368.44 544.447 367.271 544.447 365.829 cv
544.447 364.386 543.279 363.217 541.835 363.217 cv
540.395 363.217 539.224 364.386 539.224 365.829 cv
539.224 367.271 540.395 368.44 541.835 368.44 cv
cp
f
552.388 368.44 mo
553.833 368.44 555 367.271 555 365.829 cv
555 364.386 553.833 363.217 552.388 363.217 cv
550.947 363.217 549.777 364.386 549.777 365.829 cv
549.777 367.271 550.947 368.44 552.388 368.44 cv
cp
f
562.941 368.44 mo
564.384 368.44 565.553 367.271 565.553 365.829 cv
565.553 364.386 564.384 363.217 562.941 363.217 cv
561.5 363.217 560.33 364.386 560.33 365.829 cv
560.33 367.271 561.5 368.44 562.941 368.44 cv
cp
f
573.494 368.44 mo
574.937 368.44 576.105 367.271 576.105 365.829 cv
576.105 364.386 574.937 363.217 573.494 363.217 cv
572.053 363.217 570.882 364.386 570.882 365.829 cv
570.882 367.271 572.053 368.44 573.494 368.44 cv
cp
f
584.046 368.44 mo
585.491 368.44 586.658 367.271 586.658 365.829 cv
586.658 364.386 585.491 363.217 584.046 363.217 cv
582.605 363.217 581.435 364.386 581.435 365.829 cv
581.435 367.271 582.605 368.44 584.046 368.44 cv
cp
f
594.599 368.44 mo
596.042 368.44 597.21 367.271 597.21 365.829 cv
597.21 364.386 596.042 363.217 594.599 363.217 cv
593.158 363.217 591.988 364.386 591.988 365.829 cv
591.988 367.271 593.158 368.44 594.599 368.44 cv
cp
f
605.152 368.44 mo
606.595 368.44 607.763 367.271 607.763 365.829 cv
607.763 364.386 606.595 363.217 605.152 363.217 cv
603.71 363.217 602.542 364.386 602.542 365.829 cv
602.542 367.271 603.71 368.44 605.152 368.44 cv
cp
f
615.705 368.44 mo
617.148 368.44 618.316 367.271 618.316 365.829 cv
618.316 364.386 617.148 363.217 615.705 363.217 cv
614.263 363.217 613.093 364.386 613.093 365.829 cv
613.093 367.271 614.263 368.44 615.705 368.44 cv
cp
f
626.257 368.44 mo
627.701 368.44 628.869 367.271 628.869 365.829 cv
628.869 364.386 627.701 363.217 626.257 363.217 cv
624.816 363.217 623.646 364.386 623.646 365.829 cv
623.646 367.271 624.816 368.44 626.257 368.44 cv
cp
f
636.81 368.44 mo
638.251 368.44 639.421 367.271 639.421 365.829 cv
639.421 364.386 638.251 363.217 636.81 363.217 cv
635.369 363.217 634.2 364.386 634.2 365.829 cv
634.2 367.271 635.369 368.44 636.81 368.44 cv
cp
f
647.363 368.44 mo
648.804 368.44 649.974 367.271 649.974 365.829 cv
649.974 364.386 648.804 363.217 647.363 363.217 cv
645.919 363.217 644.751 364.386 644.751 365.829 cv
644.751 367.271 645.919 368.44 647.363 368.44 cv
cp
f
657.917 368.44 mo
659.357 368.44 660.527 367.271 660.527 365.829 cv
660.527 364.386 659.357 363.217 657.917 363.217 cv
656.472 363.217 655.304 364.386 655.304 365.829 cv
655.304 367.271 656.472 368.44 657.917 368.44 cv
cp
f
668.468 368.44 mo
669.91 368.44 671.08 367.271 671.08 365.829 cv
671.08 364.386 669.91 363.217 668.468 363.217 cv
667.025 363.217 665.857 364.386 665.857 365.829 cv
665.857 367.271 667.025 368.44 668.468 368.44 cv
cp
f
679.021 368.44 mo
680.462 368.44 681.632 367.271 681.632 365.829 cv
681.632 364.386 680.462 363.217 679.021 363.217 cv
677.578 363.217 676.41 364.386 676.41 365.829 cv
676.41 367.271 677.578 368.44 679.021 368.44 cv
cp
f
689.574 368.44 mo
691.015 368.44 692.185 367.271 692.185 365.829 cv
692.185 364.386 691.015 363.217 689.574 363.217 cv
688.131 363.217 686.962 364.386 686.962 365.829 cv
686.962 367.271 688.131 368.44 689.574 368.44 cv
cp
f
151.388 378.993 mo
152.83 378.993 154 377.824 154 376.381 cv
154 374.939 152.83 373.77 151.388 373.77 cv
149.945 373.77 148.776 374.939 148.776 376.381 cv
148.776 377.824 149.945 378.993 151.388 378.993 cv
cp
f
161.94 378.993 mo
163.383 378.993 164.552 377.824 164.552 376.381 cv
164.552 374.939 163.383 373.77 161.94 373.77 cv
160.498 373.77 159.329 374.939 159.329 376.381 cv
159.329 377.824 160.498 378.993 161.94 378.993 cv
cp
f
172.493 378.993 mo
173.936 378.993 175.105 377.824 175.105 376.381 cv
175.105 374.939 173.936 373.77 172.493 373.77 cv
171.051 373.77 169.881 374.939 169.881 376.381 cv
169.881 377.824 171.051 378.993 172.493 378.993 cv
cp
f
183.046 378.993 mo
184.488 378.993 185.657 377.824 185.657 376.381 cv
185.657 374.939 184.488 373.77 183.046 373.77 cv
181.604 373.77 180.434 374.939 180.434 376.381 cv
180.434 377.824 181.604 378.993 183.046 378.993 cv
cp
f
193.599 378.993 mo
195.041 378.993 196.21 377.824 196.21 376.381 cv
196.21 374.939 195.041 373.77 193.599 373.77 cv
192.156 373.77 190.987 374.939 190.987 376.381 cv
190.987 377.824 192.156 378.993 193.599 378.993 cv
cp
f
204.151 378.993 mo
205.594 378.993 206.763 377.824 206.763 376.381 cv
206.763 374.939 205.594 373.77 204.151 373.77 cv
202.709 373.77 201.54 374.939 201.54 376.381 cv
201.54 377.824 202.709 378.993 204.151 378.993 cv
cp
f
214.704 378.993 mo
216.146 378.993 217.315 377.824 217.315 376.381 cv
217.315 374.939 216.146 373.77 214.704 373.77 cv
213.261 373.77 212.092 374.939 212.092 376.381 cv
212.092 377.824 213.261 378.993 214.704 378.993 cv
cp
f
225.256 378.993 mo
226.699 378.993 227.868 377.824 227.868 376.381 cv
227.868 374.939 226.699 373.77 225.256 373.77 cv
223.814 373.77 222.645 374.939 222.645 376.381 cv
222.645 377.824 223.814 378.993 225.256 378.993 cv
cp
f
235.809 378.993 mo
237.251 378.993 238.421 377.824 238.421 376.381 cv
238.421 374.939 237.251 373.77 235.809 373.77 cv
234.367 373.77 233.197 374.939 233.197 376.381 cv
233.197 377.824 234.367 378.993 235.809 378.993 cv
cp
f
246.362 378.993 mo
247.804 378.993 248.974 377.824 248.974 376.381 cv
248.974 374.939 247.804 373.77 246.362 373.77 cv
244.919 373.77 243.75 374.939 243.75 376.381 cv
243.75 377.824 244.919 378.993 246.362 378.993 cv
cp
f
256.915 378.993 mo
258.357 378.993 259.526 377.824 259.526 376.381 cv
259.526 374.939 258.357 373.77 256.915 373.77 cv
255.472 373.77 254.303 374.939 254.303 376.381 cv
254.303 377.824 255.472 378.993 256.915 378.993 cv
cp
f
267.467 378.993 mo
268.91 378.993 270.079 377.824 270.079 376.381 cv
270.079 374.939 268.91 373.77 267.467 373.77 cv
266.025 373.77 264.855 374.939 264.855 376.381 cv
264.855 377.824 266.025 378.993 267.467 378.993 cv
cp
f
278.02 378.993 mo
279.462 378.993 280.631 377.824 280.631 376.381 cv
280.631 374.939 279.462 373.77 278.02 373.77 cv
276.578 373.77 275.408 374.939 275.408 376.381 cv
275.408 377.824 276.578 378.993 278.02 378.993 cv
cp
f
288.572 378.993 mo
290.015 378.993 291.184 377.824 291.184 376.381 cv
291.184 374.939 290.015 373.77 288.572 373.77 cv
287.13 373.77 285.961 374.939 285.961 376.381 cv
285.961 377.824 287.13 378.993 288.572 378.993 cv
cp
f
299.125 378.993 mo
300.567 378.993 301.737 377.824 301.737 376.381 cv
301.737 374.939 300.567 373.77 299.125 373.77 cv
297.683 373.77 296.514 374.939 296.514 376.381 cv
296.514 377.824 297.683 378.993 299.125 378.993 cv
cp
f
309.678 378.993 mo
311.12 378.993 312.29 377.824 312.29 376.381 cv
312.29 374.939 311.12 373.77 309.678 373.77 cv
308.235 373.77 307.066 374.939 307.066 376.381 cv
307.066 377.824 308.235 378.993 309.678 378.993 cv
cp
f
320.23 378.993 mo
321.673 378.993 322.842 377.824 322.842 376.381 cv
322.842 374.939 321.673 373.77 320.23 373.77 cv
318.788 373.77 317.619 374.939 317.619 376.381 cv
317.619 377.824 318.788 378.993 320.23 378.993 cv
cp
f
330.783 378.993 mo
332.226 378.993 333.395 377.824 333.395 376.381 cv
333.395 374.939 332.226 373.77 330.783 373.77 cv
329.341 373.77 328.171 374.939 328.171 376.381 cv
328.171 377.824 329.341 378.993 330.783 378.993 cv
cp
f
341.336 378.993 mo
342.778 378.993 343.947 377.824 343.947 376.381 cv
343.947 374.939 342.778 373.77 341.336 373.77 cv
339.894 373.77 338.724 374.939 338.724 376.381 cv
338.724 377.824 339.894 378.993 341.336 378.993 cv
cp
f
351.889 378.993 mo
353.331 378.993 354.5 377.824 354.5 376.381 cv
354.5 374.939 353.331 373.77 351.889 373.77 cv
350.446 373.77 349.277 374.939 349.277 376.381 cv
349.277 377.824 350.446 378.993 351.889 378.993 cv
cp
f
362.441 378.993 mo
363.883 378.993 365.053 377.824 365.053 376.381 cv
365.053 374.939 363.883 373.77 362.441 373.77 cv
360.999 373.77 359.83 374.939 359.83 376.381 cv
359.83 377.824 360.999 378.993 362.441 378.993 cv
cp
f
372.994 378.993 mo
374.436 378.993 375.605 377.824 375.605 376.381 cv
375.605 374.939 374.436 373.77 372.994 373.77 cv
371.551 373.77 370.382 374.939 370.382 376.381 cv
370.382 377.824 371.551 378.993 372.994 378.993 cv
cp
f
383.546 378.993 mo
384.989 378.993 386.158 377.824 386.158 376.381 cv
386.158 374.939 384.989 373.77 383.546 373.77 cv
382.104 373.77 380.935 374.939 380.935 376.381 cv
380.935 377.824 382.104 378.993 383.546 378.993 cv
cp
f
394.099 378.993 mo
395.542 378.993 396.711 377.824 396.711 376.381 cv
396.711 374.939 395.542 373.77 394.099 373.77 cv
392.657 373.77 391.488 374.939 391.488 376.381 cv
391.488 377.824 392.657 378.993 394.099 378.993 cv
cp
f
404.652 378.993 mo
406.093 378.993 407.263 377.824 407.263 376.381 cv
407.263 374.939 406.093 373.77 404.652 373.77 cv
403.208 373.77 402.042 374.939 402.042 376.381 cv
402.042 377.824 403.208 378.993 404.652 378.993 cv
cp
f
415.205 378.993 mo
416.646 378.993 417.816 377.824 417.816 376.381 cv
417.816 374.939 416.646 373.77 415.205 373.77 cv
413.762 373.77 412.593 374.939 412.593 376.381 cv
412.593 377.824 413.762 378.993 415.205 378.993 cv
cp
f
425.757 378.993 mo
427.2 378.993 428.369 377.824 428.369 376.381 cv
428.369 374.939 427.2 373.77 425.757 373.77 cv
424.314 373.77 423.146 374.939 423.146 376.381 cv
423.146 377.824 424.314 378.993 425.757 378.993 cv
cp
f
436.31 378.993 mo
437.751 378.993 438.921 377.824 438.921 376.381 cv
438.921 374.939 437.751 373.77 436.31 373.77 cv
434.867 373.77 433.697 374.939 433.697 376.381 cv
433.697 377.824 434.867 378.993 436.31 378.993 cv
cp
f
446.863 378.993 mo
448.304 378.993 449.474 377.824 449.474 376.381 cv
449.474 374.939 448.304 373.77 446.863 373.77 cv
445.42 373.77 444.25 374.939 444.25 376.381 cv
444.25 377.824 445.42 378.993 446.863 378.993 cv
cp
f
457.417 378.993 mo
458.858 378.993 460.027 377.824 460.027 376.381 cv
460.027 374.939 458.858 373.77 457.417 373.77 cv
455.972 373.77 454.803 374.939 454.803 376.381 cv
454.803 377.824 455.972 378.993 457.417 378.993 cv
cp
f
467.968 378.993 mo
469.41 378.993 470.58 377.824 470.58 376.381 cv
470.58 374.939 469.41 373.77 467.968 373.77 cv
466.525 373.77 465.355 374.939 465.355 376.381 cv
465.355 377.824 466.525 378.993 467.968 378.993 cv
cp
f
478.521 378.993 mo
479.962 378.993 481.132 377.824 481.132 376.381 cv
481.132 374.939 479.962 373.77 478.521 373.77 cv
477.079 373.77 475.908 374.939 475.908 376.381 cv
475.908 377.824 477.079 378.993 478.521 378.993 cv
cp
f
489.072 378.993 mo
490.516 378.993 491.685 377.824 491.685 376.381 cv
491.685 374.939 490.516 373.77 489.072 373.77 cv
487.631 373.77 486.461 374.939 486.461 376.381 cv
486.461 377.824 487.631 378.993 489.072 378.993 cv
cp
f
499.625 378.993 mo
501.068 378.993 502.238 377.824 502.238 376.381 cv
502.238 374.939 501.068 373.77 499.625 373.77 cv
498.183 373.77 497.013 374.939 497.013 376.381 cv
497.013 377.824 498.183 378.993 499.625 378.993 cv
cp
f
510.178 378.993 mo
511.621 378.993 512.792 377.824 512.792 376.381 cv
512.792 374.939 511.621 373.77 510.178 373.77 cv
508.737 373.77 507.566 374.939 507.566 376.381 cv
507.566 377.824 508.737 378.993 510.178 378.993 cv
cp
f
520.73 378.993 mo
522.174 378.993 523.343 377.824 523.343 376.381 cv
523.343 374.939 522.174 373.77 520.73 373.77 cv
519.289 373.77 518.119 374.939 518.119 376.381 cv
518.119 377.824 519.289 378.993 520.73 378.993 cv
cp
f
531.283 378.993 mo
532.726 378.993 533.896 377.824 533.896 376.381 cv
533.896 374.939 532.726 373.77 531.283 373.77 cv
529.841 373.77 528.671 374.939 528.671 376.381 cv
528.671 377.824 529.841 378.993 531.283 378.993 cv
cp
f
541.835 378.993 mo
543.279 378.993 544.447 377.824 544.447 376.381 cv
544.447 374.939 543.279 373.77 541.835 373.77 cv
540.395 373.77 539.224 374.939 539.224 376.381 cv
539.224 377.824 540.395 378.993 541.835 378.993 cv
cp
f
552.388 378.993 mo
553.833 378.993 555 377.824 555 376.381 cv
555 374.939 553.833 373.77 552.388 373.77 cv
550.947 373.77 549.777 374.939 549.777 376.381 cv
549.777 377.824 550.947 378.993 552.388 378.993 cv
cp
f
562.941 378.993 mo
564.384 378.993 565.553 377.824 565.553 376.381 cv
565.553 374.939 564.384 373.77 562.941 373.77 cv
561.5 373.77 560.33 374.939 560.33 376.381 cv
560.33 377.824 561.5 378.993 562.941 378.993 cv
cp
f
573.494 378.993 mo
574.937 378.993 576.105 377.824 576.105 376.381 cv
576.105 374.939 574.937 373.77 573.494 373.77 cv
572.053 373.77 570.882 374.939 570.882 376.381 cv
570.882 377.824 572.053 378.993 573.494 378.993 cv
cp
f
584.046 378.993 mo
585.491 378.993 586.658 377.824 586.658 376.381 cv
586.658 374.939 585.491 373.77 584.046 373.77 cv
582.605 373.77 581.435 374.939 581.435 376.381 cv
581.435 377.824 582.605 378.993 584.046 378.993 cv
cp
f
594.599 378.993 mo
596.042 378.993 597.21 377.824 597.21 376.381 cv
597.21 374.939 596.042 373.77 594.599 373.77 cv
593.158 373.77 591.988 374.939 591.988 376.381 cv
591.988 377.824 593.158 378.993 594.599 378.993 cv
cp
f
605.152 378.993 mo
606.595 378.993 607.763 377.824 607.763 376.381 cv
607.763 374.939 606.595 373.77 605.152 373.77 cv
603.71 373.77 602.542 374.939 602.542 376.381 cv
602.542 377.824 603.71 378.993 605.152 378.993 cv
cp
f
615.705 378.993 mo
617.148 378.993 618.316 377.824 618.316 376.381 cv
618.316 374.939 617.148 373.77 615.705 373.77 cv
614.263 373.77 613.093 374.939 613.093 376.381 cv
613.093 377.824 614.263 378.993 615.705 378.993 cv
cp
f
626.257 378.993 mo
627.701 378.993 628.869 377.824 628.869 376.381 cv
628.869 374.939 627.701 373.77 626.257 373.77 cv
624.816 373.77 623.646 374.939 623.646 376.381 cv
623.646 377.824 624.816 378.993 626.257 378.993 cv
cp
f
636.81 378.993 mo
638.251 378.993 639.421 377.824 639.421 376.381 cv
639.421 374.939 638.251 373.77 636.81 373.77 cv
635.369 373.77 634.2 374.939 634.2 376.381 cv
634.2 377.824 635.369 378.993 636.81 378.993 cv
cp
f
647.363 378.993 mo
648.804 378.993 649.974 377.824 649.974 376.381 cv
649.974 374.939 648.804 373.77 647.363 373.77 cv
645.919 373.77 644.751 374.939 644.751 376.381 cv
644.751 377.824 645.919 378.993 647.363 378.993 cv
cp
f
657.917 378.993 mo
659.357 378.993 660.527 377.824 660.527 376.381 cv
660.527 374.939 659.357 373.77 657.917 373.77 cv
656.472 373.77 655.304 374.939 655.304 376.381 cv
655.304 377.824 656.472 378.993 657.917 378.993 cv
cp
f
668.468 378.993 mo
669.91 378.993 671.08 377.824 671.08 376.381 cv
671.08 374.939 669.91 373.77 668.468 373.77 cv
667.025 373.77 665.857 374.939 665.857 376.381 cv
665.857 377.824 667.025 378.993 668.468 378.993 cv
cp
f
679.021 378.993 mo
680.462 378.993 681.632 377.824 681.632 376.381 cv
681.632 374.939 680.462 373.77 679.021 373.77 cv
677.578 373.77 676.41 374.939 676.41 376.381 cv
676.41 377.824 677.578 378.993 679.021 378.993 cv
cp
f
689.574 378.993 mo
691.015 378.993 692.185 377.824 692.185 376.381 cv
692.185 374.939 691.015 373.77 689.574 373.77 cv
688.131 373.77 686.962 374.939 686.962 376.381 cv
686.962 377.824 688.131 378.993 689.574 378.993 cv
cp
f
151.388 389.546 mo
152.83 389.546 154 388.376 154 386.934 cv
154 385.492 152.83 384.322 151.388 384.322 cv
149.945 384.322 148.776 385.492 148.776 386.934 cv
148.776 388.376 149.945 389.546 151.388 389.546 cv
cp
f
161.94 389.546 mo
163.383 389.546 164.552 388.376 164.552 386.934 cv
164.552 385.492 163.383 384.322 161.94 384.322 cv
160.498 384.322 159.329 385.492 159.329 386.934 cv
159.329 388.376 160.498 389.546 161.94 389.546 cv
cp
f
172.493 389.546 mo
173.936 389.546 175.105 388.376 175.105 386.934 cv
175.105 385.492 173.936 384.322 172.493 384.322 cv
171.051 384.322 169.881 385.492 169.881 386.934 cv
169.881 388.376 171.051 389.546 172.493 389.546 cv
cp
f
183.046 389.546 mo
184.488 389.546 185.657 388.376 185.657 386.934 cv
185.657 385.492 184.488 384.322 183.046 384.322 cv
181.604 384.322 180.434 385.492 180.434 386.934 cv
180.434 388.376 181.604 389.546 183.046 389.546 cv
cp
f
193.599 389.546 mo
195.041 389.546 196.21 388.376 196.21 386.934 cv
196.21 385.492 195.041 384.322 193.599 384.322 cv
192.156 384.322 190.987 385.492 190.987 386.934 cv
190.987 388.376 192.156 389.546 193.599 389.546 cv
cp
f
204.151 389.546 mo
205.594 389.546 206.763 388.376 206.763 386.934 cv
206.763 385.492 205.594 384.322 204.151 384.322 cv
202.709 384.322 201.54 385.492 201.54 386.934 cv
201.54 388.376 202.709 389.546 204.151 389.546 cv
cp
f
214.704 389.546 mo
216.146 389.546 217.315 388.376 217.315 386.934 cv
217.315 385.492 216.146 384.322 214.704 384.322 cv
213.261 384.322 212.092 385.492 212.092 386.934 cv
212.092 388.376 213.261 389.546 214.704 389.546 cv
cp
f
225.256 389.546 mo
226.699 389.546 227.868 388.376 227.868 386.934 cv
227.868 385.492 226.699 384.322 225.256 384.322 cv
223.814 384.322 222.645 385.492 222.645 386.934 cv
222.645 388.376 223.814 389.546 225.256 389.546 cv
cp
f
235.809 389.546 mo
237.251 389.546 238.421 388.376 238.421 386.934 cv
238.421 385.492 237.251 384.322 235.809 384.322 cv
234.367 384.322 233.197 385.492 233.197 386.934 cv
233.197 388.376 234.367 389.546 235.809 389.546 cv
cp
f
246.362 389.546 mo
247.804 389.546 248.974 388.376 248.974 386.934 cv
248.974 385.492 247.804 384.322 246.362 384.322 cv
244.919 384.322 243.75 385.492 243.75 386.934 cv
243.75 388.376 244.919 389.546 246.362 389.546 cv
cp
f
256.915 389.546 mo
258.357 389.546 259.526 388.376 259.526 386.934 cv
259.526 385.492 258.357 384.322 256.915 384.322 cv
255.472 384.322 254.303 385.492 254.303 386.934 cv
254.303 388.376 255.472 389.546 256.915 389.546 cv
cp
f
267.467 389.546 mo
268.91 389.546 270.079 388.376 270.079 386.934 cv
270.079 385.492 268.91 384.322 267.467 384.322 cv
266.025 384.322 264.855 385.492 264.855 386.934 cv
264.855 388.376 266.025 389.546 267.467 389.546 cv
cp
f
278.02 389.546 mo
279.462 389.546 280.631 388.376 280.631 386.934 cv
280.631 385.492 279.462 384.322 278.02 384.322 cv
276.578 384.322 275.408 385.492 275.408 386.934 cv
275.408 388.376 276.578 389.546 278.02 389.546 cv
cp
f
288.572 389.546 mo
290.015 389.546 291.184 388.376 291.184 386.934 cv
291.184 385.492 290.015 384.322 288.572 384.322 cv
287.13 384.322 285.961 385.492 285.961 386.934 cv
285.961 388.376 287.13 389.546 288.572 389.546 cv
cp
f
299.125 389.546 mo
300.567 389.546 301.737 388.376 301.737 386.934 cv
301.737 385.492 300.567 384.322 299.125 384.322 cv
297.683 384.322 296.514 385.492 296.514 386.934 cv
296.514 388.376 297.683 389.546 299.125 389.546 cv
cp
f
309.678 389.546 mo
311.12 389.546 312.29 388.376 312.29 386.934 cv
312.29 385.492 311.12 384.322 309.678 384.322 cv
308.235 384.322 307.066 385.492 307.066 386.934 cv
307.066 388.376 308.235 389.546 309.678 389.546 cv
cp
f
320.23 389.546 mo
321.673 389.546 322.842 388.376 322.842 386.934 cv
322.842 385.492 321.673 384.322 320.23 384.322 cv
318.788 384.322 317.619 385.492 317.619 386.934 cv
317.619 388.376 318.788 389.546 320.23 389.546 cv
cp
f
330.783 389.546 mo
332.226 389.546 333.395 388.376 333.395 386.934 cv
333.395 385.492 332.226 384.322 330.783 384.322 cv
329.341 384.322 328.171 385.492 328.171 386.934 cv
328.171 388.376 329.341 389.546 330.783 389.546 cv
cp
f
341.336 389.546 mo
342.778 389.546 343.947 388.376 343.947 386.934 cv
343.947 385.492 342.778 384.322 341.336 384.322 cv
339.894 384.322 338.724 385.492 338.724 386.934 cv
338.724 388.376 339.894 389.546 341.336 389.546 cv
cp
f
351.889 389.546 mo
353.331 389.546 354.5 388.376 354.5 386.934 cv
354.5 385.492 353.331 384.322 351.889 384.322 cv
350.446 384.322 349.277 385.492 349.277 386.934 cv
349.277 388.376 350.446 389.546 351.889 389.546 cv
cp
f
362.441 389.546 mo
363.883 389.546 365.053 388.376 365.053 386.934 cv
365.053 385.492 363.883 384.322 362.441 384.322 cv
360.999 384.322 359.83 385.492 359.83 386.934 cv
359.83 388.376 360.999 389.546 362.441 389.546 cv
cp
f
372.994 389.546 mo
374.436 389.546 375.605 388.376 375.605 386.934 cv
375.605 385.492 374.436 384.322 372.994 384.322 cv
371.551 384.322 370.382 385.492 370.382 386.934 cv
370.382 388.376 371.551 389.546 372.994 389.546 cv
cp
f
383.546 389.546 mo
384.989 389.546 386.158 388.376 386.158 386.934 cv
386.158 385.492 384.989 384.322 383.546 384.322 cv
382.104 384.322 380.935 385.492 380.935 386.934 cv
380.935 388.376 382.104 389.546 383.546 389.546 cv
cp
f
394.099 389.546 mo
395.542 389.546 396.711 388.376 396.711 386.934 cv
396.711 385.492 395.542 384.322 394.099 384.322 cv
392.657 384.322 391.488 385.492 391.488 386.934 cv
391.488 388.376 392.657 389.546 394.099 389.546 cv
cp
f
404.652 389.546 mo
406.093 389.546 407.263 388.376 407.263 386.934 cv
407.263 385.492 406.093 384.322 404.652 384.322 cv
403.208 384.322 402.042 385.492 402.042 386.934 cv
402.042 388.376 403.208 389.546 404.652 389.546 cv
cp
f
415.205 389.546 mo
416.646 389.546 417.816 388.376 417.816 386.934 cv
417.816 385.492 416.646 384.322 415.205 384.322 cv
413.762 384.322 412.593 385.492 412.593 386.934 cv
412.593 388.376 413.762 389.546 415.205 389.546 cv
cp
f
425.757 389.546 mo
427.2 389.546 428.369 388.376 428.369 386.934 cv
428.369 385.492 427.2 384.322 425.757 384.322 cv
424.314 384.322 423.146 385.492 423.146 386.934 cv
423.146 388.376 424.314 389.546 425.757 389.546 cv
cp
f
436.31 389.546 mo
437.751 389.546 438.921 388.376 438.921 386.934 cv
438.921 385.492 437.751 384.322 436.31 384.322 cv
434.867 384.322 433.697 385.492 433.697 386.934 cv
433.697 388.376 434.867 389.546 436.31 389.546 cv
cp
f
446.863 389.546 mo
448.304 389.546 449.474 388.376 449.474 386.934 cv
449.474 385.492 448.304 384.322 446.863 384.322 cv
445.42 384.322 444.25 385.492 444.25 386.934 cv
444.25 388.376 445.42 389.546 446.863 389.546 cv
cp
f
457.417 389.546 mo
458.858 389.546 460.027 388.376 460.027 386.934 cv
460.027 385.492 458.858 384.322 457.417 384.322 cv
455.972 384.322 454.803 385.492 454.803 386.934 cv
454.803 388.376 455.972 389.546 457.417 389.546 cv
cp
f
467.968 389.546 mo
469.41 389.546 470.58 388.376 470.58 386.934 cv
470.58 385.492 469.41 384.322 467.968 384.322 cv
466.525 384.322 465.355 385.492 465.355 386.934 cv
465.355 388.376 466.525 389.546 467.968 389.546 cv
cp
f
478.521 389.546 mo
479.962 389.546 481.132 388.376 481.132 386.934 cv
481.132 385.492 479.962 384.322 478.521 384.322 cv
477.079 384.322 475.908 385.492 475.908 386.934 cv
475.908 388.376 477.079 389.546 478.521 389.546 cv
cp
f
489.072 389.546 mo
490.516 389.546 491.685 388.376 491.685 386.934 cv
491.685 385.492 490.516 384.322 489.072 384.322 cv
487.631 384.322 486.461 385.492 486.461 386.934 cv
486.461 388.376 487.631 389.546 489.072 389.546 cv
cp
f
499.625 389.546 mo
501.068 389.546 502.238 388.376 502.238 386.934 cv
502.238 385.492 501.068 384.322 499.625 384.322 cv
498.183 384.322 497.013 385.492 497.013 386.934 cv
497.013 388.376 498.183 389.546 499.625 389.546 cv
cp
f
510.178 389.546 mo
511.621 389.546 512.792 388.376 512.792 386.934 cv
512.792 385.492 511.621 384.322 510.178 384.322 cv
508.737 384.322 507.566 385.492 507.566 386.934 cv
507.566 388.376 508.737 389.546 510.178 389.546 cv
cp
f
520.73 389.546 mo
522.174 389.546 523.343 388.376 523.343 386.934 cv
523.343 385.492 522.174 384.322 520.73 384.322 cv
519.289 384.322 518.119 385.492 518.119 386.934 cv
518.119 388.376 519.289 389.546 520.73 389.546 cv
cp
f
531.283 389.546 mo
532.726 389.546 533.896 388.376 533.896 386.934 cv
533.896 385.492 532.726 384.322 531.283 384.322 cv
529.841 384.322 528.671 385.492 528.671 386.934 cv
528.671 388.376 529.841 389.546 531.283 389.546 cv
cp
f
541.835 389.546 mo
543.279 389.546 544.447 388.376 544.447 386.934 cv
544.447 385.492 543.279 384.322 541.835 384.322 cv
540.395 384.322 539.224 385.492 539.224 386.934 cv
539.224 388.376 540.395 389.546 541.835 389.546 cv
cp
f
552.388 389.546 mo
553.833 389.546 555 388.376 555 386.934 cv
555 385.492 553.833 384.322 552.388 384.322 cv
550.947 384.322 549.777 385.492 549.777 386.934 cv
549.777 388.376 550.947 389.546 552.388 389.546 cv
cp
f
562.941 389.546 mo
564.384 389.546 565.553 388.376 565.553 386.934 cv
565.553 385.492 564.384 384.322 562.941 384.322 cv
561.5 384.322 560.33 385.492 560.33 386.934 cv
560.33 388.376 561.5 389.546 562.941 389.546 cv
cp
f
573.494 389.546 mo
574.937 389.546 576.105 388.376 576.105 386.934 cv
576.105 385.492 574.937 384.322 573.494 384.322 cv
572.053 384.322 570.882 385.492 570.882 386.934 cv
570.882 388.376 572.053 389.546 573.494 389.546 cv
cp
f
584.046 389.546 mo
585.491 389.546 586.658 388.376 586.658 386.934 cv
586.658 385.492 585.491 384.322 584.046 384.322 cv
582.605 384.322 581.435 385.492 581.435 386.934 cv
581.435 388.376 582.605 389.546 584.046 389.546 cv
cp
f
594.599 389.546 mo
596.042 389.546 597.21 388.376 597.21 386.934 cv
597.21 385.492 596.042 384.322 594.599 384.322 cv
593.158 384.322 591.988 385.492 591.988 386.934 cv
591.988 388.376 593.158 389.546 594.599 389.546 cv
cp
f
605.152 389.546 mo
606.595 389.546 607.763 388.376 607.763 386.934 cv
607.763 385.492 606.595 384.322 605.152 384.322 cv
603.71 384.322 602.542 385.492 602.542 386.934 cv
602.542 388.376 603.71 389.546 605.152 389.546 cv
cp
f
615.705 389.546 mo
617.148 389.546 618.316 388.376 618.316 386.934 cv
618.316 385.492 617.148 384.322 615.705 384.322 cv
614.263 384.322 613.093 385.492 613.093 386.934 cv
613.093 388.376 614.263 389.546 615.705 389.546 cv
cp
f
626.257 389.546 mo
627.701 389.546 628.869 388.376 628.869 386.934 cv
628.869 385.492 627.701 384.322 626.257 384.322 cv
624.816 384.322 623.646 385.492 623.646 386.934 cv
623.646 388.376 624.816 389.546 626.257 389.546 cv
cp
f
636.81 389.546 mo
638.251 389.546 639.421 388.376 639.421 386.934 cv
639.421 385.492 638.251 384.322 636.81 384.322 cv
635.369 384.322 634.2 385.492 634.2 386.934 cv
634.2 388.376 635.369 389.546 636.81 389.546 cv
cp
f
647.363 389.546 mo
648.804 389.546 649.974 388.376 649.974 386.934 cv
649.974 385.492 648.804 384.322 647.363 384.322 cv
645.919 384.322 644.751 385.492 644.751 386.934 cv
644.751 388.376 645.919 389.546 647.363 389.546 cv
cp
f
657.917 389.546 mo
659.357 389.546 660.527 388.376 660.527 386.934 cv
660.527 385.492 659.357 384.322 657.917 384.322 cv
656.472 384.322 655.304 385.492 655.304 386.934 cv
655.304 388.376 656.472 389.546 657.917 389.546 cv
cp
f
668.468 389.546 mo
669.91 389.546 671.08 388.376 671.08 386.934 cv
671.08 385.492 669.91 384.322 668.468 384.322 cv
667.025 384.322 665.857 385.492 665.857 386.934 cv
665.857 388.376 667.025 389.546 668.468 389.546 cv
cp
f
679.021 389.546 mo
680.462 389.546 681.632 388.376 681.632 386.934 cv
681.632 385.492 680.462 384.322 679.021 384.322 cv
677.578 384.322 676.41 385.492 676.41 386.934 cv
676.41 388.376 677.578 389.546 679.021 389.546 cv
cp
f
689.574 389.546 mo
691.015 389.546 692.185 388.376 692.185 386.934 cv
692.185 385.492 691.015 384.322 689.574 384.322 cv
688.131 384.322 686.962 385.492 686.962 386.934 cv
686.962 388.376 688.131 389.546 689.574 389.546 cv
cp
f
700.126 389.546 mo
701.568 389.546 702.738 388.376 702.738 386.934 cv
702.738 385.492 701.568 384.322 700.126 384.322 cv
698.683 384.322 697.515 385.492 697.515 386.934 cv
697.515 388.376 698.683 389.546 700.126 389.546 cv
cp
f
151.388 400.099 mo
152.83 400.099 154 398.929 154 397.487 cv
154 396.044 152.83 394.875 151.388 394.875 cv
149.945 394.875 148.776 396.044 148.776 397.487 cv
148.776 398.929 149.945 400.099 151.388 400.099 cv
cp
f
161.94 400.099 mo
163.383 400.099 164.552 398.929 164.552 397.487 cv
164.552 396.044 163.383 394.875 161.94 394.875 cv
160.498 394.875 159.329 396.044 159.329 397.487 cv
159.329 398.929 160.498 400.099 161.94 400.099 cv
cp
f
172.493 400.099 mo
173.936 400.099 175.105 398.929 175.105 397.487 cv
175.105 396.044 173.936 394.875 172.493 394.875 cv
171.051 394.875 169.881 396.044 169.881 397.487 cv
169.881 398.929 171.051 400.099 172.493 400.099 cv
cp
f
183.046 400.099 mo
184.488 400.099 185.657 398.929 185.657 397.487 cv
185.657 396.044 184.488 394.875 183.046 394.875 cv
181.604 394.875 180.434 396.044 180.434 397.487 cv
180.434 398.929 181.604 400.099 183.046 400.099 cv
cp
f
193.599 400.099 mo
195.041 400.099 196.21 398.929 196.21 397.487 cv
196.21 396.044 195.041 394.875 193.599 394.875 cv
192.156 394.875 190.987 396.044 190.987 397.487 cv
190.987 398.929 192.156 400.099 193.599 400.099 cv
cp
f
204.151 400.099 mo
205.594 400.099 206.763 398.929 206.763 397.487 cv
206.763 396.044 205.594 394.875 204.151 394.875 cv
202.709 394.875 201.54 396.044 201.54 397.487 cv
201.54 398.929 202.709 400.099 204.151 400.099 cv
cp
f
214.704 400.099 mo
216.146 400.099 217.315 398.929 217.315 397.487 cv
217.315 396.044 216.146 394.875 214.704 394.875 cv
213.261 394.875 212.092 396.044 212.092 397.487 cv
212.092 398.929 213.261 400.099 214.704 400.099 cv
cp
f
225.256 400.099 mo
226.699 400.099 227.868 398.929 227.868 397.487 cv
227.868 396.044 226.699 394.875 225.256 394.875 cv
223.814 394.875 222.645 396.044 222.645 397.487 cv
222.645 398.929 223.814 400.099 225.256 400.099 cv
cp
f
235.809 400.099 mo
237.251 400.099 238.421 398.929 238.421 397.487 cv
238.421 396.044 237.251 394.875 235.809 394.875 cv
234.367 394.875 233.197 396.044 233.197 397.487 cv
233.197 398.929 234.367 400.099 235.809 400.099 cv
cp
f
246.362 400.099 mo
247.804 400.099 248.974 398.929 248.974 397.487 cv
248.974 396.044 247.804 394.875 246.362 394.875 cv
244.919 394.875 243.75 396.044 243.75 397.487 cv
243.75 398.929 244.919 400.099 246.362 400.099 cv
cp
f
256.915 400.099 mo
258.357 400.099 259.526 398.929 259.526 397.487 cv
259.526 396.044 258.357 394.875 256.915 394.875 cv
255.472 394.875 254.303 396.044 254.303 397.487 cv
254.303 398.929 255.472 400.099 256.915 400.099 cv
cp
f
267.467 400.099 mo
268.91 400.099 270.079 398.929 270.079 397.487 cv
270.079 396.044 268.91 394.875 267.467 394.875 cv
266.025 394.875 264.855 396.044 264.855 397.487 cv
264.855 398.929 266.025 400.099 267.467 400.099 cv
cp
f
278.02 400.099 mo
279.462 400.099 280.631 398.929 280.631 397.487 cv
280.631 396.044 279.462 394.875 278.02 394.875 cv
276.578 394.875 275.408 396.044 275.408 397.487 cv
275.408 398.929 276.578 400.099 278.02 400.099 cv
cp
f
288.572 400.099 mo
290.015 400.099 291.184 398.929 291.184 397.487 cv
291.184 396.044 290.015 394.875 288.572 394.875 cv
287.13 394.875 285.961 396.044 285.961 397.487 cv
285.961 398.929 287.13 400.099 288.572 400.099 cv
cp
f
299.125 400.099 mo
300.567 400.099 301.737 398.929 301.737 397.487 cv
301.737 396.044 300.567 394.875 299.125 394.875 cv
297.683 394.875 296.514 396.044 296.514 397.487 cv
296.514 398.929 297.683 400.099 299.125 400.099 cv
cp
f
309.678 400.099 mo
311.12 400.099 312.29 398.929 312.29 397.487 cv
312.29 396.044 311.12 394.875 309.678 394.875 cv
308.235 394.875 307.066 396.044 307.066 397.487 cv
307.066 398.929 308.235 400.099 309.678 400.099 cv
cp
f
320.23 400.099 mo
321.673 400.099 322.842 398.929 322.842 397.487 cv
322.842 396.044 321.673 394.875 320.23 394.875 cv
318.788 394.875 317.619 396.044 317.619 397.487 cv
317.619 398.929 318.788 400.099 320.23 400.099 cv
cp
f
330.783 400.099 mo
332.226 400.099 333.395 398.929 333.395 397.487 cv
333.395 396.044 332.226 394.875 330.783 394.875 cv
329.341 394.875 328.171 396.044 328.171 397.487 cv
328.171 398.929 329.341 400.099 330.783 400.099 cv
cp
f
341.336 400.099 mo
342.778 400.099 343.947 398.929 343.947 397.487 cv
343.947 396.044 342.778 394.875 341.336 394.875 cv
339.894 394.875 338.724 396.044 338.724 397.487 cv
338.724 398.929 339.894 400.099 341.336 400.099 cv
cp
f
351.889 400.099 mo
353.331 400.099 354.5 398.929 354.5 397.487 cv
354.5 396.044 353.331 394.875 351.889 394.875 cv
350.446 394.875 349.277 396.044 349.277 397.487 cv
349.277 398.929 350.446 400.099 351.889 400.099 cv
cp
f
362.441 400.099 mo
363.883 400.099 365.053 398.929 365.053 397.487 cv
365.053 396.044 363.883 394.875 362.441 394.875 cv
360.999 394.875 359.83 396.044 359.83 397.487 cv
359.83 398.929 360.999 400.099 362.441 400.099 cv
cp
f
372.994 400.099 mo
374.436 400.099 375.605 398.929 375.605 397.487 cv
375.605 396.044 374.436 394.875 372.994 394.875 cv
371.551 394.875 370.382 396.044 370.382 397.487 cv
370.382 398.929 371.551 400.099 372.994 400.099 cv
cp
f
383.546 400.099 mo
384.989 400.099 386.158 398.929 386.158 397.487 cv
386.158 396.044 384.989 394.875 383.546 394.875 cv
382.104 394.875 380.935 396.044 380.935 397.487 cv
380.935 398.929 382.104 400.099 383.546 400.099 cv
cp
f
394.099 400.099 mo
395.542 400.099 396.711 398.929 396.711 397.487 cv
396.711 396.044 395.542 394.875 394.099 394.875 cv
392.657 394.875 391.488 396.044 391.488 397.487 cv
391.488 398.929 392.657 400.099 394.099 400.099 cv
cp
f
404.652 400.099 mo
406.093 400.099 407.263 398.929 407.263 397.487 cv
407.263 396.044 406.093 394.875 404.652 394.875 cv
403.208 394.875 402.042 396.044 402.042 397.487 cv
402.042 398.929 403.208 400.099 404.652 400.099 cv
cp
f
415.205 400.099 mo
416.646 400.099 417.816 398.929 417.816 397.487 cv
417.816 396.044 416.646 394.875 415.205 394.875 cv
413.762 394.875 412.593 396.044 412.593 397.487 cv
412.593 398.929 413.762 400.099 415.205 400.099 cv
cp
f
425.757 400.099 mo
427.2 400.099 428.369 398.929 428.369 397.487 cv
428.369 396.044 427.2 394.875 425.757 394.875 cv
424.314 394.875 423.146 396.044 423.146 397.487 cv
423.146 398.929 424.314 400.099 425.757 400.099 cv
cp
f
436.31 400.099 mo
437.751 400.099 438.921 398.929 438.921 397.487 cv
438.921 396.044 437.751 394.875 436.31 394.875 cv
434.867 394.875 433.697 396.044 433.697 397.487 cv
433.697 398.929 434.867 400.099 436.31 400.099 cv
cp
f
446.863 400.099 mo
448.304 400.099 449.474 398.929 449.474 397.487 cv
449.474 396.044 448.304 394.875 446.863 394.875 cv
445.42 394.875 444.25 396.044 444.25 397.487 cv
444.25 398.929 445.42 400.099 446.863 400.099 cv
cp
f
457.417 400.099 mo
458.858 400.099 460.027 398.929 460.027 397.487 cv
460.027 396.044 458.858 394.875 457.417 394.875 cv
455.972 394.875 454.803 396.044 454.803 397.487 cv
454.803 398.929 455.972 400.099 457.417 400.099 cv
cp
f
467.968 400.099 mo
469.41 400.099 470.58 398.929 470.58 397.487 cv
470.58 396.044 469.41 394.875 467.968 394.875 cv
466.525 394.875 465.355 396.044 465.355 397.487 cv
465.355 398.929 466.525 400.099 467.968 400.099 cv
cp
f
478.521 400.099 mo
479.962 400.099 481.132 398.929 481.132 397.487 cv
481.132 396.044 479.962 394.875 478.521 394.875 cv
477.079 394.875 475.908 396.044 475.908 397.487 cv
475.908 398.929 477.079 400.099 478.521 400.099 cv
cp
f
489.072 400.099 mo
490.516 400.099 491.685 398.929 491.685 397.487 cv
491.685 396.044 490.516 394.875 489.072 394.875 cv
487.631 394.875 486.461 396.044 486.461 397.487 cv
486.461 398.929 487.631 400.099 489.072 400.099 cv
cp
f
499.625 400.099 mo
501.068 400.099 502.238 398.929 502.238 397.487 cv
502.238 396.044 501.068 394.875 499.625 394.875 cv
498.183 394.875 497.013 396.044 497.013 397.487 cv
497.013 398.929 498.183 400.099 499.625 400.099 cv
cp
f
510.178 400.099 mo
511.621 400.099 512.792 398.929 512.792 397.487 cv
512.792 396.044 511.621 394.875 510.178 394.875 cv
508.737 394.875 507.566 396.044 507.566 397.487 cv
507.566 398.929 508.737 400.099 510.178 400.099 cv
cp
f
520.73 400.099 mo
522.174 400.099 523.343 398.929 523.343 397.487 cv
523.343 396.044 522.174 394.875 520.73 394.875 cv
519.289 394.875 518.119 396.044 518.119 397.487 cv
518.119 398.929 519.289 400.099 520.73 400.099 cv
cp
f
531.283 400.099 mo
532.726 400.099 533.896 398.929 533.896 397.487 cv
533.896 396.044 532.726 394.875 531.283 394.875 cv
529.841 394.875 528.671 396.044 528.671 397.487 cv
528.671 398.929 529.841 400.099 531.283 400.099 cv
cp
f
541.835 400.099 mo
543.279 400.099 544.447 398.929 544.447 397.487 cv
544.447 396.044 543.279 394.875 541.835 394.875 cv
540.395 394.875 539.224 396.044 539.224 397.487 cv
539.224 398.929 540.395 400.099 541.835 400.099 cv
cp
f
552.388 400.099 mo
553.833 400.099 555 398.929 555 397.487 cv
555 396.044 553.833 394.875 552.388 394.875 cv
550.947 394.875 549.777 396.044 549.777 397.487 cv
549.777 398.929 550.947 400.099 552.388 400.099 cv
cp
f
562.941 400.099 mo
564.384 400.099 565.553 398.929 565.553 397.487 cv
565.553 396.044 564.384 394.875 562.941 394.875 cv
561.5 394.875 560.33 396.044 560.33 397.487 cv
560.33 398.929 561.5 400.099 562.941 400.099 cv
cp
f
573.494 400.099 mo
574.937 400.099 576.105 398.929 576.105 397.487 cv
576.105 396.044 574.937 394.875 573.494 394.875 cv
572.053 394.875 570.882 396.044 570.882 397.487 cv
570.882 398.929 572.053 400.099 573.494 400.099 cv
cp
f
584.046 400.099 mo
585.491 400.099 586.658 398.929 586.658 397.487 cv
586.658 396.044 585.491 394.875 584.046 394.875 cv
582.605 394.875 581.435 396.044 581.435 397.487 cv
581.435 398.929 582.605 400.099 584.046 400.099 cv
cp
f
594.599 400.099 mo
596.042 400.099 597.21 398.929 597.21 397.487 cv
597.21 396.044 596.042 394.875 594.599 394.875 cv
593.158 394.875 591.988 396.044 591.988 397.487 cv
591.988 398.929 593.158 400.099 594.599 400.099 cv
cp
f
605.152 400.099 mo
606.595 400.099 607.763 398.929 607.763 397.487 cv
607.763 396.044 606.595 394.875 605.152 394.875 cv
603.71 394.875 602.542 396.044 602.542 397.487 cv
602.542 398.929 603.71 400.099 605.152 400.099 cv
cp
f
615.705 400.099 mo
617.148 400.099 618.316 398.929 618.316 397.487 cv
618.316 396.044 617.148 394.875 615.705 394.875 cv
614.263 394.875 613.093 396.044 613.093 397.487 cv
613.093 398.929 614.263 400.099 615.705 400.099 cv
cp
f
626.257 400.099 mo
627.701 400.099 628.869 398.929 628.869 397.487 cv
628.869 396.044 627.701 394.875 626.257 394.875 cv
624.816 394.875 623.646 396.044 623.646 397.487 cv
623.646 398.929 624.816 400.099 626.257 400.099 cv
cp
f
636.81 400.099 mo
638.251 400.099 639.421 398.929 639.421 397.487 cv
639.421 396.044 638.251 394.875 636.81 394.875 cv
635.369 394.875 634.2 396.044 634.2 397.487 cv
634.2 398.929 635.369 400.099 636.81 400.099 cv
cp
f
647.363 400.099 mo
648.804 400.099 649.974 398.929 649.974 397.487 cv
649.974 396.044 648.804 394.875 647.363 394.875 cv
645.919 394.875 644.751 396.044 644.751 397.487 cv
644.751 398.929 645.919 400.099 647.363 400.099 cv
cp
f
657.917 400.099 mo
659.357 400.099 660.527 398.929 660.527 397.487 cv
660.527 396.044 659.357 394.875 657.917 394.875 cv
656.472 394.875 655.304 396.044 655.304 397.487 cv
655.304 398.929 656.472 400.099 657.917 400.099 cv
cp
f
668.468 400.099 mo
669.91 400.099 671.08 398.929 671.08 397.487 cv
671.08 396.044 669.91 394.875 668.468 394.875 cv
667.025 394.875 665.857 396.044 665.857 397.487 cv
665.857 398.929 667.025 400.099 668.468 400.099 cv
cp
f
679.021 400.099 mo
680.462 400.099 681.632 398.929 681.632 397.487 cv
681.632 396.044 680.462 394.875 679.021 394.875 cv
677.578 394.875 676.41 396.044 676.41 397.487 cv
676.41 398.929 677.578 400.099 679.021 400.099 cv
cp
f
689.574 400.099 mo
691.015 400.099 692.185 398.929 692.185 397.487 cv
692.185 396.044 691.015 394.875 689.574 394.875 cv
688.131 394.875 686.962 396.044 686.962 397.487 cv
686.962 398.929 688.131 400.099 689.574 400.099 cv
cp
f
700.126 400.099 mo
701.568 400.099 702.738 398.929 702.738 397.487 cv
702.738 396.044 701.568 394.875 700.126 394.875 cv
698.683 394.875 697.515 396.044 697.515 397.487 cv
697.515 398.929 698.683 400.099 700.126 400.099 cv
cp
f
140.835 410.651 mo
142.277 410.651 143.447 409.481 143.447 408.039 cv
143.447 406.597 142.277 405.428 140.835 405.428 cv
139.393 405.428 138.224 406.597 138.224 408.039 cv
138.224 409.481 139.393 410.651 140.835 410.651 cv
cp
f
151.388 410.651 mo
152.83 410.651 154 409.481 154 408.039 cv
154 406.597 152.83 405.428 151.388 405.428 cv
149.945 405.428 148.776 406.597 148.776 408.039 cv
148.776 409.481 149.945 410.651 151.388 410.651 cv
cp
f
161.94 410.651 mo
163.383 410.651 164.552 409.481 164.552 408.039 cv
164.552 406.597 163.383 405.428 161.94 405.428 cv
160.498 405.428 159.329 406.597 159.329 408.039 cv
159.329 409.481 160.498 410.651 161.94 410.651 cv
cp
f
172.493 410.651 mo
173.936 410.651 175.105 409.481 175.105 408.039 cv
175.105 406.597 173.936 405.428 172.493 405.428 cv
171.051 405.428 169.881 406.597 169.881 408.039 cv
169.881 409.481 171.051 410.651 172.493 410.651 cv
cp
f
183.046 410.651 mo
184.488 410.651 185.657 409.481 185.657 408.039 cv
185.657 406.597 184.488 405.428 183.046 405.428 cv
181.604 405.428 180.434 406.597 180.434 408.039 cv
180.434 409.481 181.604 410.651 183.046 410.651 cv
cp
f
193.599 410.651 mo
195.041 410.651 196.21 409.481 196.21 408.039 cv
196.21 406.597 195.041 405.428 193.599 405.428 cv
192.156 405.428 190.987 406.597 190.987 408.039 cv
190.987 409.481 192.156 410.651 193.599 410.651 cv
cp
f
204.151 410.651 mo
205.594 410.651 206.763 409.481 206.763 408.039 cv
206.763 406.597 205.594 405.428 204.151 405.428 cv
202.709 405.428 201.54 406.597 201.54 408.039 cv
201.54 409.481 202.709 410.651 204.151 410.651 cv
cp
f
214.704 410.651 mo
216.146 410.651 217.315 409.481 217.315 408.039 cv
217.315 406.597 216.146 405.428 214.704 405.428 cv
213.261 405.428 212.092 406.597 212.092 408.039 cv
212.092 409.481 213.261 410.651 214.704 410.651 cv
cp
f
225.256 410.651 mo
226.699 410.651 227.868 409.481 227.868 408.039 cv
227.868 406.597 226.699 405.428 225.256 405.428 cv
223.814 405.428 222.645 406.597 222.645 408.039 cv
222.645 409.481 223.814 410.651 225.256 410.651 cv
cp
f
235.809 410.651 mo
237.251 410.651 238.421 409.481 238.421 408.039 cv
238.421 406.597 237.251 405.428 235.809 405.428 cv
234.367 405.428 233.197 406.597 233.197 408.039 cv
233.197 409.481 234.367 410.651 235.809 410.651 cv
cp
f
246.362 410.651 mo
247.804 410.651 248.974 409.481 248.974 408.039 cv
248.974 406.597 247.804 405.428 246.362 405.428 cv
244.919 405.428 243.75 406.597 243.75 408.039 cv
243.75 409.481 244.919 410.651 246.362 410.651 cv
cp
f
256.915 410.651 mo
258.357 410.651 259.526 409.481 259.526 408.039 cv
259.526 406.597 258.357 405.428 256.915 405.428 cv
255.472 405.428 254.303 406.597 254.303 408.039 cv
254.303 409.481 255.472 410.651 256.915 410.651 cv
cp
f
267.467 410.651 mo
268.91 410.651 270.079 409.481 270.079 408.039 cv
270.079 406.597 268.91 405.428 267.467 405.428 cv
266.025 405.428 264.855 406.597 264.855 408.039 cv
264.855 409.481 266.025 410.651 267.467 410.651 cv
cp
f
278.02 410.651 mo
279.462 410.651 280.631 409.481 280.631 408.039 cv
280.631 406.597 279.462 405.428 278.02 405.428 cv
276.578 405.428 275.408 406.597 275.408 408.039 cv
275.408 409.481 276.578 410.651 278.02 410.651 cv
cp
f
288.572 410.651 mo
290.015 410.651 291.184 409.481 291.184 408.039 cv
291.184 406.597 290.015 405.428 288.572 405.428 cv
287.13 405.428 285.961 406.597 285.961 408.039 cv
285.961 409.481 287.13 410.651 288.572 410.651 cv
cp
f
299.125 410.651 mo
300.567 410.651 301.737 409.481 301.737 408.039 cv
301.737 406.597 300.567 405.428 299.125 405.428 cv
297.683 405.428 296.514 406.597 296.514 408.039 cv
296.514 409.481 297.683 410.651 299.125 410.651 cv
cp
f
309.678 410.651 mo
311.12 410.651 312.29 409.481 312.29 408.039 cv
312.29 406.597 311.12 405.428 309.678 405.428 cv
308.235 405.428 307.066 406.597 307.066 408.039 cv
307.066 409.481 308.235 410.651 309.678 410.651 cv
cp
f
320.23 410.651 mo
321.673 410.651 322.842 409.481 322.842 408.039 cv
322.842 406.597 321.673 405.428 320.23 405.428 cv
318.788 405.428 317.619 406.597 317.619 408.039 cv
317.619 409.481 318.788 410.651 320.23 410.651 cv
cp
f
330.783 410.651 mo
332.226 410.651 333.395 409.481 333.395 408.039 cv
333.395 406.597 332.226 405.428 330.783 405.428 cv
329.341 405.428 328.171 406.597 328.171 408.039 cv
328.171 409.481 329.341 410.651 330.783 410.651 cv
cp
f
341.336 410.651 mo
342.778 410.651 343.947 409.481 343.947 408.039 cv
343.947 406.597 342.778 405.428 341.336 405.428 cv
339.894 405.428 338.724 406.597 338.724 408.039 cv
338.724 409.481 339.894 410.651 341.336 410.651 cv
cp
f
351.889 410.651 mo
353.331 410.651 354.5 409.481 354.5 408.039 cv
354.5 406.597 353.331 405.428 351.889 405.428 cv
350.446 405.428 349.277 406.597 349.277 408.039 cv
349.277 409.481 350.446 410.651 351.889 410.651 cv
cp
f
362.441 410.651 mo
363.883 410.651 365.053 409.481 365.053 408.039 cv
365.053 406.597 363.883 405.428 362.441 405.428 cv
360.999 405.428 359.83 406.597 359.83 408.039 cv
359.83 409.481 360.999 410.651 362.441 410.651 cv
cp
f
372.994 410.651 mo
374.436 410.651 375.605 409.481 375.605 408.039 cv
375.605 406.597 374.436 405.428 372.994 405.428 cv
371.551 405.428 370.382 406.597 370.382 408.039 cv
370.382 409.481 371.551 410.651 372.994 410.651 cv
cp
f
383.546 410.651 mo
384.989 410.651 386.158 409.481 386.158 408.039 cv
386.158 406.597 384.989 405.428 383.546 405.428 cv
382.104 405.428 380.935 406.597 380.935 408.039 cv
380.935 409.481 382.104 410.651 383.546 410.651 cv
cp
f
394.099 410.651 mo
395.542 410.651 396.711 409.481 396.711 408.039 cv
396.711 406.597 395.542 405.428 394.099 405.428 cv
392.657 405.428 391.488 406.597 391.488 408.039 cv
391.488 409.481 392.657 410.651 394.099 410.651 cv
cp
f
404.652 410.651 mo
406.093 410.651 407.263 409.481 407.263 408.039 cv
407.263 406.597 406.093 405.428 404.652 405.428 cv
403.208 405.428 402.042 406.597 402.042 408.039 cv
402.042 409.481 403.208 410.651 404.652 410.651 cv
cp
f
415.205 410.651 mo
416.646 410.651 417.816 409.481 417.816 408.039 cv
417.816 406.597 416.646 405.428 415.205 405.428 cv
413.762 405.428 412.593 406.597 412.593 408.039 cv
412.593 409.481 413.762 410.651 415.205 410.651 cv
cp
f
425.757 410.651 mo
427.2 410.651 428.369 409.481 428.369 408.039 cv
428.369 406.597 427.2 405.428 425.757 405.428 cv
424.314 405.428 423.146 406.597 423.146 408.039 cv
423.146 409.481 424.314 410.651 425.757 410.651 cv
cp
f
436.31 410.651 mo
437.751 410.651 438.921 409.481 438.921 408.039 cv
438.921 406.597 437.751 405.428 436.31 405.428 cv
434.867 405.428 433.697 406.597 433.697 408.039 cv
433.697 409.481 434.867 410.651 436.31 410.651 cv
cp
f
446.863 410.651 mo
448.304 410.651 449.474 409.481 449.474 408.039 cv
449.474 406.597 448.304 405.428 446.863 405.428 cv
445.42 405.428 444.25 406.597 444.25 408.039 cv
444.25 409.481 445.42 410.651 446.863 410.651 cv
cp
f
457.417 410.651 mo
458.858 410.651 460.027 409.481 460.027 408.039 cv
460.027 406.597 458.858 405.428 457.417 405.428 cv
455.972 405.428 454.803 406.597 454.803 408.039 cv
454.803 409.481 455.972 410.651 457.417 410.651 cv
cp
f
467.968 410.651 mo
469.41 410.651 470.58 409.481 470.58 408.039 cv
470.58 406.597 469.41 405.428 467.968 405.428 cv
466.525 405.428 465.355 406.597 465.355 408.039 cv
465.355 409.481 466.525 410.651 467.968 410.651 cv
cp
f
478.521 410.651 mo
479.962 410.651 481.132 409.481 481.132 408.039 cv
481.132 406.597 479.962 405.428 478.521 405.428 cv
477.079 405.428 475.908 406.597 475.908 408.039 cv
475.908 409.481 477.079 410.651 478.521 410.651 cv
cp
f
489.072 410.651 mo
490.516 410.651 491.685 409.481 491.685 408.039 cv
491.685 406.597 490.516 405.428 489.072 405.428 cv
487.631 405.428 486.461 406.597 486.461 408.039 cv
486.461 409.481 487.631 410.651 489.072 410.651 cv
cp
f
499.625 410.651 mo
501.068 410.651 502.238 409.481 502.238 408.039 cv
502.238 406.597 501.068 405.428 499.625 405.428 cv
498.183 405.428 497.013 406.597 497.013 408.039 cv
497.013 409.481 498.183 410.651 499.625 410.651 cv
cp
f
510.178 410.651 mo
511.621 410.651 512.792 409.481 512.792 408.039 cv
512.792 406.597 511.621 405.428 510.178 405.428 cv
508.737 405.428 507.566 406.597 507.566 408.039 cv
507.566 409.481 508.737 410.651 510.178 410.651 cv
cp
f
520.73 410.651 mo
522.174 410.651 523.343 409.481 523.343 408.039 cv
523.343 406.597 522.174 405.428 520.73 405.428 cv
519.289 405.428 518.119 406.597 518.119 408.039 cv
518.119 409.481 519.289 410.651 520.73 410.651 cv
cp
f
531.283 410.651 mo
532.726 410.651 533.896 409.481 533.896 408.039 cv
533.896 406.597 532.726 405.428 531.283 405.428 cv
529.841 405.428 528.671 406.597 528.671 408.039 cv
528.671 409.481 529.841 410.651 531.283 410.651 cv
cp
f
541.835 410.651 mo
543.279 410.651 544.447 409.481 544.447 408.039 cv
544.447 406.597 543.279 405.428 541.835 405.428 cv
540.395 405.428 539.224 406.597 539.224 408.039 cv
539.224 409.481 540.395 410.651 541.835 410.651 cv
cp
f
552.388 410.651 mo
553.833 410.651 555 409.481 555 408.039 cv
555 406.597 553.833 405.428 552.388 405.428 cv
550.947 405.428 549.777 406.597 549.777 408.039 cv
549.777 409.481 550.947 410.651 552.388 410.651 cv
cp
f
562.941 410.651 mo
564.384 410.651 565.553 409.481 565.553 408.039 cv
565.553 406.597 564.384 405.428 562.941 405.428 cv
561.5 405.428 560.33 406.597 560.33 408.039 cv
560.33 409.481 561.5 410.651 562.941 410.651 cv
cp
f
573.494 410.651 mo
574.937 410.651 576.105 409.481 576.105 408.039 cv
576.105 406.597 574.937 405.428 573.494 405.428 cv
572.053 405.428 570.882 406.597 570.882 408.039 cv
570.882 409.481 572.053 410.651 573.494 410.651 cv
cp
f
584.046 410.651 mo
585.491 410.651 586.658 409.481 586.658 408.039 cv
586.658 406.597 585.491 405.428 584.046 405.428 cv
582.605 405.428 581.435 406.597 581.435 408.039 cv
581.435 409.481 582.605 410.651 584.046 410.651 cv
cp
f
594.599 410.651 mo
596.042 410.651 597.21 409.481 597.21 408.039 cv
597.21 406.597 596.042 405.428 594.599 405.428 cv
593.158 405.428 591.988 406.597 591.988 408.039 cv
591.988 409.481 593.158 410.651 594.599 410.651 cv
cp
f
605.152 410.651 mo
606.595 410.651 607.763 409.481 607.763 408.039 cv
607.763 406.597 606.595 405.428 605.152 405.428 cv
603.71 405.428 602.542 406.597 602.542 408.039 cv
602.542 409.481 603.71 410.651 605.152 410.651 cv
cp
f
615.705 410.651 mo
617.148 410.651 618.316 409.481 618.316 408.039 cv
618.316 406.597 617.148 405.428 615.705 405.428 cv
614.263 405.428 613.093 406.597 613.093 408.039 cv
613.093 409.481 614.263 410.651 615.705 410.651 cv
cp
f
626.257 410.651 mo
627.701 410.651 628.869 409.481 628.869 408.039 cv
628.869 406.597 627.701 405.428 626.257 405.428 cv
624.816 405.428 623.646 406.597 623.646 408.039 cv
623.646 409.481 624.816 410.651 626.257 410.651 cv
cp
f
636.81 410.651 mo
638.251 410.651 639.421 409.481 639.421 408.039 cv
639.421 406.597 638.251 405.428 636.81 405.428 cv
635.369 405.428 634.2 406.597 634.2 408.039 cv
634.2 409.481 635.369 410.651 636.81 410.651 cv
cp
f
647.363 410.651 mo
648.804 410.651 649.974 409.481 649.974 408.039 cv
649.974 406.597 648.804 405.428 647.363 405.428 cv
645.919 405.428 644.751 406.597 644.751 408.039 cv
644.751 409.481 645.919 410.651 647.363 410.651 cv
cp
f
657.917 410.651 mo
659.357 410.651 660.527 409.481 660.527 408.039 cv
660.527 406.597 659.357 405.428 657.917 405.428 cv
656.472 405.428 655.304 406.597 655.304 408.039 cv
655.304 409.481 656.472 410.651 657.917 410.651 cv
cp
f
668.468 410.651 mo
669.91 410.651 671.08 409.481 671.08 408.039 cv
671.08 406.597 669.91 405.428 668.468 405.428 cv
667.025 405.428 665.857 406.597 665.857 408.039 cv
665.857 409.481 667.025 410.651 668.468 410.651 cv
cp
f
679.021 410.651 mo
680.462 410.651 681.632 409.481 681.632 408.039 cv
681.632 406.597 680.462 405.428 679.021 405.428 cv
677.578 405.428 676.41 406.597 676.41 408.039 cv
676.41 409.481 677.578 410.651 679.021 410.651 cv
cp
f
689.574 410.651 mo
691.015 410.651 692.185 409.481 692.185 408.039 cv
692.185 406.597 691.015 405.428 689.574 405.428 cv
688.131 405.428 686.962 406.597 686.962 408.039 cv
686.962 409.481 688.131 410.651 689.574 410.651 cv
cp
f
140.835 421.204 mo
142.277 421.204 143.447 420.034 143.447 418.592 cv
143.447 417.149 142.277 415.98 140.835 415.98 cv
139.393 415.98 138.224 417.149 138.224 418.592 cv
138.224 420.034 139.393 421.204 140.835 421.204 cv
cp
f
151.388 421.204 mo
152.83 421.204 154 420.034 154 418.592 cv
154 417.149 152.83 415.98 151.388 415.98 cv
149.945 415.98 148.776 417.149 148.776 418.592 cv
148.776 420.034 149.945 421.204 151.388 421.204 cv
cp
f
161.94 421.204 mo
163.383 421.204 164.552 420.034 164.552 418.592 cv
164.552 417.149 163.383 415.98 161.94 415.98 cv
160.498 415.98 159.329 417.149 159.329 418.592 cv
159.329 420.034 160.498 421.204 161.94 421.204 cv
cp
f
172.493 421.204 mo
173.936 421.204 175.105 420.034 175.105 418.592 cv
175.105 417.149 173.936 415.98 172.493 415.98 cv
171.051 415.98 169.881 417.149 169.881 418.592 cv
169.881 420.034 171.051 421.204 172.493 421.204 cv
cp
f
183.046 421.204 mo
184.488 421.204 185.657 420.034 185.657 418.592 cv
185.657 417.149 184.488 415.98 183.046 415.98 cv
181.604 415.98 180.434 417.149 180.434 418.592 cv
180.434 420.034 181.604 421.204 183.046 421.204 cv
cp
f
193.599 421.204 mo
195.041 421.204 196.21 420.034 196.21 418.592 cv
196.21 417.149 195.041 415.98 193.599 415.98 cv
192.156 415.98 190.987 417.149 190.987 418.592 cv
190.987 420.034 192.156 421.204 193.599 421.204 cv
cp
f
204.151 421.204 mo
205.594 421.204 206.763 420.034 206.763 418.592 cv
206.763 417.149 205.594 415.98 204.151 415.98 cv
202.709 415.98 201.54 417.149 201.54 418.592 cv
201.54 420.034 202.709 421.204 204.151 421.204 cv
cp
f
214.704 421.204 mo
216.146 421.204 217.315 420.034 217.315 418.592 cv
217.315 417.149 216.146 415.98 214.704 415.98 cv
213.261 415.98 212.092 417.149 212.092 418.592 cv
212.092 420.034 213.261 421.204 214.704 421.204 cv
cp
f
225.256 421.204 mo
226.699 421.204 227.868 420.034 227.868 418.592 cv
227.868 417.149 226.699 415.98 225.256 415.98 cv
223.814 415.98 222.645 417.149 222.645 418.592 cv
222.645 420.034 223.814 421.204 225.256 421.204 cv
cp
f
235.809 421.204 mo
237.251 421.204 238.421 420.034 238.421 418.592 cv
238.421 417.149 237.251 415.98 235.809 415.98 cv
234.367 415.98 233.197 417.149 233.197 418.592 cv
233.197 420.034 234.367 421.204 235.809 421.204 cv
cp
f
246.362 421.204 mo
247.804 421.204 248.974 420.034 248.974 418.592 cv
248.974 417.149 247.804 415.98 246.362 415.98 cv
244.919 415.98 243.75 417.149 243.75 418.592 cv
243.75 420.034 244.919 421.204 246.362 421.204 cv
cp
f
256.915 421.204 mo
258.357 421.204 259.526 420.034 259.526 418.592 cv
259.526 417.149 258.357 415.98 256.915 415.98 cv
255.472 415.98 254.303 417.149 254.303 418.592 cv
254.303 420.034 255.472 421.204 256.915 421.204 cv
cp
f
267.467 421.204 mo
268.91 421.204 270.079 420.034 270.079 418.592 cv
270.079 417.149 268.91 415.98 267.467 415.98 cv
266.025 415.98 264.855 417.149 264.855 418.592 cv
264.855 420.034 266.025 421.204 267.467 421.204 cv
cp
f
278.02 421.204 mo
279.462 421.204 280.631 420.034 280.631 418.592 cv
280.631 417.149 279.462 415.98 278.02 415.98 cv
276.578 415.98 275.408 417.149 275.408 418.592 cv
275.408 420.034 276.578 421.204 278.02 421.204 cv
cp
f
288.572 421.204 mo
290.015 421.204 291.184 420.034 291.184 418.592 cv
291.184 417.149 290.015 415.98 288.572 415.98 cv
287.13 415.98 285.961 417.149 285.961 418.592 cv
285.961 420.034 287.13 421.204 288.572 421.204 cv
cp
f
299.125 421.204 mo
300.567 421.204 301.737 420.034 301.737 418.592 cv
301.737 417.149 300.567 415.98 299.125 415.98 cv
297.683 415.98 296.514 417.149 296.514 418.592 cv
296.514 420.034 297.683 421.204 299.125 421.204 cv
cp
f
309.678 421.204 mo
311.12 421.204 312.29 420.034 312.29 418.592 cv
312.29 417.149 311.12 415.98 309.678 415.98 cv
308.235 415.98 307.066 417.149 307.066 418.592 cv
307.066 420.034 308.235 421.204 309.678 421.204 cv
cp
f
320.23 421.204 mo
321.673 421.204 322.842 420.034 322.842 418.592 cv
322.842 417.149 321.673 415.98 320.23 415.98 cv
318.788 415.98 317.619 417.149 317.619 418.592 cv
317.619 420.034 318.788 421.204 320.23 421.204 cv
cp
f
330.783 421.204 mo
332.226 421.204 333.395 420.034 333.395 418.592 cv
333.395 417.149 332.226 415.98 330.783 415.98 cv
329.341 415.98 328.171 417.149 328.171 418.592 cv
328.171 420.034 329.341 421.204 330.783 421.204 cv
cp
f
341.336 421.204 mo
342.778 421.204 343.947 420.034 343.947 418.592 cv
343.947 417.149 342.778 415.98 341.336 415.98 cv
339.894 415.98 338.724 417.149 338.724 418.592 cv
338.724 420.034 339.894 421.204 341.336 421.204 cv
cp
f
351.889 421.204 mo
353.331 421.204 354.5 420.034 354.5 418.592 cv
354.5 417.149 353.331 415.98 351.889 415.98 cv
350.446 415.98 349.277 417.149 349.277 418.592 cv
349.277 420.034 350.446 421.204 351.889 421.204 cv
cp
f
362.441 421.204 mo
363.883 421.204 365.053 420.034 365.053 418.592 cv
365.053 417.149 363.883 415.98 362.441 415.98 cv
360.999 415.98 359.83 417.149 359.83 418.592 cv
359.83 420.034 360.999 421.204 362.441 421.204 cv
cp
f
372.994 421.204 mo
374.436 421.204 375.605 420.034 375.605 418.592 cv
375.605 417.149 374.436 415.98 372.994 415.98 cv
371.551 415.98 370.382 417.149 370.382 418.592 cv
370.382 420.034 371.551 421.204 372.994 421.204 cv
cp
f
383.546 421.204 mo
384.989 421.204 386.158 420.034 386.158 418.592 cv
386.158 417.149 384.989 415.98 383.546 415.98 cv
382.104 415.98 380.935 417.149 380.935 418.592 cv
380.935 420.034 382.104 421.204 383.546 421.204 cv
cp
f
394.099 421.204 mo
395.542 421.204 396.711 420.034 396.711 418.592 cv
396.711 417.149 395.542 415.98 394.099 415.98 cv
392.657 415.98 391.488 417.149 391.488 418.592 cv
391.488 420.034 392.657 421.204 394.099 421.204 cv
cp
f
404.652 421.204 mo
406.093 421.204 407.263 420.034 407.263 418.592 cv
407.263 417.149 406.093 415.98 404.652 415.98 cv
403.208 415.98 402.042 417.149 402.042 418.592 cv
402.042 420.034 403.208 421.204 404.652 421.204 cv
cp
f
415.205 421.204 mo
416.646 421.204 417.816 420.034 417.816 418.592 cv
417.816 417.149 416.646 415.98 415.205 415.98 cv
413.762 415.98 412.593 417.149 412.593 418.592 cv
412.593 420.034 413.762 421.204 415.205 421.204 cv
cp
f
425.757 421.204 mo
427.2 421.204 428.369 420.034 428.369 418.592 cv
428.369 417.149 427.2 415.98 425.757 415.98 cv
424.314 415.98 423.146 417.149 423.146 418.592 cv
423.146 420.034 424.314 421.204 425.757 421.204 cv
cp
f
436.31 421.204 mo
437.751 421.204 438.921 420.034 438.921 418.592 cv
438.921 417.149 437.751 415.98 436.31 415.98 cv
434.867 415.98 433.697 417.149 433.697 418.592 cv
433.697 420.034 434.867 421.204 436.31 421.204 cv
cp
f
446.863 421.204 mo
448.304 421.204 449.474 420.034 449.474 418.592 cv
449.474 417.149 448.304 415.98 446.863 415.98 cv
445.42 415.98 444.25 417.149 444.25 418.592 cv
444.25 420.034 445.42 421.204 446.863 421.204 cv
cp
f
457.417 421.204 mo
458.858 421.204 460.027 420.034 460.027 418.592 cv
460.027 417.149 458.858 415.98 457.417 415.98 cv
455.972 415.98 454.803 417.149 454.803 418.592 cv
454.803 420.034 455.972 421.204 457.417 421.204 cv
cp
f
467.968 421.204 mo
469.41 421.204 470.58 420.034 470.58 418.592 cv
470.58 417.149 469.41 415.98 467.968 415.98 cv
466.525 415.98 465.355 417.149 465.355 418.592 cv
465.355 420.034 466.525 421.204 467.968 421.204 cv
cp
f
478.521 421.204 mo
479.962 421.204 481.132 420.034 481.132 418.592 cv
481.132 417.149 479.962 415.98 478.521 415.98 cv
477.079 415.98 475.908 417.149 475.908 418.592 cv
475.908 420.034 477.079 421.204 478.521 421.204 cv
cp
f
489.072 421.204 mo
490.516 421.204 491.685 420.034 491.685 418.592 cv
491.685 417.149 490.516 415.98 489.072 415.98 cv
487.631 415.98 486.461 417.149 486.461 418.592 cv
486.461 420.034 487.631 421.204 489.072 421.204 cv
cp
f
499.625 421.204 mo
501.068 421.204 502.238 420.034 502.238 418.592 cv
502.238 417.149 501.068 415.98 499.625 415.98 cv
498.183 415.98 497.013 417.149 497.013 418.592 cv
497.013 420.034 498.183 421.204 499.625 421.204 cv
cp
f
510.178 421.204 mo
511.621 421.204 512.792 420.034 512.792 418.592 cv
512.792 417.149 511.621 415.98 510.178 415.98 cv
508.737 415.98 507.566 417.149 507.566 418.592 cv
507.566 420.034 508.737 421.204 510.178 421.204 cv
cp
f
520.73 421.204 mo
522.174 421.204 523.343 420.034 523.343 418.592 cv
523.343 417.149 522.174 415.98 520.73 415.98 cv
519.289 415.98 518.119 417.149 518.119 418.592 cv
518.119 420.034 519.289 421.204 520.73 421.204 cv
cp
f
531.283 421.204 mo
532.726 421.204 533.896 420.034 533.896 418.592 cv
533.896 417.149 532.726 415.98 531.283 415.98 cv
529.841 415.98 528.671 417.149 528.671 418.592 cv
528.671 420.034 529.841 421.204 531.283 421.204 cv
cp
f
541.835 421.204 mo
543.279 421.204 544.447 420.034 544.447 418.592 cv
544.447 417.149 543.279 415.98 541.835 415.98 cv
540.395 415.98 539.224 417.149 539.224 418.592 cv
539.224 420.034 540.395 421.204 541.835 421.204 cv
cp
f
552.388 421.204 mo
553.833 421.204 555 420.034 555 418.592 cv
555 417.149 553.833 415.98 552.388 415.98 cv
550.947 415.98 549.777 417.149 549.777 418.592 cv
549.777 420.034 550.947 421.204 552.388 421.204 cv
cp
f
562.941 421.204 mo
564.384 421.204 565.553 420.034 565.553 418.592 cv
565.553 417.149 564.384 415.98 562.941 415.98 cv
561.5 415.98 560.33 417.149 560.33 418.592 cv
560.33 420.034 561.5 421.204 562.941 421.204 cv
cp
f
573.494 421.204 mo
574.937 421.204 576.105 420.034 576.105 418.592 cv
576.105 417.149 574.937 415.98 573.494 415.98 cv
572.053 415.98 570.882 417.149 570.882 418.592 cv
570.882 420.034 572.053 421.204 573.494 421.204 cv
cp
f
584.046 421.204 mo
585.491 421.204 586.658 420.034 586.658 418.592 cv
586.658 417.149 585.491 415.98 584.046 415.98 cv
582.605 415.98 581.435 417.149 581.435 418.592 cv
581.435 420.034 582.605 421.204 584.046 421.204 cv
cp
f
594.599 421.204 mo
596.042 421.204 597.21 420.034 597.21 418.592 cv
597.21 417.149 596.042 415.98 594.599 415.98 cv
593.158 415.98 591.988 417.149 591.988 418.592 cv
591.988 420.034 593.158 421.204 594.599 421.204 cv
cp
f
605.152 421.204 mo
606.595 421.204 607.763 420.034 607.763 418.592 cv
607.763 417.149 606.595 415.98 605.152 415.98 cv
603.71 415.98 602.542 417.149 602.542 418.592 cv
602.542 420.034 603.71 421.204 605.152 421.204 cv
cp
f
615.705 421.204 mo
617.148 421.204 618.316 420.034 618.316 418.592 cv
618.316 417.149 617.148 415.98 615.705 415.98 cv
614.263 415.98 613.093 417.149 613.093 418.592 cv
613.093 420.034 614.263 421.204 615.705 421.204 cv
cp
f
626.257 421.204 mo
627.701 421.204 628.869 420.034 628.869 418.592 cv
628.869 417.149 627.701 415.98 626.257 415.98 cv
624.816 415.98 623.646 417.149 623.646 418.592 cv
623.646 420.034 624.816 421.204 626.257 421.204 cv
cp
f
636.81 421.204 mo
638.251 421.204 639.421 420.034 639.421 418.592 cv
639.421 417.149 638.251 415.98 636.81 415.98 cv
635.369 415.98 634.2 417.149 634.2 418.592 cv
634.2 420.034 635.369 421.204 636.81 421.204 cv
cp
f
647.363 421.204 mo
648.804 421.204 649.974 420.034 649.974 418.592 cv
649.974 417.149 648.804 415.98 647.363 415.98 cv
645.919 415.98 644.751 417.149 644.751 418.592 cv
644.751 420.034 645.919 421.204 647.363 421.204 cv
cp
f
140.835 431.757 mo
142.277 431.757 143.447 430.587 143.447 429.145 cv
143.447 427.702 142.277 426.533 140.835 426.533 cv
139.393 426.533 138.224 427.702 138.224 429.145 cv
138.224 430.587 139.393 431.757 140.835 431.757 cv
cp
f
151.388 431.757 mo
152.83 431.757 154 430.587 154 429.145 cv
154 427.702 152.83 426.533 151.388 426.533 cv
149.945 426.533 148.776 427.702 148.776 429.145 cv
148.776 430.587 149.945 431.757 151.388 431.757 cv
cp
f
161.94 431.757 mo
163.383 431.757 164.552 430.587 164.552 429.145 cv
164.552 427.702 163.383 426.533 161.94 426.533 cv
160.498 426.533 159.329 427.702 159.329 429.145 cv
159.329 430.587 160.498 431.757 161.94 431.757 cv
cp
f
172.493 431.757 mo
173.936 431.757 175.105 430.587 175.105 429.145 cv
175.105 427.702 173.936 426.533 172.493 426.533 cv
171.051 426.533 169.881 427.702 169.881 429.145 cv
169.881 430.587 171.051 431.757 172.493 431.757 cv
cp
f
225.256 431.757 mo
226.699 431.757 227.868 430.587 227.868 429.145 cv
227.868 427.702 226.699 426.533 225.256 426.533 cv
223.814 426.533 222.645 427.702 222.645 429.145 cv
222.645 430.587 223.814 431.757 225.256 431.757 cv
cp
f
235.809 431.757 mo
237.251 431.757 238.421 430.587 238.421 429.145 cv
238.421 427.702 237.251 426.533 235.809 426.533 cv
234.367 426.533 233.197 427.702 233.197 429.145 cv
233.197 430.587 234.367 431.757 235.809 431.757 cv
cp
f
246.362 431.757 mo
247.804 431.757 248.974 430.587 248.974 429.145 cv
248.974 427.702 247.804 426.533 246.362 426.533 cv
244.919 426.533 243.75 427.702 243.75 429.145 cv
243.75 430.587 244.919 431.757 246.362 431.757 cv
cp
f
256.915 431.757 mo
258.357 431.757 259.526 430.587 259.526 429.145 cv
259.526 427.702 258.357 426.533 256.915 426.533 cv
255.472 426.533 254.303 427.702 254.303 429.145 cv
254.303 430.587 255.472 431.757 256.915 431.757 cv
cp
f
267.467 431.757 mo
268.91 431.757 270.079 430.587 270.079 429.145 cv
270.079 427.702 268.91 426.533 267.467 426.533 cv
266.025 426.533 264.855 427.702 264.855 429.145 cv
264.855 430.587 266.025 431.757 267.467 431.757 cv
cp
f
278.02 431.757 mo
279.462 431.757 280.631 430.587 280.631 429.145 cv
280.631 427.702 279.462 426.533 278.02 426.533 cv
276.578 426.533 275.408 427.702 275.408 429.145 cv
275.408 430.587 276.578 431.757 278.02 431.757 cv
cp
f
288.572 431.757 mo
290.015 431.757 291.184 430.587 291.184 429.145 cv
291.184 427.702 290.015 426.533 288.572 426.533 cv
287.13 426.533 285.961 427.702 285.961 429.145 cv
285.961 430.587 287.13 431.757 288.572 431.757 cv
cp
f
299.125 431.757 mo
300.567 431.757 301.737 430.587 301.737 429.145 cv
301.737 427.702 300.567 426.533 299.125 426.533 cv
297.683 426.533 296.514 427.702 296.514 429.145 cv
296.514 430.587 297.683 431.757 299.125 431.757 cv
cp
f
309.678 431.757 mo
311.12 431.757 312.29 430.587 312.29 429.145 cv
312.29 427.702 311.12 426.533 309.678 426.533 cv
308.235 426.533 307.066 427.702 307.066 429.145 cv
307.066 430.587 308.235 431.757 309.678 431.757 cv
cp
f
320.23 431.757 mo
321.673 431.757 322.842 430.587 322.842 429.145 cv
322.842 427.702 321.673 426.533 320.23 426.533 cv
318.788 426.533 317.619 427.702 317.619 429.145 cv
317.619 430.587 318.788 431.757 320.23 431.757 cv
cp
f
330.783 431.757 mo
332.226 431.757 333.395 430.587 333.395 429.145 cv
333.395 427.702 332.226 426.533 330.783 426.533 cv
329.341 426.533 328.171 427.702 328.171 429.145 cv
328.171 430.587 329.341 431.757 330.783 431.757 cv
cp
f
341.336 431.757 mo
342.778 431.757 343.947 430.587 343.947 429.145 cv
343.947 427.702 342.778 426.533 341.336 426.533 cv
339.894 426.533 338.724 427.702 338.724 429.145 cv
338.724 430.587 339.894 431.757 341.336 431.757 cv
cp
f
351.889 431.757 mo
353.331 431.757 354.5 430.587 354.5 429.145 cv
354.5 427.702 353.331 426.533 351.889 426.533 cv
350.446 426.533 349.277 427.702 349.277 429.145 cv
349.277 430.587 350.446 431.757 351.889 431.757 cv
cp
f
362.441 431.757 mo
363.883 431.757 365.053 430.587 365.053 429.145 cv
365.053 427.702 363.883 426.533 362.441 426.533 cv
360.999 426.533 359.83 427.702 359.83 429.145 cv
359.83 430.587 360.999 431.757 362.441 431.757 cv
cp
f
372.994 431.757 mo
374.436 431.757 375.605 430.587 375.605 429.145 cv
375.605 427.702 374.436 426.533 372.994 426.533 cv
371.551 426.533 370.382 427.702 370.382 429.145 cv
370.382 430.587 371.551 431.757 372.994 431.757 cv
cp
f
383.546 431.757 mo
384.989 431.757 386.158 430.587 386.158 429.145 cv
386.158 427.702 384.989 426.533 383.546 426.533 cv
382.104 426.533 380.935 427.702 380.935 429.145 cv
380.935 430.587 382.104 431.757 383.546 431.757 cv
cp
f
394.099 431.757 mo
395.542 431.757 396.711 430.587 396.711 429.145 cv
396.711 427.702 395.542 426.533 394.099 426.533 cv
392.657 426.533 391.488 427.702 391.488 429.145 cv
391.488 430.587 392.657 431.757 394.099 431.757 cv
cp
f
404.652 431.757 mo
406.093 431.757 407.263 430.587 407.263 429.145 cv
407.263 427.702 406.093 426.533 404.652 426.533 cv
403.208 426.533 402.042 427.702 402.042 429.145 cv
402.042 430.587 403.208 431.757 404.652 431.757 cv
cp
f
415.205 431.757 mo
416.646 431.757 417.816 430.587 417.816 429.145 cv
417.816 427.702 416.646 426.533 415.205 426.533 cv
413.762 426.533 412.593 427.702 412.593 429.145 cv
412.593 430.587 413.762 431.757 415.205 431.757 cv
cp
f
425.757 431.757 mo
427.2 431.757 428.369 430.587 428.369 429.145 cv
428.369 427.702 427.2 426.533 425.757 426.533 cv
424.314 426.533 423.146 427.702 423.146 429.145 cv
423.146 430.587 424.314 431.757 425.757 431.757 cv
cp
f
446.863 431.757 mo
448.304 431.757 449.474 430.587 449.474 429.145 cv
449.474 427.702 448.304 426.533 446.863 426.533 cv
445.42 426.533 444.25 427.702 444.25 429.145 cv
444.25 430.587 445.42 431.757 446.863 431.757 cv
cp
f
457.417 431.757 mo
458.858 431.757 460.027 430.587 460.027 429.145 cv
460.027 427.702 458.858 426.533 457.417 426.533 cv
455.972 426.533 454.803 427.702 454.803 429.145 cv
454.803 430.587 455.972 431.757 457.417 431.757 cv
cp
f
467.968 431.757 mo
469.41 431.757 470.58 430.587 470.58 429.145 cv
470.58 427.702 469.41 426.533 467.968 426.533 cv
466.525 426.533 465.355 427.702 465.355 429.145 cv
465.355 430.587 466.525 431.757 467.968 431.757 cv
cp
f
478.521 431.757 mo
479.962 431.757 481.132 430.587 481.132 429.145 cv
481.132 427.702 479.962 426.533 478.521 426.533 cv
477.079 426.533 475.908 427.702 475.908 429.145 cv
475.908 430.587 477.079 431.757 478.521 431.757 cv
cp
f
489.072 431.757 mo
490.516 431.757 491.685 430.587 491.685 429.145 cv
491.685 427.702 490.516 426.533 489.072 426.533 cv
487.631 426.533 486.461 427.702 486.461 429.145 cv
486.461 430.587 487.631 431.757 489.072 431.757 cv
cp
f
499.625 431.757 mo
501.068 431.757 502.238 430.587 502.238 429.145 cv
502.238 427.702 501.068 426.533 499.625 426.533 cv
498.183 426.533 497.013 427.702 497.013 429.145 cv
497.013 430.587 498.183 431.757 499.625 431.757 cv
cp
f
510.178 431.757 mo
511.621 431.757 512.792 430.587 512.792 429.145 cv
512.792 427.702 511.621 426.533 510.178 426.533 cv
508.737 426.533 507.566 427.702 507.566 429.145 cv
507.566 430.587 508.737 431.757 510.178 431.757 cv
cp
f
520.73 431.757 mo
522.174 431.757 523.343 430.587 523.343 429.145 cv
523.343 427.702 522.174 426.533 520.73 426.533 cv
519.289 426.533 518.119 427.702 518.119 429.145 cv
518.119 430.587 519.289 431.757 520.73 431.757 cv
cp
f
531.283 431.757 mo
532.726 431.757 533.896 430.587 533.896 429.145 cv
533.896 427.702 532.726 426.533 531.283 426.533 cv
529.841 426.533 528.671 427.702 528.671 429.145 cv
528.671 430.587 529.841 431.757 531.283 431.757 cv
cp
f
541.835 431.757 mo
543.279 431.757 544.447 430.587 544.447 429.145 cv
544.447 427.702 543.279 426.533 541.835 426.533 cv
540.395 426.533 539.224 427.702 539.224 429.145 cv
539.224 430.587 540.395 431.757 541.835 431.757 cv
cp
f
552.388 431.757 mo
553.833 431.757 555 430.587 555 429.145 cv
555 427.702 553.833 426.533 552.388 426.533 cv
550.947 426.533 549.777 427.702 549.777 429.145 cv
549.777 430.587 550.947 431.757 552.388 431.757 cv
cp
f
562.941 431.757 mo
564.384 431.757 565.553 430.587 565.553 429.145 cv
565.553 427.702 564.384 426.533 562.941 426.533 cv
561.5 426.533 560.33 427.702 560.33 429.145 cv
560.33 430.587 561.5 431.757 562.941 431.757 cv
cp
f
573.494 431.757 mo
574.937 431.757 576.105 430.587 576.105 429.145 cv
576.105 427.702 574.937 426.533 573.494 426.533 cv
572.053 426.533 570.882 427.702 570.882 429.145 cv
570.882 430.587 572.053 431.757 573.494 431.757 cv
cp
f
584.046 431.757 mo
585.491 431.757 586.658 430.587 586.658 429.145 cv
586.658 427.702 585.491 426.533 584.046 426.533 cv
582.605 426.533 581.435 427.702 581.435 429.145 cv
581.435 430.587 582.605 431.757 584.046 431.757 cv
cp
f
594.599 431.757 mo
596.042 431.757 597.21 430.587 597.21 429.145 cv
597.21 427.702 596.042 426.533 594.599 426.533 cv
593.158 426.533 591.988 427.702 591.988 429.145 cv
591.988 430.587 593.158 431.757 594.599 431.757 cv
cp
f
605.152 431.757 mo
606.595 431.757 607.763 430.587 607.763 429.145 cv
607.763 427.702 606.595 426.533 605.152 426.533 cv
603.71 426.533 602.542 427.702 602.542 429.145 cv
602.542 430.587 603.71 431.757 605.152 431.757 cv
cp
f
615.705 431.757 mo
617.148 431.757 618.316 430.587 618.316 429.145 cv
618.316 427.702 617.148 426.533 615.705 426.533 cv
614.263 426.533 613.093 427.702 613.093 429.145 cv
613.093 430.587 614.263 431.757 615.705 431.757 cv
cp
f
626.257 431.757 mo
627.701 431.757 628.869 430.587 628.869 429.145 cv
628.869 427.702 627.701 426.533 626.257 426.533 cv
624.816 426.533 623.646 427.702 623.646 429.145 cv
623.646 430.587 624.816 431.757 626.257 431.757 cv
cp
f
636.81 431.757 mo
638.251 431.757 639.421 430.587 639.421 429.145 cv
639.421 427.702 638.251 426.533 636.81 426.533 cv
635.369 426.533 634.2 427.702 634.2 429.145 cv
634.2 430.587 635.369 431.757 636.81 431.757 cv
cp
f
647.363 431.757 mo
648.804 431.757 649.974 430.587 649.974 429.145 cv
649.974 427.702 648.804 426.533 647.363 426.533 cv
645.919 426.533 644.751 427.702 644.751 429.145 cv
644.751 430.587 645.919 431.757 647.363 431.757 cv
cp
f
109.177 442.309 mo
110.62 442.309 111.789 441.14 111.789 439.697 cv
111.789 438.255 110.62 437.086 109.177 437.086 cv
107.735 437.086 106.565 438.255 106.565 439.697 cv
106.565 441.14 107.735 442.309 109.177 442.309 cv
cp
f
119.73 442.309 mo
121.172 442.309 122.341 441.14 122.341 439.697 cv
122.341 438.255 121.172 437.086 119.73 437.086 cv
118.288 437.086 117.118 438.255 117.118 439.697 cv
117.118 441.14 118.288 442.309 119.73 442.309 cv
cp
f
130.282 442.309 mo
131.725 442.309 132.894 441.14 132.894 439.697 cv
132.894 438.255 131.725 437.086 130.282 437.086 cv
128.84 437.086 127.671 438.255 127.671 439.697 cv
127.671 441.14 128.84 442.309 130.282 442.309 cv
cp
f
140.835 442.309 mo
142.277 442.309 143.447 441.14 143.447 439.697 cv
143.447 438.255 142.277 437.086 140.835 437.086 cv
139.393 437.086 138.224 438.255 138.224 439.697 cv
138.224 441.14 139.393 442.309 140.835 442.309 cv
cp
f
151.388 442.309 mo
152.83 442.309 154 441.14 154 439.697 cv
154 438.255 152.83 437.086 151.388 437.086 cv
149.945 437.086 148.776 438.255 148.776 439.697 cv
148.776 441.14 149.945 442.309 151.388 442.309 cv
cp
f
161.94 442.309 mo
163.383 442.309 164.552 441.14 164.552 439.697 cv
164.552 438.255 163.383 437.086 161.94 437.086 cv
160.498 437.086 159.329 438.255 159.329 439.697 cv
159.329 441.14 160.498 442.309 161.94 442.309 cv
cp
f
172.493 442.309 mo
173.936 442.309 175.105 441.14 175.105 439.697 cv
175.105 438.255 173.936 437.086 172.493 437.086 cv
171.051 437.086 169.881 438.255 169.881 439.697 cv
169.881 441.14 171.051 442.309 172.493 442.309 cv
cp
f
235.809 442.309 mo
237.251 442.309 238.421 441.14 238.421 439.697 cv
238.421 438.255 237.251 437.086 235.809 437.086 cv
234.367 437.086 233.197 438.255 233.197 439.697 cv
233.197 441.14 234.367 442.309 235.809 442.309 cv
cp
f
246.362 442.309 mo
247.804 442.309 248.974 441.14 248.974 439.697 cv
248.974 438.255 247.804 437.086 246.362 437.086 cv
244.919 437.086 243.75 438.255 243.75 439.697 cv
243.75 441.14 244.919 442.309 246.362 442.309 cv
cp
f
256.915 442.309 mo
258.357 442.309 259.526 441.14 259.526 439.697 cv
259.526 438.255 258.357 437.086 256.915 437.086 cv
255.472 437.086 254.303 438.255 254.303 439.697 cv
254.303 441.14 255.472 442.309 256.915 442.309 cv
cp
f
267.467 442.309 mo
268.91 442.309 270.079 441.14 270.079 439.697 cv
270.079 438.255 268.91 437.086 267.467 437.086 cv
266.025 437.086 264.855 438.255 264.855 439.697 cv
264.855 441.14 266.025 442.309 267.467 442.309 cv
cp
f
278.02 442.309 mo
279.462 442.309 280.631 441.14 280.631 439.697 cv
280.631 438.255 279.462 437.086 278.02 437.086 cv
276.578 437.086 275.408 438.255 275.408 439.697 cv
275.408 441.14 276.578 442.309 278.02 442.309 cv
cp
f
288.572 442.309 mo
290.015 442.309 291.184 441.14 291.184 439.697 cv
291.184 438.255 290.015 437.086 288.572 437.086 cv
287.13 437.086 285.961 438.255 285.961 439.697 cv
285.961 441.14 287.13 442.309 288.572 442.309 cv
cp
f
299.125 442.309 mo
300.567 442.309 301.737 441.14 301.737 439.697 cv
301.737 438.255 300.567 437.086 299.125 437.086 cv
297.683 437.086 296.514 438.255 296.514 439.697 cv
296.514 441.14 297.683 442.309 299.125 442.309 cv
cp
f
309.678 442.309 mo
311.12 442.309 312.29 441.14 312.29 439.697 cv
312.29 438.255 311.12 437.086 309.678 437.086 cv
308.235 437.086 307.066 438.255 307.066 439.697 cv
307.066 441.14 308.235 442.309 309.678 442.309 cv
cp
f
320.23 442.309 mo
321.673 442.309 322.842 441.14 322.842 439.697 cv
322.842 438.255 321.673 437.086 320.23 437.086 cv
318.788 437.086 317.619 438.255 317.619 439.697 cv
317.619 441.14 318.788 442.309 320.23 442.309 cv
cp
f
330.783 442.309 mo
332.226 442.309 333.395 441.14 333.395 439.697 cv
333.395 438.255 332.226 437.086 330.783 437.086 cv
329.341 437.086 328.171 438.255 328.171 439.697 cv
328.171 441.14 329.341 442.309 330.783 442.309 cv
cp
f
341.336 442.309 mo
342.778 442.309 343.947 441.14 343.947 439.697 cv
343.947 438.255 342.778 437.086 341.336 437.086 cv
339.894 437.086 338.724 438.255 338.724 439.697 cv
338.724 441.14 339.894 442.309 341.336 442.309 cv
cp
f
351.889 442.309 mo
353.331 442.309 354.5 441.14 354.5 439.697 cv
354.5 438.255 353.331 437.086 351.889 437.086 cv
350.446 437.086 349.277 438.255 349.277 439.697 cv
349.277 441.14 350.446 442.309 351.889 442.309 cv
cp
f
362.441 442.309 mo
363.883 442.309 365.053 441.14 365.053 439.697 cv
365.053 438.255 363.883 437.086 362.441 437.086 cv
360.999 437.086 359.83 438.255 359.83 439.697 cv
359.83 441.14 360.999 442.309 362.441 442.309 cv
cp
f
372.994 442.309 mo
374.436 442.309 375.605 441.14 375.605 439.697 cv
375.605 438.255 374.436 437.086 372.994 437.086 cv
371.551 437.086 370.382 438.255 370.382 439.697 cv
370.382 441.14 371.551 442.309 372.994 442.309 cv
cp
f
383.546 442.309 mo
384.989 442.309 386.158 441.14 386.158 439.697 cv
386.158 438.255 384.989 437.086 383.546 437.086 cv
382.104 437.086 380.935 438.255 380.935 439.697 cv
380.935 441.14 382.104 442.309 383.546 442.309 cv
cp
f
394.099 442.309 mo
395.542 442.309 396.711 441.14 396.711 439.697 cv
396.711 438.255 395.542 437.086 394.099 437.086 cv
392.657 437.086 391.488 438.255 391.488 439.697 cv
391.488 441.14 392.657 442.309 394.099 442.309 cv
cp
f
404.652 442.309 mo
406.093 442.309 407.263 441.14 407.263 439.697 cv
407.263 438.255 406.093 437.086 404.652 437.086 cv
403.208 437.086 402.042 438.255 402.042 439.697 cv
402.042 441.14 403.208 442.309 404.652 442.309 cv
cp
f
415.205 442.309 mo
416.646 442.309 417.816 441.14 417.816 439.697 cv
417.816 438.255 416.646 437.086 415.205 437.086 cv
413.762 437.086 412.593 438.255 412.593 439.697 cv
412.593 441.14 413.762 442.309 415.205 442.309 cv
cp
f
457.417 442.309 mo
458.858 442.309 460.027 441.14 460.027 439.697 cv
460.027 438.255 458.858 437.086 457.417 437.086 cv
455.972 437.086 454.803 438.255 454.803 439.697 cv
454.803 441.14 455.972 442.309 457.417 442.309 cv
cp
f
467.968 442.309 mo
469.41 442.309 470.58 441.14 470.58 439.697 cv
470.58 438.255 469.41 437.086 467.968 437.086 cv
466.525 437.086 465.355 438.255 465.355 439.697 cv
465.355 441.14 466.525 442.309 467.968 442.309 cv
cp
f
478.521 442.309 mo
479.962 442.309 481.132 441.14 481.132 439.697 cv
481.132 438.255 479.962 437.086 478.521 437.086 cv
477.079 437.086 475.908 438.255 475.908 439.697 cv
475.908 441.14 477.079 442.309 478.521 442.309 cv
cp
f
489.072 442.309 mo
490.516 442.309 491.685 441.14 491.685 439.697 cv
491.685 438.255 490.516 437.086 489.072 437.086 cv
487.631 437.086 486.461 438.255 486.461 439.697 cv
486.461 441.14 487.631 442.309 489.072 442.309 cv
cp
f
499.625 442.309 mo
501.068 442.309 502.238 441.14 502.238 439.697 cv
502.238 438.255 501.068 437.086 499.625 437.086 cv
498.183 437.086 497.013 438.255 497.013 439.697 cv
497.013 441.14 498.183 442.309 499.625 442.309 cv
cp
f
510.178 442.309 mo
511.621 442.309 512.792 441.14 512.792 439.697 cv
512.792 438.255 511.621 437.086 510.178 437.086 cv
508.737 437.086 507.566 438.255 507.566 439.697 cv
507.566 441.14 508.737 442.309 510.178 442.309 cv
cp
f
520.73 442.309 mo
522.174 442.309 523.343 441.14 523.343 439.697 cv
523.343 438.255 522.174 437.086 520.73 437.086 cv
519.289 437.086 518.119 438.255 518.119 439.697 cv
518.119 441.14 519.289 442.309 520.73 442.309 cv
cp
f
531.283 442.309 mo
532.726 442.309 533.896 441.14 533.896 439.697 cv
533.896 438.255 532.726 437.086 531.283 437.086 cv
529.841 437.086 528.671 438.255 528.671 439.697 cv
528.671 441.14 529.841 442.309 531.283 442.309 cv
cp
f
541.835 442.309 mo
543.279 442.309 544.447 441.14 544.447 439.697 cv
544.447 438.255 543.279 437.086 541.835 437.086 cv
540.395 437.086 539.224 438.255 539.224 439.697 cv
539.224 441.14 540.395 442.309 541.835 442.309 cv
cp
f
573.494 442.309 mo
574.937 442.309 576.105 441.14 576.105 439.697 cv
576.105 438.255 574.937 437.086 573.494 437.086 cv
572.053 437.086 570.882 438.255 570.882 439.697 cv
570.882 441.14 572.053 442.309 573.494 442.309 cv
cp
f
584.046 442.309 mo
585.491 442.309 586.658 441.14 586.658 439.697 cv
586.658 438.255 585.491 437.086 584.046 437.086 cv
582.605 437.086 581.435 438.255 581.435 439.697 cv
581.435 441.14 582.605 442.309 584.046 442.309 cv
cp
f
594.599 442.309 mo
596.042 442.309 597.21 441.14 597.21 439.697 cv
597.21 438.255 596.042 437.086 594.599 437.086 cv
593.158 437.086 591.988 438.255 591.988 439.697 cv
591.988 441.14 593.158 442.309 594.599 442.309 cv
cp
f
605.152 442.309 mo
606.595 442.309 607.763 441.14 607.763 439.697 cv
607.763 438.255 606.595 437.086 605.152 437.086 cv
603.71 437.086 602.542 438.255 602.542 439.697 cv
602.542 441.14 603.71 442.309 605.152 442.309 cv
cp
f
615.705 442.309 mo
617.148 442.309 618.316 441.14 618.316 439.697 cv
618.316 438.255 617.148 437.086 615.705 437.086 cv
614.263 437.086 613.093 438.255 613.093 439.697 cv
613.093 441.14 614.263 442.309 615.705 442.309 cv
cp
f
626.257 442.309 mo
627.701 442.309 628.869 441.14 628.869 439.697 cv
628.869 438.255 627.701 437.086 626.257 437.086 cv
624.816 437.086 623.646 438.255 623.646 439.697 cv
623.646 441.14 624.816 442.309 626.257 442.309 cv
cp
f
636.81 442.309 mo
638.251 442.309 639.421 441.14 639.421 439.697 cv
639.421 438.255 638.251 437.086 636.81 437.086 cv
635.369 437.086 634.2 438.255 634.2 439.697 cv
634.2 441.14 635.369 442.309 636.81 442.309 cv
cp
f
647.363 442.309 mo
648.804 442.309 649.974 441.14 649.974 439.697 cv
649.974 438.255 648.804 437.086 647.363 437.086 cv
645.919 437.086 644.751 438.255 644.751 439.697 cv
644.751 441.14 645.919 442.309 647.363 442.309 cv
cp
f
109.177 452.861 mo
110.62 452.861 111.789 451.692 111.789 450.25 cv
111.789 448.808 110.62 447.639 109.177 447.639 cv
107.735 447.639 106.565 448.808 106.565 450.25 cv
106.565 451.692 107.735 452.861 109.177 452.861 cv
cp
f
119.73 452.861 mo
121.172 452.861 122.341 451.692 122.341 450.25 cv
122.341 448.808 121.172 447.639 119.73 447.639 cv
118.288 447.639 117.118 448.808 117.118 450.25 cv
117.118 451.692 118.288 452.861 119.73 452.861 cv
cp
f
130.282 452.861 mo
131.725 452.861 132.894 451.692 132.894 450.25 cv
132.894 448.808 131.725 447.639 130.282 447.639 cv
128.84 447.639 127.671 448.808 127.671 450.25 cv
127.671 451.692 128.84 452.861 130.282 452.861 cv
cp
f
140.835 452.861 mo
142.277 452.861 143.447 451.692 143.447 450.25 cv
143.447 448.808 142.277 447.639 140.835 447.639 cv
139.393 447.639 138.224 448.808 138.224 450.25 cv
138.224 451.692 139.393 452.861 140.835 452.861 cv
cp
f
151.388 452.861 mo
152.83 452.861 154 451.692 154 450.25 cv
154 448.808 152.83 447.639 151.388 447.639 cv
149.945 447.639 148.776 448.808 148.776 450.25 cv
148.776 451.692 149.945 452.861 151.388 452.861 cv
cp
f
161.94 452.861 mo
163.383 452.861 164.552 451.692 164.552 450.25 cv
164.552 448.808 163.383 447.639 161.94 447.639 cv
160.498 447.639 159.329 448.808 159.329 450.25 cv
159.329 451.692 160.498 452.861 161.94 452.861 cv
cp
f
172.493 452.861 mo
173.936 452.861 175.105 451.692 175.105 450.25 cv
175.105 448.808 173.936 447.639 172.493 447.639 cv
171.051 447.639 169.881 448.808 169.881 450.25 cv
169.881 451.692 171.051 452.861 172.493 452.861 cv
cp
f
235.809 452.861 mo
237.251 452.861 238.421 451.692 238.421 450.25 cv
238.421 448.808 237.251 447.639 235.809 447.639 cv
234.367 447.639 233.197 448.808 233.197 450.25 cv
233.197 451.692 234.367 452.861 235.809 452.861 cv
cp
f
246.362 452.861 mo
247.804 452.861 248.974 451.692 248.974 450.25 cv
248.974 448.808 247.804 447.639 246.362 447.639 cv
244.919 447.639 243.75 448.808 243.75 450.25 cv
243.75 451.692 244.919 452.861 246.362 452.861 cv
cp
f
256.915 452.861 mo
258.357 452.861 259.526 451.692 259.526 450.25 cv
259.526 448.808 258.357 447.639 256.915 447.639 cv
255.472 447.639 254.303 448.808 254.303 450.25 cv
254.303 451.692 255.472 452.861 256.915 452.861 cv
cp
f
267.467 452.861 mo
268.91 452.861 270.079 451.692 270.079 450.25 cv
270.079 448.808 268.91 447.639 267.467 447.639 cv
266.025 447.639 264.855 448.808 264.855 450.25 cv
264.855 451.692 266.025 452.861 267.467 452.861 cv
cp
f
278.02 452.861 mo
279.462 452.861 280.631 451.692 280.631 450.25 cv
280.631 448.808 279.462 447.639 278.02 447.639 cv
276.578 447.639 275.408 448.808 275.408 450.25 cv
275.408 451.692 276.578 452.861 278.02 452.861 cv
cp
f
288.572 452.861 mo
290.015 452.861 291.184 451.692 291.184 450.25 cv
291.184 448.808 290.015 447.639 288.572 447.639 cv
287.13 447.639 285.961 448.808 285.961 450.25 cv
285.961 451.692 287.13 452.861 288.572 452.861 cv
cp
f
299.125 452.861 mo
300.567 452.861 301.737 451.692 301.737 450.25 cv
301.737 448.808 300.567 447.639 299.125 447.639 cv
297.683 447.639 296.514 448.808 296.514 450.25 cv
296.514 451.692 297.683 452.861 299.125 452.861 cv
cp
f
309.678 452.861 mo
311.12 452.861 312.29 451.692 312.29 450.25 cv
312.29 448.808 311.12 447.639 309.678 447.639 cv
308.235 447.639 307.066 448.808 307.066 450.25 cv
307.066 451.692 308.235 452.861 309.678 452.861 cv
cp
f
320.23 452.861 mo
321.673 452.861 322.842 451.692 322.842 450.25 cv
322.842 448.808 321.673 447.639 320.23 447.639 cv
318.788 447.639 317.619 448.808 317.619 450.25 cv
317.619 451.692 318.788 452.861 320.23 452.861 cv
cp
f
330.783 452.861 mo
332.226 452.861 333.395 451.692 333.395 450.25 cv
333.395 448.808 332.226 447.639 330.783 447.639 cv
329.341 447.639 328.171 448.808 328.171 450.25 cv
328.171 451.692 329.341 452.861 330.783 452.861 cv
cp
f
341.336 452.861 mo
342.778 452.861 343.947 451.692 343.947 450.25 cv
343.947 448.808 342.778 447.639 341.336 447.639 cv
339.894 447.639 338.724 448.808 338.724 450.25 cv
338.724 451.692 339.894 452.861 341.336 452.861 cv
cp
f
351.889 452.861 mo
353.331 452.861 354.5 451.692 354.5 450.25 cv
354.5 448.808 353.331 447.639 351.889 447.639 cv
350.446 447.639 349.277 448.808 349.277 450.25 cv
349.277 451.692 350.446 452.861 351.889 452.861 cv
cp
f
362.441 452.861 mo
363.883 452.861 365.053 451.692 365.053 450.25 cv
365.053 448.808 363.883 447.639 362.441 447.639 cv
360.999 447.639 359.83 448.808 359.83 450.25 cv
359.83 451.692 360.999 452.861 362.441 452.861 cv
cp
f
372.994 452.861 mo
374.436 452.861 375.605 451.692 375.605 450.25 cv
375.605 448.808 374.436 447.639 372.994 447.639 cv
371.551 447.639 370.382 448.808 370.382 450.25 cv
370.382 451.692 371.551 452.861 372.994 452.861 cv
cp
f
383.546 452.861 mo
384.989 452.861 386.158 451.692 386.158 450.25 cv
386.158 448.808 384.989 447.639 383.546 447.639 cv
382.104 447.639 380.935 448.808 380.935 450.25 cv
380.935 451.692 382.104 452.861 383.546 452.861 cv
cp
f
394.099 452.861 mo
395.542 452.861 396.711 451.692 396.711 450.25 cv
396.711 448.808 395.542 447.639 394.099 447.639 cv
392.657 447.639 391.488 448.808 391.488 450.25 cv
391.488 451.692 392.657 452.861 394.099 452.861 cv
cp
f
404.652 452.861 mo
406.093 452.861 407.263 451.692 407.263 450.25 cv
407.263 448.808 406.093 447.639 404.652 447.639 cv
403.208 447.639 402.042 448.808 402.042 450.25 cv
402.042 451.692 403.208 452.861 404.652 452.861 cv
cp
f
457.417 452.861 mo
458.858 452.861 460.027 451.692 460.027 450.25 cv
460.027 448.808 458.858 447.639 457.417 447.639 cv
455.972 447.639 454.803 448.808 454.803 450.25 cv
454.803 451.692 455.972 452.861 457.417 452.861 cv
cp
f
467.968 452.861 mo
469.41 452.861 470.58 451.692 470.58 450.25 cv
470.58 448.808 469.41 447.639 467.968 447.639 cv
466.525 447.639 465.355 448.808 465.355 450.25 cv
465.355 451.692 466.525 452.861 467.968 452.861 cv
cp
f
478.521 452.861 mo
479.962 452.861 481.132 451.692 481.132 450.25 cv
481.132 448.808 479.962 447.639 478.521 447.639 cv
477.079 447.639 475.908 448.808 475.908 450.25 cv
475.908 451.692 477.079 452.861 478.521 452.861 cv
cp
f
489.072 452.861 mo
490.516 452.861 491.685 451.692 491.685 450.25 cv
491.685 448.808 490.516 447.639 489.072 447.639 cv
487.631 447.639 486.461 448.808 486.461 450.25 cv
486.461 451.692 487.631 452.861 489.072 452.861 cv
cp
f
499.625 452.861 mo
501.068 452.861 502.238 451.692 502.238 450.25 cv
502.238 448.808 501.068 447.639 499.625 447.639 cv
498.183 447.639 497.013 448.808 497.013 450.25 cv
497.013 451.692 498.183 452.861 499.625 452.861 cv
cp
f
510.178 452.861 mo
511.621 452.861 512.792 451.692 512.792 450.25 cv
512.792 448.808 511.621 447.639 510.178 447.639 cv
508.737 447.639 507.566 448.808 507.566 450.25 cv
507.566 451.692 508.737 452.861 510.178 452.861 cv
cp
f
520.73 452.861 mo
522.174 452.861 523.343 451.692 523.343 450.25 cv
523.343 448.808 522.174 447.639 520.73 447.639 cv
519.289 447.639 518.119 448.808 518.119 450.25 cv
518.119 451.692 519.289 452.861 520.73 452.861 cv
cp
f
531.283 452.861 mo
532.726 452.861 533.896 451.692 533.896 450.25 cv
533.896 448.808 532.726 447.639 531.283 447.639 cv
529.841 447.639 528.671 448.808 528.671 450.25 cv
528.671 451.692 529.841 452.861 531.283 452.861 cv
cp
f
541.835 452.861 mo
543.279 452.861 544.447 451.692 544.447 450.25 cv
544.447 448.808 543.279 447.639 541.835 447.639 cv
540.395 447.639 539.224 448.808 539.224 450.25 cv
539.224 451.692 540.395 452.861 541.835 452.861 cv
cp
f
626.257 452.861 mo
627.701 452.861 628.869 451.692 628.869 450.25 cv
628.869 448.808 627.701 447.639 626.257 447.639 cv
624.816 447.639 623.646 448.808 623.646 450.25 cv
623.646 451.692 624.816 452.861 626.257 452.861 cv
cp
f
636.81 452.861 mo
638.251 452.861 639.421 451.692 639.421 450.25 cv
639.421 448.808 638.251 447.639 636.81 447.639 cv
635.369 447.639 634.2 448.808 634.2 450.25 cv
634.2 451.692 635.369 452.861 636.81 452.861 cv
cp
f
647.363 452.861 mo
648.804 452.861 649.974 451.692 649.974 450.25 cv
649.974 448.808 648.804 447.639 647.363 447.639 cv
645.919 447.639 644.751 448.808 644.751 450.25 cv
644.751 451.692 645.919 452.861 647.363 452.861 cv
cp
f
109.177 463.414 mo
110.62 463.414 111.789 462.245 111.789 460.803 cv
111.789 459.36 110.62 458.191 109.177 458.191 cv
107.735 458.191 106.565 459.36 106.565 460.803 cv
106.565 462.245 107.735 463.414 109.177 463.414 cv
cp
f
119.73 463.414 mo
121.172 463.414 122.341 462.245 122.341 460.803 cv
122.341 459.36 121.172 458.191 119.73 458.191 cv
118.288 458.191 117.118 459.36 117.118 460.803 cv
117.118 462.245 118.288 463.414 119.73 463.414 cv
cp
f
130.282 463.414 mo
131.725 463.414 132.894 462.245 132.894 460.803 cv
132.894 459.36 131.725 458.191 130.282 458.191 cv
128.84 458.191 127.671 459.36 127.671 460.803 cv
127.671 462.245 128.84 463.414 130.282 463.414 cv
cp
f
140.835 463.414 mo
142.277 463.414 143.447 462.245 143.447 460.803 cv
143.447 459.36 142.277 458.191 140.835 458.191 cv
139.393 458.191 138.224 459.36 138.224 460.803 cv
138.224 462.245 139.393 463.414 140.835 463.414 cv
cp
f
151.388 463.414 mo
152.83 463.414 154 462.245 154 460.803 cv
154 459.36 152.83 458.191 151.388 458.191 cv
149.945 458.191 148.776 459.36 148.776 460.803 cv
148.776 462.245 149.945 463.414 151.388 463.414 cv
cp
f
161.94 463.414 mo
163.383 463.414 164.552 462.245 164.552 460.803 cv
164.552 459.36 163.383 458.191 161.94 458.191 cv
160.498 458.191 159.329 459.36 159.329 460.803 cv
159.329 462.245 160.498 463.414 161.94 463.414 cv
cp
f
172.493 463.414 mo
173.936 463.414 175.105 462.245 175.105 460.803 cv
175.105 459.36 173.936 458.191 172.493 458.191 cv
171.051 458.191 169.881 459.36 169.881 460.803 cv
169.881 462.245 171.051 463.414 172.493 463.414 cv
cp
f
183.046 463.414 mo
184.488 463.414 185.657 462.245 185.657 460.803 cv
185.657 459.36 184.488 458.191 183.046 458.191 cv
181.604 458.191 180.434 459.36 180.434 460.803 cv
180.434 462.245 181.604 463.414 183.046 463.414 cv
cp
f
246.362 463.414 mo
247.804 463.414 248.974 462.245 248.974 460.803 cv
248.974 459.36 247.804 458.191 246.362 458.191 cv
244.919 458.191 243.75 459.36 243.75 460.803 cv
243.75 462.245 244.919 463.414 246.362 463.414 cv
cp
f
256.915 463.414 mo
258.357 463.414 259.526 462.245 259.526 460.803 cv
259.526 459.36 258.357 458.191 256.915 458.191 cv
255.472 458.191 254.303 459.36 254.303 460.803 cv
254.303 462.245 255.472 463.414 256.915 463.414 cv
cp
f
267.467 463.414 mo
268.91 463.414 270.079 462.245 270.079 460.803 cv
270.079 459.36 268.91 458.191 267.467 458.191 cv
266.025 458.191 264.855 459.36 264.855 460.803 cv
264.855 462.245 266.025 463.414 267.467 463.414 cv
cp
f
278.02 463.414 mo
279.462 463.414 280.631 462.245 280.631 460.803 cv
280.631 459.36 279.462 458.191 278.02 458.191 cv
276.578 458.191 275.408 459.36 275.408 460.803 cv
275.408 462.245 276.578 463.414 278.02 463.414 cv
cp
f
288.572 463.414 mo
290.015 463.414 291.184 462.245 291.184 460.803 cv
291.184 459.36 290.015 458.191 288.572 458.191 cv
287.13 458.191 285.961 459.36 285.961 460.803 cv
285.961 462.245 287.13 463.414 288.572 463.414 cv
cp
f
299.125 463.414 mo
300.567 463.414 301.737 462.245 301.737 460.803 cv
301.737 459.36 300.567 458.191 299.125 458.191 cv
297.683 458.191 296.514 459.36 296.514 460.803 cv
296.514 462.245 297.683 463.414 299.125 463.414 cv
cp
f
309.678 463.414 mo
311.12 463.414 312.29 462.245 312.29 460.803 cv
312.29 459.36 311.12 458.191 309.678 458.191 cv
308.235 458.191 307.066 459.36 307.066 460.803 cv
307.066 462.245 308.235 463.414 309.678 463.414 cv
cp
f
320.23 463.414 mo
321.673 463.414 322.842 462.245 322.842 460.803 cv
322.842 459.36 321.673 458.191 320.23 458.191 cv
318.788 458.191 317.619 459.36 317.619 460.803 cv
317.619 462.245 318.788 463.414 320.23 463.414 cv
cp
f
330.783 463.414 mo
332.226 463.414 333.395 462.245 333.395 460.803 cv
333.395 459.36 332.226 458.191 330.783 458.191 cv
329.341 458.191 328.171 459.36 328.171 460.803 cv
328.171 462.245 329.341 463.414 330.783 463.414 cv
cp
f
341.336 463.414 mo
342.778 463.414 343.947 462.245 343.947 460.803 cv
343.947 459.36 342.778 458.191 341.336 458.191 cv
339.894 458.191 338.724 459.36 338.724 460.803 cv
338.724 462.245 339.894 463.414 341.336 463.414 cv
cp
f
351.889 463.414 mo
353.331 463.414 354.5 462.245 354.5 460.803 cv
354.5 459.36 353.331 458.191 351.889 458.191 cv
350.446 458.191 349.277 459.36 349.277 460.803 cv
349.277 462.245 350.446 463.414 351.889 463.414 cv
cp
f
362.441 463.414 mo
363.883 463.414 365.053 462.245 365.053 460.803 cv
365.053 459.36 363.883 458.191 362.441 458.191 cv
360.999 458.191 359.83 459.36 359.83 460.803 cv
359.83 462.245 360.999 463.414 362.441 463.414 cv
cp
f
372.994 463.414 mo
374.436 463.414 375.605 462.245 375.605 460.803 cv
375.605 459.36 374.436 458.191 372.994 458.191 cv
371.551 458.191 370.382 459.36 370.382 460.803 cv
370.382 462.245 371.551 463.414 372.994 463.414 cv
cp
f
383.546 463.414 mo
384.989 463.414 386.158 462.245 386.158 460.803 cv
386.158 459.36 384.989 458.191 383.546 458.191 cv
382.104 458.191 380.935 459.36 380.935 460.803 cv
380.935 462.245 382.104 463.414 383.546 463.414 cv
cp
f
394.099 463.414 mo
395.542 463.414 396.711 462.245 396.711 460.803 cv
396.711 459.36 395.542 458.191 394.099 458.191 cv
392.657 458.191 391.488 459.36 391.488 460.803 cv
391.488 462.245 392.657 463.414 394.099 463.414 cv
cp
f
404.652 463.414 mo
406.093 463.414 407.263 462.245 407.263 460.803 cv
407.263 459.36 406.093 458.191 404.652 458.191 cv
403.208 458.191 402.042 459.36 402.042 460.803 cv
402.042 462.245 403.208 463.414 404.652 463.414 cv
cp
f
457.417 463.414 mo
458.858 463.414 460.027 462.245 460.027 460.803 cv
460.027 459.36 458.858 458.191 457.417 458.191 cv
455.972 458.191 454.803 459.36 454.803 460.803 cv
454.803 462.245 455.972 463.414 457.417 463.414 cv
cp
f
467.968 463.414 mo
469.41 463.414 470.58 462.245 470.58 460.803 cv
470.58 459.36 469.41 458.191 467.968 458.191 cv
466.525 458.191 465.355 459.36 465.355 460.803 cv
465.355 462.245 466.525 463.414 467.968 463.414 cv
cp
f
478.521 463.414 mo
479.962 463.414 481.132 462.245 481.132 460.803 cv
481.132 459.36 479.962 458.191 478.521 458.191 cv
477.079 458.191 475.908 459.36 475.908 460.803 cv
475.908 462.245 477.079 463.414 478.521 463.414 cv
cp
f
489.072 463.414 mo
490.516 463.414 491.685 462.245 491.685 460.803 cv
491.685 459.36 490.516 458.191 489.072 458.191 cv
487.631 458.191 486.461 459.36 486.461 460.803 cv
486.461 462.245 487.631 463.414 489.072 463.414 cv
cp
f
499.625 463.414 mo
501.068 463.414 502.238 462.245 502.238 460.803 cv
502.238 459.36 501.068 458.191 499.625 458.191 cv
498.183 458.191 497.013 459.36 497.013 460.803 cv
497.013 462.245 498.183 463.414 499.625 463.414 cv
cp
f
510.178 463.414 mo
511.621 463.414 512.792 462.245 512.792 460.803 cv
512.792 459.36 511.621 458.191 510.178 458.191 cv
508.737 458.191 507.566 459.36 507.566 460.803 cv
507.566 462.245 508.737 463.414 510.178 463.414 cv
cp
f
520.73 463.414 mo
522.174 463.414 523.343 462.245 523.343 460.803 cv
523.343 459.36 522.174 458.191 520.73 458.191 cv
519.289 458.191 518.119 459.36 518.119 460.803 cv
518.119 462.245 519.289 463.414 520.73 463.414 cv
cp
f
531.283 463.414 mo
532.726 463.414 533.896 462.245 533.896 460.803 cv
533.896 459.36 532.726 458.191 531.283 458.191 cv
529.841 458.191 528.671 459.36 528.671 460.803 cv
528.671 462.245 529.841 463.414 531.283 463.414 cv
cp
f
541.835 463.414 mo
543.279 463.414 544.447 462.245 544.447 460.803 cv
544.447 459.36 543.279 458.191 541.835 458.191 cv
540.395 458.191 539.224 459.36 539.224 460.803 cv
539.224 462.245 540.395 463.414 541.835 463.414 cv
cp
f
109.177 473.967 mo
110.62 473.967 111.789 472.798 111.789 471.355 cv
111.789 469.913 110.62 468.744 109.177 468.744 cv
107.735 468.744 106.565 469.913 106.565 471.355 cv
106.565 472.798 107.735 473.967 109.177 473.967 cv
cp
f
119.73 473.967 mo
121.172 473.967 122.341 472.798 122.341 471.355 cv
122.341 469.913 121.172 468.744 119.73 468.744 cv
118.288 468.744 117.118 469.913 117.118 471.355 cv
117.118 472.798 118.288 473.967 119.73 473.967 cv
cp
f
130.282 473.967 mo
131.725 473.967 132.894 472.798 132.894 471.355 cv
132.894 469.913 131.725 468.744 130.282 468.744 cv
128.84 468.744 127.671 469.913 127.671 471.355 cv
127.671 472.798 128.84 473.967 130.282 473.967 cv
cp
f
140.835 473.967 mo
142.277 473.967 143.447 472.798 143.447 471.355 cv
143.447 469.913 142.277 468.744 140.835 468.744 cv
139.393 468.744 138.224 469.913 138.224 471.355 cv
138.224 472.798 139.393 473.967 140.835 473.967 cv
cp
f
151.388 473.967 mo
152.83 473.967 154 472.798 154 471.355 cv
154 469.913 152.83 468.744 151.388 468.744 cv
149.945 468.744 148.776 469.913 148.776 471.355 cv
148.776 472.798 149.945 473.967 151.388 473.967 cv
cp
f
161.94 473.967 mo
163.383 473.967 164.552 472.798 164.552 471.355 cv
164.552 469.913 163.383 468.744 161.94 468.744 cv
160.498 468.744 159.329 469.913 159.329 471.355 cv
159.329 472.798 160.498 473.967 161.94 473.967 cv
cp
f
246.362 473.967 mo
247.804 473.967 248.974 472.798 248.974 471.355 cv
248.974 469.913 247.804 468.744 246.362 468.744 cv
244.919 468.744 243.75 469.913 243.75 471.355 cv
243.75 472.798 244.919 473.967 246.362 473.967 cv
cp
f
256.915 473.967 mo
258.357 473.967 259.526 472.798 259.526 471.355 cv
259.526 469.913 258.357 468.744 256.915 468.744 cv
255.472 468.744 254.303 469.913 254.303 471.355 cv
254.303 472.798 255.472 473.967 256.915 473.967 cv
cp
f
267.467 473.967 mo
268.91 473.967 270.079 472.798 270.079 471.355 cv
270.079 469.913 268.91 468.744 267.467 468.744 cv
266.025 468.744 264.855 469.913 264.855 471.355 cv
264.855 472.798 266.025 473.967 267.467 473.967 cv
cp
f
278.02 473.967 mo
279.462 473.967 280.631 472.798 280.631 471.355 cv
280.631 469.913 279.462 468.744 278.02 468.744 cv
276.578 468.744 275.408 469.913 275.408 471.355 cv
275.408 472.798 276.578 473.967 278.02 473.967 cv
cp
f
288.572 473.967 mo
290.015 473.967 291.184 472.798 291.184 471.355 cv
291.184 469.913 290.015 468.744 288.572 468.744 cv
287.13 468.744 285.961 469.913 285.961 471.355 cv
285.961 472.798 287.13 473.967 288.572 473.967 cv
cp
f
299.125 473.967 mo
300.567 473.967 301.737 472.798 301.737 471.355 cv
301.737 469.913 300.567 468.744 299.125 468.744 cv
297.683 468.744 296.514 469.913 296.514 471.355 cv
296.514 472.798 297.683 473.967 299.125 473.967 cv
cp
f
309.678 473.967 mo
311.12 473.967 312.29 472.798 312.29 471.355 cv
312.29 469.913 311.12 468.744 309.678 468.744 cv
308.235 468.744 307.066 469.913 307.066 471.355 cv
307.066 472.798 308.235 473.967 309.678 473.967 cv
cp
f
320.23 473.967 mo
321.673 473.967 322.842 472.798 322.842 471.355 cv
322.842 469.913 321.673 468.744 320.23 468.744 cv
318.788 468.744 317.619 469.913 317.619 471.355 cv
317.619 472.798 318.788 473.967 320.23 473.967 cv
cp
f
330.783 473.967 mo
332.226 473.967 333.395 472.798 333.395 471.355 cv
333.395 469.913 332.226 468.744 330.783 468.744 cv
329.341 468.744 328.171 469.913 328.171 471.355 cv
328.171 472.798 329.341 473.967 330.783 473.967 cv
cp
f
341.336 473.967 mo
342.778 473.967 343.947 472.798 343.947 471.355 cv
343.947 469.913 342.778 468.744 341.336 468.744 cv
339.894 468.744 338.724 469.913 338.724 471.355 cv
338.724 472.798 339.894 473.967 341.336 473.967 cv
cp
f
351.889 473.967 mo
353.331 473.967 354.5 472.798 354.5 471.355 cv
354.5 469.913 353.331 468.744 351.889 468.744 cv
350.446 468.744 349.277 469.913 349.277 471.355 cv
349.277 472.798 350.446 473.967 351.889 473.967 cv
cp
f
362.441 473.967 mo
363.883 473.967 365.053 472.798 365.053 471.355 cv
365.053 469.913 363.883 468.744 362.441 468.744 cv
360.999 468.744 359.83 469.913 359.83 471.355 cv
359.83 472.798 360.999 473.967 362.441 473.967 cv
cp
f
372.994 473.967 mo
374.436 473.967 375.605 472.798 375.605 471.355 cv
375.605 469.913 374.436 468.744 372.994 468.744 cv
371.551 468.744 370.382 469.913 370.382 471.355 cv
370.382 472.798 371.551 473.967 372.994 473.967 cv
cp
f
383.546 473.967 mo
384.989 473.967 386.158 472.798 386.158 471.355 cv
386.158 469.913 384.989 468.744 383.546 468.744 cv
382.104 468.744 380.935 469.913 380.935 471.355 cv
380.935 472.798 382.104 473.967 383.546 473.967 cv
cp
f
394.099 473.967 mo
395.542 473.967 396.711 472.798 396.711 471.355 cv
396.711 469.913 395.542 468.744 394.099 468.744 cv
392.657 468.744 391.488 469.913 391.488 471.355 cv
391.488 472.798 392.657 473.967 394.099 473.967 cv
cp
f
467.968 473.967 mo
469.41 473.967 470.58 472.798 470.58 471.355 cv
470.58 469.913 469.41 468.744 467.968 468.744 cv
466.525 468.744 465.355 469.913 465.355 471.355 cv
465.355 472.798 466.525 473.967 467.968 473.967 cv
cp
f
478.521 473.967 mo
479.962 473.967 481.132 472.798 481.132 471.355 cv
481.132 469.913 479.962 468.744 478.521 468.744 cv
477.079 468.744 475.908 469.913 475.908 471.355 cv
475.908 472.798 477.079 473.967 478.521 473.967 cv
cp
f
489.072 473.967 mo
490.516 473.967 491.685 472.798 491.685 471.355 cv
491.685 469.913 490.516 468.744 489.072 468.744 cv
487.631 468.744 486.461 469.913 486.461 471.355 cv
486.461 472.798 487.631 473.967 489.072 473.967 cv
cp
f
499.625 473.967 mo
501.068 473.967 502.238 472.798 502.238 471.355 cv
502.238 469.913 501.068 468.744 499.625 468.744 cv
498.183 468.744 497.013 469.913 497.013 471.355 cv
497.013 472.798 498.183 473.967 499.625 473.967 cv
cp
f
510.178 473.967 mo
511.621 473.967 512.792 472.798 512.792 471.355 cv
512.792 469.913 511.621 468.744 510.178 468.744 cv
508.737 468.744 507.566 469.913 507.566 471.355 cv
507.566 472.798 508.737 473.967 510.178 473.967 cv
cp
f
520.73 473.967 mo
522.174 473.967 523.343 472.798 523.343 471.355 cv
523.343 469.913 522.174 468.744 520.73 468.744 cv
519.289 468.744 518.119 469.913 518.119 471.355 cv
518.119 472.798 519.289 473.967 520.73 473.967 cv
cp
f
531.283 473.967 mo
532.726 473.967 533.896 472.798 533.896 471.355 cv
533.896 469.913 532.726 468.744 531.283 468.744 cv
529.841 468.744 528.671 469.913 528.671 471.355 cv
528.671 472.798 529.841 473.967 531.283 473.967 cv
cp
f
256.915 484.52 mo
258.357 484.52 259.526 483.351 259.526 481.908 cv
259.526 480.466 258.357 479.297 256.915 479.297 cv
255.472 479.297 254.303 480.466 254.303 481.908 cv
254.303 483.351 255.472 484.52 256.915 484.52 cv
cp
f
267.467 484.52 mo
268.91 484.52 270.079 483.351 270.079 481.908 cv
270.079 480.466 268.91 479.297 267.467 479.297 cv
266.025 479.297 264.855 480.466 264.855 481.908 cv
264.855 483.351 266.025 484.52 267.467 484.52 cv
cp
f
278.02 484.52 mo
279.462 484.52 280.631 483.351 280.631 481.908 cv
280.631 480.466 279.462 479.297 278.02 479.297 cv
276.578 479.297 275.408 480.466 275.408 481.908 cv
275.408 483.351 276.578 484.52 278.02 484.52 cv
cp
f
288.572 484.52 mo
290.015 484.52 291.184 483.351 291.184 481.908 cv
291.184 480.466 290.015 479.297 288.572 479.297 cv
287.13 479.297 285.961 480.466 285.961 481.908 cv
285.961 483.351 287.13 484.52 288.572 484.52 cv
cp
f
299.125 484.52 mo
300.567 484.52 301.737 483.351 301.737 481.908 cv
301.737 480.466 300.567 479.297 299.125 479.297 cv
297.683 479.297 296.514 480.466 296.514 481.908 cv
296.514 483.351 297.683 484.52 299.125 484.52 cv
cp
f
309.678 484.52 mo
311.12 484.52 312.29 483.351 312.29 481.908 cv
312.29 480.466 311.12 479.297 309.678 479.297 cv
308.235 479.297 307.066 480.466 307.066 481.908 cv
307.066 483.351 308.235 484.52 309.678 484.52 cv
cp
f
320.23 484.52 mo
321.673 484.52 322.842 483.351 322.842 481.908 cv
322.842 480.466 321.673 479.297 320.23 479.297 cv
318.788 479.297 317.619 480.466 317.619 481.908 cv
317.619 483.351 318.788 484.52 320.23 484.52 cv
cp
f
330.783 484.52 mo
332.226 484.52 333.395 483.351 333.395 481.908 cv
333.395 480.466 332.226 479.297 330.783 479.297 cv
329.341 479.297 328.171 480.466 328.171 481.908 cv
328.171 483.351 329.341 484.52 330.783 484.52 cv
cp
f
341.336 484.52 mo
342.778 484.52 343.947 483.351 343.947 481.908 cv
343.947 480.466 342.778 479.297 341.336 479.297 cv
339.894 479.297 338.724 480.466 338.724 481.908 cv
338.724 483.351 339.894 484.52 341.336 484.52 cv
cp
f
351.889 484.52 mo
353.331 484.52 354.5 483.351 354.5 481.908 cv
354.5 480.466 353.331 479.297 351.889 479.297 cv
350.446 479.297 349.277 480.466 349.277 481.908 cv
349.277 483.351 350.446 484.52 351.889 484.52 cv
cp
f
362.441 484.52 mo
363.883 484.52 365.053 483.351 365.053 481.908 cv
365.053 480.466 363.883 479.297 362.441 479.297 cv
360.999 479.297 359.83 480.466 359.83 481.908 cv
359.83 483.351 360.999 484.52 362.441 484.52 cv
cp
f
372.994 484.52 mo
374.436 484.52 375.605 483.351 375.605 481.908 cv
375.605 480.466 374.436 479.297 372.994 479.297 cv
371.551 479.297 370.382 480.466 370.382 481.908 cv
370.382 483.351 371.551 484.52 372.994 484.52 cv
cp
f
383.546 484.52 mo
384.989 484.52 386.158 483.351 386.158 481.908 cv
386.158 480.466 384.989 479.297 383.546 479.297 cv
382.104 479.297 380.935 480.466 380.935 481.908 cv
380.935 483.351 382.104 484.52 383.546 484.52 cv
cp
f
394.099 484.52 mo
395.542 484.52 396.711 483.351 396.711 481.908 cv
396.711 480.466 395.542 479.297 394.099 479.297 cv
392.657 479.297 391.488 480.466 391.488 481.908 cv
391.488 483.351 392.657 484.52 394.099 484.52 cv
cp
f
499.625 484.52 mo
501.068 484.52 502.238 483.351 502.238 481.908 cv
502.238 480.466 501.068 479.297 499.625 479.297 cv
498.183 479.297 497.013 480.466 497.013 481.908 cv
497.013 483.351 498.183 484.52 499.625 484.52 cv
cp
f
510.178 484.52 mo
511.621 484.52 512.792 483.351 512.792 481.908 cv
512.792 480.466 511.621 479.297 510.178 479.297 cv
508.737 479.297 507.566 480.466 507.566 481.908 cv
507.566 483.351 508.737 484.52 510.178 484.52 cv
cp
f
520.73 484.52 mo
522.174 484.52 523.343 483.351 523.343 481.908 cv
523.343 480.466 522.174 479.297 520.73 479.297 cv
519.289 479.297 518.119 480.466 518.119 481.908 cv
518.119 483.351 519.289 484.52 520.73 484.52 cv
cp
f
531.283 484.52 mo
532.726 484.52 533.896 483.351 533.896 481.908 cv
533.896 480.466 532.726 479.297 531.283 479.297 cv
529.841 479.297 528.671 480.466 528.671 481.908 cv
528.671 483.351 529.841 484.52 531.283 484.52 cv
cp
f
267.467 495.072 mo
268.91 495.072 270.079 493.903 270.079 492.461 cv
270.079 491.019 268.91 489.849 267.467 489.849 cv
266.025 489.849 264.855 491.019 264.855 492.461 cv
264.855 493.903 266.025 495.072 267.467 495.072 cv
cp
f
278.02 495.072 mo
279.462 495.072 280.631 493.903 280.631 492.461 cv
280.631 491.019 279.462 489.849 278.02 489.849 cv
276.578 489.849 275.408 491.019 275.408 492.461 cv
275.408 493.903 276.578 495.072 278.02 495.072 cv
cp
f
288.572 495.072 mo
290.015 495.072 291.184 493.903 291.184 492.461 cv
291.184 491.019 290.015 489.849 288.572 489.849 cv
287.13 489.849 285.961 491.019 285.961 492.461 cv
285.961 493.903 287.13 495.072 288.572 495.072 cv
cp
f
299.125 495.072 mo
300.567 495.072 301.737 493.903 301.737 492.461 cv
301.737 491.019 300.567 489.849 299.125 489.849 cv
297.683 489.849 296.514 491.019 296.514 492.461 cv
296.514 493.903 297.683 495.072 299.125 495.072 cv
cp
f
309.678 495.072 mo
311.12 495.072 312.29 493.903 312.29 492.461 cv
312.29 491.019 311.12 489.849 309.678 489.849 cv
308.235 489.849 307.066 491.019 307.066 492.461 cv
307.066 493.903 308.235 495.072 309.678 495.072 cv
cp
f
320.23 495.072 mo
321.673 495.072 322.842 493.903 322.842 492.461 cv
322.842 491.019 321.673 489.849 320.23 489.849 cv
318.788 489.849 317.619 491.019 317.619 492.461 cv
317.619 493.903 318.788 495.072 320.23 495.072 cv
cp
f
330.783 495.072 mo
332.226 495.072 333.395 493.903 333.395 492.461 cv
333.395 491.019 332.226 489.849 330.783 489.849 cv
329.341 489.849 328.171 491.019 328.171 492.461 cv
328.171 493.903 329.341 495.072 330.783 495.072 cv
cp
f
383.546 495.072 mo
384.989 495.072 386.158 493.903 386.158 492.461 cv
386.158 491.019 384.989 489.849 383.546 489.849 cv
382.104 489.849 380.935 491.019 380.935 492.461 cv
380.935 493.903 382.104 495.072 383.546 495.072 cv
cp
f
499.625 495.072 mo
501.068 495.072 502.238 493.903 502.238 492.461 cv
502.238 491.019 501.068 489.849 499.625 489.849 cv
498.183 489.849 497.013 491.019 497.013 492.461 cv
497.013 493.903 498.183 495.072 499.625 495.072 cv
cp
f
510.178 495.072 mo
511.621 495.072 512.792 493.903 512.792 492.461 cv
512.792 491.019 511.621 489.849 510.178 489.849 cv
508.737 489.849 507.566 491.019 507.566 492.461 cv
507.566 493.903 508.737 495.072 510.178 495.072 cv
cp
f
520.73 495.072 mo
522.174 495.072 523.343 493.903 523.343 492.461 cv
523.343 491.019 522.174 489.849 520.73 489.849 cv
519.289 489.849 518.119 491.019 518.119 492.461 cv
518.119 493.903 519.289 495.072 520.73 495.072 cv
cp
f
267.467 505.625 mo
268.91 505.625 270.079 504.456 270.079 503.014 cv
270.079 501.571 268.91 500.401 267.467 500.401 cv
266.025 500.401 264.855 501.571 264.855 503.014 cv
264.855 504.456 266.025 505.625 267.467 505.625 cv
cp
f
278.02 505.625 mo
279.462 505.625 280.631 504.456 280.631 503.014 cv
280.631 501.571 279.462 500.401 278.02 500.401 cv
276.578 500.401 275.408 501.571 275.408 503.014 cv
275.408 504.456 276.578 505.625 278.02 505.625 cv
cp
f
288.572 505.625 mo
290.015 505.625 291.184 504.456 291.184 503.014 cv
291.184 501.571 290.015 500.401 288.572 500.401 cv
287.13 500.401 285.961 501.571 285.961 503.014 cv
285.961 504.456 287.13 505.625 288.572 505.625 cv
cp
f
299.125 505.625 mo
300.567 505.625 301.737 504.456 301.737 503.014 cv
301.737 501.571 300.567 500.401 299.125 500.401 cv
297.683 500.401 296.514 501.571 296.514 503.014 cv
296.514 504.456 297.683 505.625 299.125 505.625 cv
cp
f
309.678 505.625 mo
311.12 505.625 312.29 504.456 312.29 503.014 cv
312.29 501.571 311.12 500.401 309.678 500.401 cv
308.235 500.401 307.066 501.571 307.066 503.014 cv
307.066 504.456 308.235 505.625 309.678 505.625 cv
cp
f
510.178 505.625 mo
511.621 505.625 512.792 504.456 512.792 503.014 cv
512.792 501.571 511.621 500.401 510.178 500.401 cv
508.737 500.401 507.566 501.571 507.566 503.014 cv
507.566 504.456 508.737 505.625 510.178 505.625 cv
cp
f
288.572 516.178 mo
290.015 516.178 291.184 515.009 291.184 513.566 cv
291.184 512.124 290.015 510.954 288.572 510.954 cv
287.13 510.954 285.961 512.124 285.961 513.566 cv
285.961 515.009 287.13 516.178 288.572 516.178 cv
cp
f
299.125 516.178 mo
300.567 516.178 301.737 515.009 301.737 513.566 cv
301.737 512.124 300.567 510.954 299.125 510.954 cv
297.683 510.954 296.514 512.124 296.514 513.566 cv
296.514 515.009 297.683 516.178 299.125 516.178 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Rixwan) ()
%%Title: (dotted-map-and-flag-comp_Switzerland.eps)
%%CreationDate: 4/25/2018 12:24 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KCKh_1[e9O.T;V\k\XTOnWh=6E&ja=#BJaI5mKT@a+p-_dmdu;+gY]E=C<\c=$Dd%V1uRN_F7q>@<HHG?f6sbeEUR5=4_W@b
%Xg;L6c]u_[Y2qF^NhL):f?#Q_g@)f4]D&tCn+G\ZN,6d]?!14O\p6(Z*jDtOcF)_34sD(#[;1CfYLVOr[VK3Q\']*%]=jKR`m8BM
%ZVs"#T2[W8]k4VL8#Fq?eh4lsKe;o+dV*rlG5&;rcWF>p#BRrb_f'k\.:GL@mGmp1etmm,]RF3U-Z&Z'DsY,dM*;*5[7sBbd^#2+
%>#*BC6Sf-<r8DD%Q-V"/h"T)4]mdHEDmW`@+%eVK/M$=;i,u'9#K"q^7Ml)-&0GLVhJ%,Zlj!Q&\<Qcps"GZl/7s&e'']3f=W,J6
%=9K99-hs%r&>9$/XNUY*@`cCGhaSrZaTm:gp.Ebg&JVIV9\pI*)rUmF_LY)jr#fQs&&$.]ZeG0O$8u-:X8A0M2tUomeo)1!%uSO#
%+4Bh`@EN3BjKu"fjkYm[fHDM)ZV3N0KU[\iUZ)0VP'QIqlWuNOrBduCd.g8`ZL,5+f6,>sUM8\"qh(ctIFDs'763"BF+XhRC"L%q
%Lk0DBRT7*c!.4P!Wl/>RHfjuibAK6DZ@5iibH&J@G4ha\S#R&]g$O$d_tI;!g1A1,Z8kS$B6$IB1\8&V5i$H9Nao)X1c5S*%4g2]
%O>N^PfX@lp4jf".]8a-dCLu1]?-<h:G'$CM,h^O']8\k\F5+bq_12:9Z4?f)X8Xa\?DO=QpKB%0\oGBf"$K,smMs:jb,tM0qbgHg
%:]@[K\jK-_U1X9Rr076?IjRht3[$'s3.BBn%l@J<nF+-*$9iNkpR23SiF]P^k\RY%gV<cs:oLj!]ZaT`eo,b$<S'%=-f;j,*bH2c
%hOHUm<boR,pc"J[<Z@Tb@gi^9>qZk=.\?>5.K9@Hr;UK&(VNt13c#p(bH2jmZeYZ"KN)1KbYbe&8Rm.O=`%0N)?0fE^"rH,5,jF(
%Z$"&aR2)j&,Eh+PjHk_6\=rtNPfd"6IkJ`TY>t%Rp#)IIhubZmab-4P-gbN@G=_uNTtaMqfCukYh,Y)!GL/Ft*4FTr:..o$r.ll6
%gCKmD)CJL/Qilm;oGZVc2Of]4DRFQBW"$'tjE#>uin7;5W9.`@R)eD\j=L,F2#1".W*F7s_/D`N^9Yu!+4Yi->RW85h.jFXNTlA,
%H;>J30a22"#*$@;p!peCaG"!`i4Rd+YUiq.P&/`4()$gG!6`R#s/'Fd/Y!qA]@D3pbV(K7Kf?,7ohpbHB-EMEKUlPMR,*]pZ2XW=
%++O<-9pj__Mg@[5F[ro`;pXbinK1-MF\OB%-*=*\1fsUqd;7(U9_"afQI?7:Hn><\pYVPH<qrYOplBfC6i8>.[,jM(T9g>7`Y^5F
%d#,1bhMUG7.ViV/Cm9#&I+^&TA\7;nh/]2o/8pbGjg)+m=,]bSP-:5fX(#/#MH_N/MNs/nWD]lu<&dt4&B3($)/!HlQ$h`NEO"i]
%Ql`Da1ehG"R;iX3;(OQBP/RnB/qTHA;_2o-;f-47_F)q,%hIN7M@E!]XtLmGhjG5LYBN(_YJe$"s1?dZa^nkfqfBtOX-nZ+0:OQ`
%iNh[!h8[R0mtpjZ8JE^t]@D.og3KGrms6S#KTUPm,oSXh.0$@J;t_d4iI].l]n`#r#Jt0?/6_7-[5eLcrR%S<cUS\5S]<B0!XQt$
%9f8>[YAnaB:VfL8S.qO&^HdKYn9AiKIRE]c.k(`n8l(=U@I(GMm$q.<p$qYmob=K<Th1A<e,Ffni:(g!.?&"u8E!A@@pGPQ2CA,&
%h%R'VDq2MjR0]B&Rg_&9&OOK^*j*9?DQR:EiM@DNYjeGJa\!IIX6]E_bqrqD.QAk<XnG&q+dUI7.J<UZncUL<<CKMUCe2Z_k'1>_
%eXfk,HJ\t%kG9%@A*$W!2PV,Q="tOVms9cL"q:k:l?\iWmaPp0)G21eYUhZ2[O/K!j(Pe]?FMD-YUR)$d7Fp2BFh[3D_jAK85hsV
%C1uW*`S]hPr/H2`mdc:1nCPG8"*e)A:,AsBXk_EgR;_2aF"<TLDrp+c\S2lo:V0W3;/*aZ2gRDo1RFhSbr9_8c.ju-bb[:tS+#J$
%Hb&rYDSDI,n)aQ2p*Y?Rp2[.RbfjBgluJ!?&$L7t?EL^:\.R=nbJk"DmA(tHZhHPt"QOF;s4upN>.6Q+I_Fh@B_VYm<%DW54t0ec
%c,$?Hl5snf-FjK9X:BQi7^Z59c#1,Ebpf)c4j=gGTAUiZL-qCQYl<gmGE8^F^"TB^4g0?(Dj]Lt^?]j0a^3hgX%0-(Xngl&q;Zkp
%^*PP\r+r5j)[snaCoNtW8]Rk@Rapgq]@H4K>A5!]nr\e!e'\m\s4M+q]PA,?7j^YYKhe@$kakgjhEe94Y!kg;cc>[-6piksh8-$:
%ocFV+dl*YP9pbXInbMr174S;*i8.=,7q:8^^h,&3s6^s'=044Ng5T-_45HUWd]X&=+IjCZ_f`jj/pa[G/hk$XR+dC.5"/4]4M'B$
%a0^g+.AhfW;7d(7$s@8$G;g=PL9?F@Na-9XjO/"g9o_T0[P[7l.`*>n"2iUsb_FYcUORaWp!_\Fcd]&k$h)7dFS=5Y?a;AX*</n,
%Vep=bc:RK+BKC=Lm[5FY3KpM7oH!=2f#KG'@]o:t\(60->idc!c(n?'s"iQbfP%a``NJD&Q/WQqqLqVB)WB2<ihkXQZZSrf2T9mk
%j\&_\BtB`_32m7e2rn0QDrfdAVF\s0E1!&sT;8HICCK8;?1kY<STFT.a:q#8'Q-;#_q<HL@lIic\k1eM9CpE)q;Cr'XJKic*]DOb
%iMO;8VmnOOSc8R@IpZfN*INTAYW)'0nYo^C[.j5-qTkT,G5k.&7I[C;?T7npr@+c3T7=>"C0TYu9KY-1Jq?=H,MJ.KC9-GR&%ne>
%CCFoPC_Mk'Wi>B`353'i^Z6W'i\sK%KS*XcD^S6RCC+\ZL$9BRh2%oR8W%+;1WtG.A7fD].5cFBB!pdC?g67CG%Pd;\Z?-Z.IM.f
%@].,YVj0jOWCQq-:Y>\'blUl[SE_.Qoj_6a1UYmRj8S/l4AKpU$\$IiW^1+*a1##j1$uY!c*s$PnpMT/:3C0Hf;Bb_Dtj*BlYWOK
%ohq]IAi#tlX?!fu9i7P]G+(9cH`BSrdr,%<9jRP5-H2b1DP_#IeQQg/3On'(*XQ96M(Mh"/MQ]sd5suY6&"DIelu$KWMb"B;G_++
%1n'Di=&&4-Kj(lePJ;1.Je&Zg'WGj=O6Y%*ocp?\I^PYcZ40E$MGi't\)&RRKR1<TIoJ;MLd4BV`@AhV%]Lo?YC$uCq*iJ&FD"Hf
%2(hgedn@G*JfF2g[Uj*S7%&oA>4!Xc;::PoQ/de5&nRNWB2c4>C%(A%?F;\4;O#m?MD?tcPlKl)"/iRFcH=Wmf:i\QQammn^Z(Sh
%CG6u:PZ3:PoP7<A`8[\<PI)`PaNVeC1Y8?pfj8<M!9Ig-;,[(cW?:/<Oqo>QR9:EfAmL=XW\10^GMH.L9'ms>;::PoQ!XK/hU9WB
%VC#;K?=VKPA6mLSbO\U\]]M(+HS;:aSVm3=;+r`s)tj3I_U`_KIj`J1"ATf2/K&7tN95'TRJ705DVU:+?h5j*o5X.Yj-hhIf2ADP
%5-E/N[J@<j'B<9,/!0RIm:Is%4B\ZT;/JLsrGRa3o>TFC>-,t=[J?cp5<Z%*NR71um^K)G,q2a]:Tn;Al2kq]NNV/um!1N^Ob.j;
%RWkMtRk_=0R6n\*OPWd0iIeG">)iL,r5R2lj%lkhf<"s6T"oOkVl_Op^!$,jn&`o0b?OUt^1q=!h%]mkA]4VNMSI.1?POYnDNNk$
%raM+sHm\c#'Klnl)0dr0Y9Vqa17lYdbp`0BU\t"j`iYp5e^pNhKOLWUpJ)[0d6A?dBoX4;g+T9@1na2'G9GL_j3+e]NGd<cqY^X<
%h9"l%;uP)<b_Z&CdJ7.6n^#2i`RKA^H/q4JX1(VKHd&jXcaEIXVqi!oJ_e/@EU"X+B9O;@2AEck*!K4[p0EV<9>\i5KdO5Q9u/!t
%i,pcjYq$9=;,X7sLYN"C3Dsf5Fgi1GOImMJCT`VoISQtf)u]A$YFfEaT;fBkHBZKFc&od)jbl',P+9LLLhkT/b_Ui4ht3Dqs3C(_
%Vt9n3!\YUb[^LRYmXP1q.;s_GD)GlPS_s7gmsO;B^(DFX?c/8gq+ct#r6BM8k<%r*T)"rG-oUZYhhfaKhtd7Q]8.07B$`[U;t!$+
%GA0R):MbHJ[`bJC'e)9p<^490Zi.phC<acOH!_7fY/qK;VI13i@#D"ehDdY=oXp0,9.WY=Bnj:='2q*g:&@U'k48dO8uW]Q:WR50
%1ArS2_.^B*f(H],Wp"fdWn<:fcJ#<`)XXER?gW14eTSFU)L5O@5<>8USc+.#DZ3#/o:rYfdFga%I4:JloCK<aq:RD@aIO#hDUlK?
%Q\5:9?g<QV3)susD9Y[=a(pQ^V*$tpZ4fF!.5h$ohmOL\-E9ch"WNHgE:B=@AtPfcoK$;QX;JS$fVKr;RG7iq4i-]]*O4P:(.!C[
%WX6u1WLqhjh;H2U)fg>%qS>S7q_;r?lA[iL$'/5@K9u'A`]ns@+2#f.?KMJGo7NAQUuhn8o7ND*_9;c7AUa.>D]cVcDNqXk3hNB3
%5WT00:G[ENFORs%HfJEgENLhhr4la(,L^JDCa.+s%]929'5:cn0^UN_8Aem8ZAE9.U.tZhG[k);nI'ih@mXu(ra)uend]G!3DT*p
%2XQ^gr(TlVa`0YZP5,5@r=d>tb`23Q0\rfh0O:G[kAO^r^O9foc1HMJ4[fV=eU%+Rq2a%\Zu>'(GjElW>PV4(,aeD2Z`!SlaEi_N
%.eO0DWbJ<g0PVYbE;4M.]>rE^?L?4jT%B=BU$L6-%`u'.kBD?7s,25S^Jha'F#,Le202]G/:5)u]5]nh4g3Z\ha7?Ve5Jrd_K(j/
%n+9j'1?Vt))&*gUf_#,,[X8"??h$2i2Tr\"U'[]"_bY4XT8l=.7JreLF,[*N$!?e?N#C?ubksJUEs']BdVtSG@nc8bGLlWgr#B3q
%N\PB.1I&pIT4?*d3QD*E?FaE;V7=,$pWTPkC9:i[^1oUTkfnbC`o_ot:P;X5?WQblmH^$@K?IOtGs>3?(]t.AXCb?M:!Lo:Jm7Vp
%I\U6hFe0O4&s22b)pM=s'e)9pE`tB?bFq\24g3<,^(7kW/^611<dpKAiCtEfDq']"ZttV,rTL`>9O-s6mrG>^p19]hn;C"YAA"&n
%5aoGHBG@*7H\6dh&:G5L)jFsZ0RmrdkXIRZY7:>.#=!urm`D+NRaEZ.$I7OX14m^1^V6"KRkQ'W[Fb;=fDM:`I-].eRj@c$7:n1I
%K'hu**+JLRGWb8\kHcH19%+'D>k4/7_T`jDouAZ-B'hW&Kn*as%cV%Gc&^jsjX=I4:X7rI\NZSQjV%1SHnY5dO*C3OgjD%>hp'-n
%b]e..rGF7,KKnA=9a?BA]plWbnurf]<g`@=k52\r\=ZFA!pA=Kq0$YiSXXQ\P+?0uSP-3i12kTa/esfMG&H$BF%>V@rN'3t1\a`D
%?>`o\!P>ma,]<=)m\]qr6&MN2r.PQChpA4t!r\)U%,B(A=(;/XbkZT3B(3JH'-qdC#-WO>"W<LaN,FM!Fmt%$.jrSVm:%pd5j_=S
%f'*-=8ThDkli1du3Md5/9rd$Gr*AEPksm2ubXsgoaG)X;^$+pu-Y@hK3NX<6^,hY>W7LQI\[c^d`jXS"]t>'5M;FnP>-3&T[;*:<
%5c"1NRTf"6Sk;X+;L26Br]!^H--9co6g)WoNJ^7ZrkK6">52m:)srsklgec`XRR\#)q]X.,PCNmcHNqcrYL6+pkqo>>`/?MqH)]t
%OQnH[8kuBqXVC5Xns\QF.?D*7m%c'*6hLT=an)R!:Sie1.W;5sOBq^JJbXl5FuU5^jD$<dr2G,Vp)4TXnr\d2%oW%4'lEcm::oUn
%M]b5>.=sL$3I]EnXuBm*GHG51r`(V`T"741^*oG,7F?KWoWJL?&<6uO]dT<WPc+HGr`ZYRHk)\hG5oGHdD`%>=;eEkUmbABanm:,
%&9]eE&M+BH;6T2?E6(a4LJdo*#`&?=32Ae5SGlZrg26K.0>1=L;_V.Vj%U112]M_/C1H>8b^=H$iW3oM-c\%Wr3T7[BfO<aa!k65
%cR6e:Qr)pdj6Y*OZZq'as09CS?1e&`Z"%tBj-N4iP:bbu^;K,GrMoXPr2mH5mspfp=l#'d1"#n^ZdV+$?WMlk'JI[tM(r8]B]4Gq
%rC+eP[f2n5HC66B$U`q':Kj7Il/!/4XdS&!2;?rXX8:Ol%hgm;F`^PhnaYq[&N@fq2"U1W=AH+<Rei@]/Dl,iAGj#;VMW[QrK"Z'
%43?>D__7GQ44Q+hG9o1C@X!h)kL:"KngZr6\AM\I)Wr&Z;)/5r1\FI::\-*s1V'*sMG!DU_HH1n1V]TsB`n(@;m0D>F=2>40l8f'
%YF_Phh3g6n1bpL4AUM@5diL_C8l'[gW=2t<rL"WpDGh_&g)2J`e!o%Q]U;L*RHZY[0Iomt*9(mVjS/!O]@BsN1sI[&9OXF*[P!&Y
%l7q*&c^@m*#H_mL/*ZlWa0=:f-#\KLF2#Qf]Bs_nZ2?Hlb?kt"21Gbn?=?LYNm"Ocr>:]YR1_Q0eSaa\/,lSSQ:&=KSMaUGam[!X
%lMU$^gu,M*[soN-<S\;tj^kLk8'Cq!Cb6$K<kFVOFEum?8qcZBV1Zd!Vs.%r/[Hu-lV.;E;W#.a.KB'-r:NclIq3XQZ]k4[=j,<E
%(E`&M7GlXL0jeWG;o([,'aruq^oO3QIi]\aOoWW(]W4Xm]#ra(Ar+O6QL.jNcMp6f%'`%C\sdNu<Qp/41!iEHn1uS0"7eLeK(c3=
%YM]'U)LEjrj'MMj0:qY*]Dh&oaHE1M^LZK$+8l,m?>Wf1(68;/&VV=)buWB0=0:%+rm$/n:UJ?CpqPf%/UVrLa@W+*>d*s@$a,Wc
%P,sM5aPZ>9U8Ri0*rNZ5BfDlfs+``sL5tg9#$kuq#+&f0?`Nfg6LGjY<e,#3nt2'?8,t>H%Jb8@cn>aTi;[/Pq3SaQ)PcaA?TH0`
%4'oGSl5fo'G'g9"-Wj5JIP>r_9%!:*s.&maM#i)'1.7@B[VH]9fQRMpOf5!I;aKoKd?;6X2dQ\<b)/)ui:UIQCf1h`ir<Vcpub5Z
%EZ&re3*e!Pnq8>icU_!`'5n0.*u%b)U`U@_g$*2>P%SXYlaJOF@/0Vq9m!45Q-2EQLPgPJ^8:fFrT7M#HKi2)k@SkuhWZ+\d(X.#
%,k!T0[@8t2gTI#g?.[:_hY4%p.qkjWEF(j@rd!ABdrR?_/@0H5eE[>?^XYDkDTe%`p4@QG2jWE)<O<jecY;@7CIU3p]'`[,@ti>s
%'N;kA$pDRQq^OcWmCl\7CjW)Yh/;7hr)oj<9_+mV=]+r]AT0cts1\,I/1JM22\g=;HMqSaXL8%]@,-5Obaj')@$7P76"qF86+5G<
%]Xhp;Do$[mX5tm4^/M/cfga=O/uu[D37dE&qf/^kCo@PTX0,Om1pS9j&#!1=g#^9_>FE@$hp1RiH[W*PpreS"/SsZt7a]Ca[)D+=
%4m6P(]'VfHlEZCU]34NJ)6l6p\&c\>DPgA"Ghl&sEB.^<3g3&D=em]hX?4t8r-kefgSg%iIsJ;"-OWterKDE4>L2esamU7>7c&)R
%(<RI<3i\OOA^@q/26jE?]6$MNR:a_a>u\i]`g4R\`YR\RF=ZP8W2M`dgo.Z1<-nk4HpUj$FhOBurS_;t]g)C^EkTl(Shumqrm*ts
%nr(s7UY#t`3gkl(d_=<Gp$:AsBAb%f3f"2ka6T9p"8&'KB&=8]B)jM-o"a[dh[s^Er$*B@A8L#Nf%H^Bk%48?*GidCCCf/?m'P.N
%pZ8sk5GeVEB!Zn`D=2bA6*iKqI/iH*5=OPkH)S\9D_eN"#?@2[bdR8`CQ9;r@^F[;f6gol$bjKNfA.qLr/ZWZFB!Fq?)okprBs7f
%M*nhsPHNFAWTUTk(1fQDKrrLjfi4AglZHb?`2>(R%V9'EI+IfjN?@#Skg@G"3m3$HGm(gTYT-C_AT@XQ18iXgWi^^p,8+,G%4S5A
%5r##i)_E_llZ_)"?J<hUd4'fl)_B]?*N8qSlZV>\rA`iFAtpT^Y<7%(;fpnQOhkA04l[2]^DAI$&/c+/?F7DGs8D?;n>I;H#@bsa
%^,auOo@tXT>\eQL?@>B1auk.'mRKKC(:T"L69*b:PuO7J\Du*YK1kEdT-$N,#pUZAS1t*Je>8\+A0i"%-1Vb%l1Q]HaK063=kf!J
%/Q$[MXM0=LPoV;saL,iROA8q*(k<[B%8pOQR<mas]EO6iQC]Po*F'gnZLkYK"ZB<A.k!MD@F9*?1):QrRBk1K4D-^X*Em=J<gcG#
%mkpf),umn+>X.?k_;fJ$PAEb5$t@b,((Vrn::dSdRq%?K/fL8o61cAPOlPQ7@[-?T4;hUP9MmO\bI(>Z*fcRc.t[)k;:!$\<O`s/
%M13i9fkR(d1GBQ&9=-Fl@I5g#XEfe+s,*aC+Z4l&/q72m4t,+PT8u_(8Y^c<Pn/gUA755Yg#YZr6r)M(e'i-;]2\+"Ol\6sh2>U6
%r%O..o7NV^k"gJh^uIh-j.&.#:*./ee@kS9S[MXUGrT%sOs(a!kLTtJ'uPFnqTWh>0^`"+j__M5=Ze5?gRg"=G3YE'WbJoi8(";s
%[2Rg`E62O2h!&puE`ZgY'FOf=7>GYjF2lR!'kQnTccPKUG@\h:Z'_\,j[N['ai:.oC9gR=U.J_'hc:+ce$6rZmQr<s:<T(NUCPF:
%)XN&hH=BFKB23nf8mS\%l],Y!o(gjujaEq-`fiBn<$[#r(i+n6iuVhc?7n6eaC>-DF3M^&pNhh*f!)jQd,FUB4Qa3&VI-WWg1YeH
%$<DMikV[PMO4HgaEjM7KjH\Z%,.2Se<-qsn3*aEi(8]^Z`#%iH;7KiV[_!!RK!,[;YJj/+MT*_`]DEE5["]@fkPd2GH/SHKHZ]])
%$`P(H>oQqjs10=U)dDgP(oFuMVcinB`K1fKWjR.S[Ui=70=L+ii\H+^W3BmAP9M#U_5dk:':II8gVbUtAm)2_eP]I,@)#etKL<ei
%U9&%urC3Ek:t@<jcH]nKQRgV==EMO34K_M_g[:"N,8ZUSZ#UaaXp_8@Z$teXm\JS(>ucI''aDl>.8'?hM8PJ'KlO+aYr%&';O$<7
%;A@,AL@q=j<^0f,NZ%eI6CmOY]635^-d2/e-e'Mb_eQ5"kjfV:d,deo/5,(CqPm0VAR""o<??j!>tXO=`:C>qV@CY!@d7ZeZ.@F$
%]daU650f":^%88V]6ICg9:#/Fo(\q*io>Cp[21?*%ibEGlsulH*e&@OMKKR?Ibbu@oPE1:?s(6aHAnF!>u<:8@N&0E9R'WcPp]ed
%kU(dIa`aS*eVN7PkZq3eIYmnDh4[:(_(dGOYq>@>QneMJVh8%;Wl>Yc$BIfX_$lCK03`;$kR-F/@UjTo@cn'XaMOG55uqmQ1)k)8
%5He]`/K>btmX9DKq-f69Xi[[qY5Y0mm=HgE4)R0V1&5X4YOSOBh"/+T*g\_Bj?,DYg?_l+Ep]-k[d)i)Hb?UN%p)PDbG1Up2gEK[
%%nJetobAJ*>h`EN=:/uu52LcoCoAS9_SO7CQ=H5nR_8ZdTB;d5hZ(*qG4ak3CA$E2Mqn9ejl1T1oC@:jXEEhtjjqksK8i>XgUh77
%H![rIXK91iI(GMk[^,kr_9R@N:pVZ`A&l-XkOWmSX]P@"3a:&#Y-3;r5$D;tlL`YS09+#hc2-`!Xfa/HU0g$0rd&p>/aj]r1nHh3
%Q*T'JB*hr"p%Q=s?)l[aYs3'u9A_oLo,j9b$CC/I?=E/mJ%k^-\hg:Lnop.PhjP(9KU^Dhp>TV][C`koC;52qnPeCc,PuYk="LiO
%H%#(Snp,Y[Qb?WT/_q@F(,kKV_Mt1kb1G\060\%5O^2e+2rCa-(=2jskOo-DP*)sB9/V.pqtf$Q#=j=g&ThsObLr5jq!7qRdT1e^
%<cQggG.2FpI&@\^nZH%;#WM1\KuI6+B"hU(36r\MXqgBdmOo>_/U^o0hg"XfZJc664am4ecM;4W<kXTE2&=B5gZO-'?$fha]8aF0
%<uPFPe;MRucQ4W](I&?9gB[Jf9*,XU='qK\KH"_"mH=./X7kIln]B)AA,GiGPD3p=m[`JIh:e1/Gd4!,a]dptn#a[$rP5b#Ea!mf
%Z15=R.TtYSZEV"&'q=pRA\d:'p:^-YXgL5\jX&NC?e$QAIC/E)[5ZfH(>%Eo5HYhNG<YnIT=4.o8l)QZG@\+/[#V6>/X`W:`J]N&
%EnEY7f!dO8o:;H#j6G@sb,rVn?0T@l++3U\pdKiTmH!tAhZ(XUe&kkhf@j*tAPdhcWVeWXB"U(26jnIA/O"Sd?8>.!cCT]DNh3>S
%f"\opin#MG/F;a>:$"j/.__Pe5'%#+_NTCNb00[LH)k%.p=!=<HI)05#O>TrE*2tF=?:m.np@oNI;lZ/S\078mbN6aVQd[0gaep:
%1qp/Cs1EA!g_BAK&!)?rI^&)Zb/aA<gLC.f@CK/2G'(CEpguZq4h\LP<nTH\Ul-3VrG(*aoenmR%_c;a/F77=H<D[[XM51LUN.As
%!SIVPSa>[]B5aj."%l?@Vn0TgfY:]OI*j#]ai0DNR8B1=Y'Wg03Y4GfG=-gFV#6p8n'(R<p8k&i5-=#GG-L[_X\odKjO)CbZ0d!s
%f2jf>=LkFeK')[k]Jo?O,hZS*?>ONqNaM"!]3/A)XF@9&SA*2_['dd^`l#Dqeq-Ge)6jDCY#ec9hg)_ODXCeq(Up^cDQfcV]Pm\"
%bsAlm)sY#u?'k9h\N:<\cHaTrHaWQZ^L2OFNoK`9pUp;[@f5q3H$SYm*EFc[L%fUT\1&Ece/-)3o@,?,\)1O$Mq9ThjYl#NVkWdI
%%F*PLmj+AuJ$8E^YIRgcR3.C,Vjh&T=(mtii)Mk@PY7lZ[$GpnqI<<%J,XW5pKDn@[I^?lX^Ago2Ht+SKu<M+GD2$CMe&JZ?>@51
%.ef:sO+mP]o*=9[chE@Kiq@XWF?V7H5'Ut%Gh_DtOB?u/m^X7`Knl"e%s+$/ZR>5&GlP0nP!;/\]X_,07EaL?llU[m3o?CLC]<P;
%o7D)%"kkW:[Go.lVbpUOe/)Mks02O%MJ3ZD$Okk&FttI!4SaHE1Jd@9fq9/Xp6c354%L')^+QR+ohNL$?+XS^og/1ZiSa$[NUTlU
%n9'0Hq*nC!q>+-N#M]!2qM2n,iF$Vlk>2&nE_I.fja+DEE^-KXm&6!&Y<CXrB\E9\B++RXQT'WRrEFKhZ>"7@RiC,JnuntFMbX/,
%k+/S9e!Ch.Se:[\T+GnMW"7($(?N'9iBQT,dlQ,>?HZ-:"HP&D)\OY*ed?39(#)tGm2O(f3b;H)bqCXJ=V>U#^nNCQM@B`,Ur0-j
%FUJ-t4gF8gOl>[&0bNAr+,Oss1CZ=eYjB'd4,4GQorYJ<haT_$.d4BDs.<ij5e3T/rJ+Eb!M@FhcDFt*%kpOblYQ5O-/lX8.CiT>
%<M+(/dFoL:^ON"6@Psk7":rV%Z#QClT;lQoT(otnT>!1']f@?op#0_YNj"`kB`B_@)0h/?1M@_J+rJim7^`b/GaiqtHPr8*rr^rI
%PPKM;d.MaIb/b6./IV"WbA43&;@]=P8W,=re$9UonLPU(#.Y54G0I!oR!YHAcs1.EWdW$Lf.Se@;&I_m<[ksM)Ff=Ul@5Hr!T3><
%dsZA6n[%X2d^Q;]g9AuO-V&UWHAsYX(@"QOd-4'2D`R[3?2q+$$7$3JI/.+kU2.V9Ku:AQ>F"jdhP&R,S/OA:\:p694jUPe?[(A1
%<,OkAb%XRJF4:P)q6!iGPV1OJm^tR7BRDgH0@qhjh[ej-=C[`s^!YRT>`1-Sq:cq#>Dqoor(p%!b7C3KCVmceLS&h>MsSKk46pf,
%/@ZY^KDc=WQS6)iO](`%/*s`;]B]]/\gMN<gK_MCUM^kGXi8F5Xa.Rfr3at5J,8s6_iJ9%qR0>*/KI#->"cjjCb>>>a]Z`4<.<+c
%/q3op@c29E_U[<eB,>`8\?Z\C=1J?TS!E\]Y\ZrLGaB5-/[lhjm!gM+^uPPhXQ@\;s((_a@cu`(T`3p4-,n.u/I/8K/k^6$`]CCm
%rc5h:(oNeh4qHu<c+T$Sg%=]$d9kjQWn>g\gN`MjD7/DMri,OqBKZnJ*hF'QYCCq!I!tI)hd7kV;8XH<.bq'!XoGBn10`K/Alh!6
%EoS=,(KNhqp"Y#Ngcd:U^3M/r^$)=Z)s'U[m5]c_5..I^e.4Hq:$_/@^Gc^AG^GM\e_;Zm?JP-?5C:'jO$@C=YGM51kOsbu0!=>D
%7I=uRfYadR#R?jD_Ei6k;*9=$?*EW[gGRR>giC="m,90bjQe!Sk&A-2E,fONr6qb_&b5CrC'($6JoFbN!l^(g7Bo_C43^\o=crT9
%0?"=ZaY!LBg:Xjl^MIYjWa8):dT3WY<rS=0.sC$tk=9_Gjjl\?:ZJ$nklgBhl0dSmNa:Cg;1-'d/nU1=Q`n8&#Oh*r?GAOG/%=U)
%K;3@q0[9"^RXHnMg!dAkg#cmbfB^F]X6pksrboCaDQ%,If"9c02u/`0UM%;r<UJK)=1J@ecq`DV/MOon.6]EI#=V?oHIKJ@WJ?OA
%$L[3&Abt==s#o*b"M;)4dX(Z]Ms$?q&!uirkW0=qTVZs-9NV+Vb43ARkE9UuII6)gC]3Jiir,/6`Iio4%GbrOF,."]ERaN+\b)Wn
%k\Ji!P3qC4q.WZiH?-r-\o)=dL&:k6kb$OelcD.NVnBS[6R8rVMqqk>FJI6!=T7j.o#H1G7JZgMb[cU[!3l@sQC,lr2pR7Kc-)tk
%A4:][aW3\/iVU<;iT5F"*n9;8Q`o\NqPCg"Rc)&"Z(6BAPr>5k#puS3p8t7Gi4pHpD**&QY'==BHXWqGml`9]Zhq<fHI267,/R(4
%o@4fCF8>US]oOB8ZWlbQMdI65$9P0:-cTQ[mQH[@G>$4IBB>>t*u`OlNB_lAoXFVS'Y\uB(JshQ:?N`\T*IgP[9VB8J(ZtF(+Y\N
%3VJt,/CtZF:PJ^uqcXD^7o$9P#lWrSXKOd6F2,))g%\Z+hnI8L?9d.*/*n?1b)OI(^!4lHnNsF'E<-_H0M`aV[Q\RnOt2WB^PE`-
%f+*Ohmi:3!HVc`:F8p[Q<2?VJFRCcH?7\3Dn<Z7"$M_f&Z[3L_A[o3N:[]?p&+Q))e*;Cc]_KQ/`VE9[=6I*gAc;#PI\0k`MeYGf
%AbEM_qm&MWLY:e1B+Jlo>9>fU65qcCqWGFOhbHsK)@p0CLpc);Ti-4:r6[3=O`KTYE3oDOrUJ?:V;=DA?e&2$@msG30+T`6F17E9
%B<.$_;Yu)!L.P;s*13#;S!X(D%qN4h1tX)-d[cts>B\;EjioUIh<)_XNOR5C%4&U`khc.aQIOgd789t8LLjt/9$<)#+3>>Rq"H.'
%l6.Z=l:]<H;Yg<>Xjl,aH%?r9jHhs;8uDo$gDc.,G>6K!o=K_-e#i>JL?-sGCjWe]>0#GZIB46.=3<2J=,S)(QA;`I/Za/_h16Q>
%f*h<8qQ&&Dqt4t)K@dj[9<%fjqqt;P"hqW&[*Nq<aeV@p%'?9%It$DH79ImETW(&%@c`?P')/+s4tP@S^;$7%/tK`Ea[nN128XU1
%hl1E+5+bh5f$F&^hgM5;(#6hGL#GH-O1qa24l!&<ek1>r7uYW8DQg5`H"ZG<VgIbPAI`])p3_r!q@[XZmlW2R@/UnLZF8HA\QjMs
%Da'NZc1_aLn#<a9@alt'j:VE-d71k+?[mEK2uqu7XVZUfG/(c(^@LRD"g$LuIiV_%/$4g#lA#0&pO^0!/RF>10N&&bRZGe.04._j
%]f]ofq<jpJr(F4p=urXIf,ie^pI;O2pYUmq]2-[^UNq8l9P5.`qutTM^*!Wnr&q<>4+(9o4m\()TQYVf?#cq>q<R1Vb,q#rh)f!?
%V:0TH4/C]D@NI[Z-ngA4<AmUEjgZ8/rJb&:f^eeq=F+!8^AHL.%.iJk[/'?c-e9<@'qF(1hL=[Nh:9Zb<rGR,5X3B<ia'Z1q][s3
%K14WAdPXnidDA8km&hCd`R<nX_QI4hM;@s5MtOKUSNGIQe`o^'<IYF6e9Xb0XJ^"-jat&@o!KGmoHA,M;LYQO.`UGo8a:J1]2c#%
%/`D"9qf#*?*YdsnSVjA$pNqU;iH/L])j1)cc6sV>@SrtmXm@V$`8#Z`s&Q-P)eo7Zh2LV!FDe;T7<^q3'f=rRjgAc*?aXqAIFg$P
%5OWu$KpUM6Tk=P2C%M:Le%^?299-t=00[%!"GpjVF0TG_ht;13iJ"3VD^Og@"$(JiY:Q<KFbqW?<U;htW"kfHcI^]4+'KRVjX9.'
%D=%A,mmE:>n3NaNp#M[`*I6>5(&$D:rR0-^pUXNn>mr.JaF*$[\R2Mq[Q]V?cE1u\m-HrtY<]fdhr".:e#TC5p[=$rrATY$84-D]
%4(A+?BDi1(DQ[)TX<*WCG98An*.D&)Wnc&Dd2u`P's9(?@BP;'np[s[euV!P"a\tX_<;@WqssK@=(V-,5J\m7m<rr!TThgAAG'Kl
%ou$NE#P75#j3GeN\COZV.`]fSQ5D<Xk.:NZXB]^&H[U1%^0FfcZ2Ac4Irj:IoiCKf$J,(bdIkuWQi?R(+/,=W]]d^&-o`TF1RK?`
%iV17Ul>s39Chp)L"0WXcLtdt_O5UDVA+j,e4QZ@@]*De"ISd#FT8CR:0K?.pDoS*X1\NUJG6p@*%36<qOg;Do3*9?#F`[8T'li9C
%d;j)CqmbQ8B5btiU(qHS@X`';`V`0<DS:Jiq5n-kgN^GPripoVDS^4oYJ&50.D:,>G+7ojj,_<)>,?P[]Y=7<NED=sY89'+l$H,5
%qB%?.1jn"+lo31aaH0YT\))K,mWRjVMk"JZGD_r"UT5".m!Z)KNs@7^Cj0i2j%8LZZu3'!%6cYNVr&S]`AZu.pW?[9(,ec'X([ku
%_c&Olotil4hYkD@lh9_/01HM8I,;(<lKpI><:AW@ZHO\j/+n5UE5eb>g+,(Jou#$u+5XCnh=QVQrYH8op#T^\q>,AU/eo?:r6<]2
%C[!PA<sD^8k.ca,W0,QLb=A<#h^fIF-YGR\k9;7f(mk6'#eH"Oh7$j!qdgmjq#6j%ia*/je$,Yh'b9-RLR^R&@f>&i+FeYN3TcQo
%rd#jPXH(j^BPXe4E00AJX8$)iYk4ma\@/j<rai@m/8[t*pD]9TheQqs1b/C&K#4?k=felc[DM@TkORL&m(LVr&W,cFD)#+:+'5L5
%m;I$'qmcRk?D["s)s&aAcJOG_BDMLfnmALX]-"eAK?\T$dn&MaL],bH\Rmu]M`VFk2XK#GlU?<@*^@Yn/_0tbPm=$`hu-AXId`dA
%o1-?&BEF/H94rsr;X]b@rFPZT'=!0r&A,,'4mJ-14HfFtX!]D6:J.5un*`M_,=DJ(?d(g&UMT!tDk+#_QV1Q-NMG,]5Vl_r\l2aV
%=`e31m!VuN6OG"bkSB-i%Cntdb9r'VPD@89lOS"jn\":^FK<<D&$CE[ipW[a>!70qZVmrTrO,[=4hJ+'q7?(KOIbB0l,Bc'N<</"
%O2%c6m69F:<o1MM&T#*P\98Pq/fZfVB_$[UY5]OM&"i?]hcdS^3L+@$FH76]4,^9*I>^am0-0c/[AV?)WAjQ5GMP4>O*BEd,Is!R
%Ys"FdqUmNU_t.&=7eqO0=d3U@YQ&0W4&UgbbEVpkFi;#*l,L,USSF()cO5GQqo$\EPq(aZ=f#rL*LMb7;&DI4pXmK6fl3=1[*cHu
%pA3HGHdK?-nei50e[h[7mkHib<pLqShnP%09\YSV-Q$>7p/ZnB=4n*foKAdc]G<\K24F^JMZN3_#$tK'qAXrP7GEuoW/bA401"m_
%qk16%3'8#MRAkAC9`NnkK\riRLan]DVsS'p3;6UE?M0'^[G&bo/e@pD'I,&WbuB&\6Z+17>p@tGS"=P#r-'f=/n4TgH][JK`M;g$
%`iD&Z-[ln`dBdS_Q"dUWk;&.=V2T@e#$QUVVVd\oC0mdrJ#BfFBi]lLI`f-k<'-X_UDCL\U,T$AbCI'*-3$&8Cb5&qq@a_dLoB(+
%*)NDs)72$WCT+Qal;';bR:]m<enoM*@lpK3X%K(h9;er/mDtV[L)K^&3:%"3r$mgZ6J)RYG>RL`YoB!H[_'N"f2kG-4mY'ZGNAK[
%;O$#3cI*K1<."Qgn)S?'q]ePo^$;#p`S]VlOU46b#Q8D<?L<bE>2HIEn/K+knf-(^"2@GlVMYoKHS\_l)n]$:^+lG6h[@rtEobkg
%Mrq1VO>?I_(Y<mL`UN>-W*ji'X`j*EgV3;PU14=EhFoECYH")]qqoc8bJ@#Z;=+MTX_E#]Ika3",CHclcWB/@jW%"P7_;[p^Oisq
%(MR]U2TC-:HGn:aGU?9rWLaj"MF^At`>?IJ4:u9?=$>SfmLB2#0>6[6(UD_/eO2QtHn`tK$FOdKUtX_/rq+3i/E:+'P4klnX(-lI
%Gid+_;E2;JjY62[Ml;2KY?)Y4Q*0a4>IqfjK4sJFpDa?P_,j]f>:B3t+hSR!^OJ?9\V%_TE)LDZqYQGn<F7)K$.](0GXW$5@Qs[a
%h7Ye\qFcVhTA(I^c,c#C(<=.-@cX:D\W?MDCj^7dMLFsmMSA5f#!tLpaR@[&V]+GOpq)A9)_Er5jbJ:"&"i!0@8">6TQ&?Y0kTbj
%3O+*A_mHRk=T0Z6Tbrb!P-:Ap<?14VYOCK)9D]jOB8i4$l+*kcEb/.D%ps+XNBWdlSc5-uNI6J%aPTO%r5mG+ocO+d.?-K=XdmD&
%Knuq6#rse@qqg<-i:<[DD)B;W62hiSG#Ni#5/c%U%/\m:Y3X'*)0u+OfGKO-K!BZT2Os,>I7*OtqSV&"S&'h%<J\=m80:d3ctjbJ
%dP@qb=,6.%iC@ls5C@KIrcF#[LA2d<I`5Y3"@'/dLVLp*B9r4LmE#;b9N(qg7(5s@s(t'I\&S`'2#;^DG9Fsffl$U)FqNf>[o^>t
%.Z"U^nCX@F-2M:oR%PIXBA_'Odq&6onu$R,T*Tc;a7$bPA9<M8rUNeMT+/)24)<q_/&O#-^ARpgIY0>lgCY9!2DGn6"2tokkJE^S
%r1\*mF/H\;Bg)*`c'sf%q;9/thgZ#@YUrbTrbt7>No<O`oTuQ=ZF6=IB9r/#Rl,850(VgL0hks"lE98]poe+e>FM/0\lN-"Dn7q\
%CE&#!.G"KLpL8I;L21?0_m2$X8'C$Ha72<bb*jgr8%+pIYY]2<XGCI@[ZP3b+*s4IG2n@%E*hpV.kAq7]4uZJ;(#ngWNF_^0lGQP
%7``+7;nf+uHm%VCQ'GUeF2ggjaBr?NUHr6+LR3n=8j4?n*hQQ.69oLKW?ZXjLDm.$7CHA/q6bH%8]^XsdE0lqfk[RZgLtfMf_\I9
%d`8.1.(_.DeY'sZYKJ?mEu:BdXk9dX3qp*-9)hkTs7KjMG^>9j[Cp=aHJ'8-EHE`Rq#C6I+4S7`DWGkA?2f6)Z5>U-:-Rj^@6(MO
%=kC"lh+#o:4'=:!>7tKTKJnV>'kP^@s6]%EhcadgaGM:%Q*Z+J33/HZc4^07[]R40&'J*]Q[elsSX.Ugr'&'Ljf#D<;]$-JF!ub0
%E*SA%At7hK=kg@_iEH_tVVt<\3Sb=n*!!G[[)@dg=94dFV(6U4M?Za/>[)Jh'P_?"eo4kWC1.5pk*isI7,f,B_:-Vnd,r[`"Nbug
%qep@aiF1l>W8]b`^W3KK?n$,4*+-At+iD]=aeQ]0r(0@&Di7cGPR05'X;05u'[2tsYCq!P>Pj5Jf>N'*(KiP!6UINTfp\J2a[`J7
%S^[02l=dch(X+nVZ4C*8-EW\=a3d8qe:fFQ=]&UnAHlhnE-+r2T=&da%NnKuo-#@N@#P#YS&)Ekd@r3;5fFg_7REE/ErnlgD(>Zj
%=js`/odlkA?MDW'<oDPn!>pAl2]!TkP;@e<o3#9.EZeC@H.VPb)3u3a[cAhK2fBfQ-HaK#Au)(j]<:6_CGMXtZ>qFVS/<u4B14F(
%^L[f&c=pl[6AFSTZ31D<U`t?5S/X`%Sp/\j+sK0<o=>MB%C3urj!lmhkObDfBPqK_ceG=(^Q)eC5r<Ic/C5*GTVopLo9p7JKY/dJ
%jW$A'9eNUO'K-(MT?kObMJOeaEoADi/SBg"iu45`'$%5nR/JT3[6uj1+OpacVWL]tEYdH'S<G`2^ifUQ@7mRdUXI,[XTCDN+T$=?
%-\(kg6AiNoOESt_FN4h%9BUKVfQPo972,5jS9';sMgC\o8]WgWYeT78;q7ZrC*3Ln9fIYRGCt-/2\k@O%'jt0Ni?%jTU$@P@t(29
%*R':,D_ZjpBBF79jLD5_a]9R3Mkt%qc-eC6?/&rkjfD_>kj=lD:m`WX>4"jH^C,aWm[-:g)7l["jtpB:;Hl*N!Lf@`-0/^ikN4g#
%/q=qVPT7:$S9d$\#5'H2nOV$<o4$p'Y5j9;+M_r<&:QLS%NsBEK`N+'j3[;WqYaY'W,'4W5l!2nduEE7KYg3?ZWoXk:up,,8]VjZ
%*HX+sI+/]LWnJ"!D21!J\\VCm_m^l!Kph!U+7+Cs]a<g2_\Ciqb7-6Q`l5ST%n':L$q:DW"r&=t)F<@V6]<q^8EbjI_oLid,&bK:
%]P-/f$*HTOYA%G):"Qfk203b=VF[m.2_.?GbFcbK^AM8VcrT75&V_UoE%?qe=Y!SYQnn=edBY;^+%JccFY#Ul5utV#a&(0e*&epU
%hGo,\?up!-Cr^9^9U;.-J-3QP`;#Mi-cAP0KOR-d!4km,NOcGbNTJqX9K1D%AVdq&Ee&$t:^fhep7)d,O\rJ.\>qY4N\VU\N9MU_
%NRJKWE)(UV58Ag^:IdCKr@pX4gJJXe(Z$\f6'>*)G6jKO<pcCt:Qm1W-I'pdO;+IRV8nu[BEejCk"oYElF+cnP>h(/S2)C5>L/a5
%h?7p^Jmq&_3?dZhTTB^hUd;KMrIIi(,7S=T1D5?d6+"O,4)<tpMG*IKdH8e,`7#uEJ(Fu6=LqV?>Xm'G*>sMBDq^-o+41d-b=I/D
%Y/0U8fWoCSOLA9M(d937hn3+sg;+EF&HdL=:l?\]2G#<`ZdeQi?TCOtInC*@<N'">>G;p+a9WQ9@KBr\Kp+bYgC;ag@`K/+F!;H&
%F2B5b5<VY1Ue35f%?Udc78C/j8?@VhorR7iiS)<@QWV\+WJ13TIgGe*Bhl0pYf48Q65D.8[-0RH+QQea%(@NCc*1]>jb2A$7f=3/
%bjaA,<33VsM`_X\Q4h=*iN-gQ`h;\oRg^B]F)I'j1EVVkR_O4_LfcZj_h;p<Y'Q=0DD6*[bK"60J`_#g@AV^f'b[s8n8V3GE53sT
%97#GoWA`g`dRPn6$jqlGKGkph,8Yt@/P">*U4*_\MM=uXplUZjD!9i0;j7)Fd@eJ2VlE=pK:S0Ak*hoD=f&^^Q:T(ReL&Z3AJ-bW
%S-;`+BQjm]X.Cb/58C5092t[tf[k/H%VXMJns5OC<'l18#`6N2!/9_@g$JC9q+7Tpk,SF>;g$Vs:\5ejhub0tP/fX6RgSfNjM7&n
%Xt%Bdd0uS#Kf$1iPefAe`A.8tF6$L?B+>n_67A/-&8_p%<cm]Wr1#g&g2Gm`l%i3V[:7SmU<mp$?+(\r,RPb=4+gZu)*r(tG3'$u
%&M=N0gC?t2*)VK[m/jj>TUP2b(OV66Zu.6f0dTpsClii$?G_Q<mHS04Q&AFV+th82Yp22_7Z0uC`92j_>1$'7]G#7(U!*4E(nVJ5
%VH@pAjeJ[V?ur:"@<Lt[Kqa;Z-(VYW7q16CC!FnZ=k!lk%kQDi'cJ,'8^u#*d"hk15"r-#)9)NZ=TClqVB-4,-=]?CAp>sC6fE#/
%$Z.J`JTtB4l,t%9FZ6)^+K((\^n31i'+Mpb@>`CQ)np:CDu/X3&lH7DH/t+ZVqRXf2Qg4Y<OP#5PE>">E(5D7(p4jF*`]-UB<>R0
%KW%#dF7U:=+nrIW*XP;2K&Q5>">+7->tbU@9I5E,TTImS"CgthQ[YB]j4@iFKb6S=(W3'i7s2?e"Ag<5O=lpOnqQ+edW9/3i5cpP
%81L6Qe8A5,[ReKc@Q:9RAd"9\Q;%Z_W(=SgKWuZ"aYbG,Z,A[Qk<u&L7"A^:WM&?=R]I/LVD85[^qi4&6>jYYK!YB!p"t8*eFBg/
%rS_%8D9<dt9eIVA0c.ts1d`N_e>4KfZbk2PWef'DM3X7*El69%_[Ukp@*&#UjK-.e+_NO?WAJ_s*6*q&@UR@CroB*<QlR4#T\5bd
%<kGs<$bRt1Io[@Y8%JJHJqAqkkn.tFTjL8<5Vbh\iad[OP?]^VY$!Ic3>$o$o]bn9W,50dd0DoJ%%o(b[RT').jcDeg7)\CZB`nV
%`BBSu#lQMN!KoHP&LSME5ou;*EXdt!n.3.mOV^1K+&Mb=q#C\P!E;M4eqb8l`?aMc@M>N)Ob0;`q8[&SNZn&<-j<0(LddhMQisrg
%PP5?F,fk+7Uc6AkV*$A>%u`b!%'#-*'%(0DaPR]l]"bt0JoXVOC'h,a&:.oPU*F`t+O2e(cTO\'--\=7fQa&cki[[;WsgL67MoT3
%.isKU#_jpL@n[jR%'^5L`J,C[AdCg1">37DSBWdAIMns^aW/c#n4a;tQjE-!A:aV=q#La&!`VSu6]C"0]b;"Z]pK.)?Y=EgTjL8<
%5VgA:&ptA1![`MG10NQ7:4<1pJ,iT3__@k\5nAZ;5Yn8/eDJq!6g0k6$BWIdN<J.Wd"$tG*_cj;f97"?+;tGae3(r'C=#Ts#LJs>
%+SC#g`XmH-PbKCD9Hc\Z0g(8&>'VJ;)]f\#]fn)fG?dOVY#n1s<bum!aWmdtJYRk]0mU<q_Hn-IdF!LQ;Q"/K%&%#p.6b&W,SFo,
%K*/!%HS\g_5-N`qK&H^0ieF-rZ%G4IBn4K&"f]\O3JPm6TbJSO@hK*VM4jt!^jVV%E0"(<(r:.k<H5oAUY%jCKeu%rVLm=Vfc3BC
%QV`R#X>,P7gVgmXBqX<V#,oQm-Nmg.%'#\?Lf)*`ImO@4,?$nnmVIk+oL^M88(O%mJnUMP9C-Zs"5ZQQ/3+D5;d_Ug_nR3=2iM-(
%J?$-4)R3e]Qj,(5eZDA(Y`,[LRZUGJ+EU7)Kr9kaK`p!]$'%trkjdNf3*ENFNhfOD55BE'jFn2)##H$m>9e1T(6d[D_7gls$7_Jc
%km[Wd?U?2*ZGn.&Cr8*>FsuU4Uqr=ZL.G5S>?o4WETgg6UB+>J9u_u.42iJTnrP_A6ji(odsA7<&@s0P_BWj?+i-$,6=.")NZRX#
%H)Woi8$n6;F^[Cf\HW2R5r=N>X=8>N(=J;rr0+HX3AXKXTJ_J>/YadX1.Dt@>f.iN;VRr1Yp>-"M1;E((8TU=_8-?fN!<)n2HqDH
%lkYd-7=g1,ab&/Kfk+d^JIj0#:oYeH`\j/l)l,b9dq;uZad.?LL",d#8lVm4K'?R7H;4g;U]FCF\oP@k8D]Ve:qfL$*N@]6J17JV
%P:oQ/T*k.]1rNiRR+nU5<92\W[)NA4-'X$,CWmne29^W=4#JU]!\q+GK;kCM8<o.*F3k@`(_<9Jgh_tkO]P4C?7^%h2j,ai@6%E,
%PQHG3$0CBl)KU^U%<Gq>_^iPo''.H5C[5Y!.a`Y",eIIjirLuqS#m8_G)KLb;P%iNVh05nCLh4>TN=H?4L2sP&o>HB=Am-XZm81p
%,o4;4lqS>7KHH")fagFe&>3IiClR)P>>0Yq(-+Y^WLR&r\Yb)#(dY'QEcfG@;b1j:OruF'F=0u[1:SU9%*&P$E,o+9F`QCE+G^9M
%+E"E\aFRPdK!.YbkHWG0GIb-g.7FBP1.pN12("Gn)l>o-\`MUO/.Jaq9ho541rO2M>SF@aL+j`8_naqDZ"(81#$8tdXqf3J.rTK6
%9I_9SHpThUZGn.&Cr7Q_-N4mT+QP\GS]bHra_CS/)M-]E"S!TQ`!t933VEeOn?4)-:,H0Q18%j=;FWA5KQ;0FNB+qf-;G=1$%*LR
%#5H,egq[>#,QZ7G$#iY5OoS^6a9%k8:dI9!:t?ILYCpq@A;s/+fHs?/0F`CF5Sj.5JGd2k!sAa?(c\$a.!Di6LGZeL!#=Ps"(dH(
%oL^Ne8(O%qJo0LX!Rnhs!G$aW%*/r!2F'NXL4R6&Kjk9kHq4@0"].KK0Mp=;6*Gr^G[ue*,hOG=(,-2>*^Bqnb^d@q=T_(0?l1_m
%;(,nX`J4l;=TB2t!s<+n&bJXCa%"XI5_<\/A-"L%B)uOo:CP;T*&^&IJ;/Wm3JCoIRs[a/*sPP%4togQ(dY'QEcfG@;b1j:P@.Uh
%W341(?qY?q&[C8PT8^ja^_"KfBG`[4,BE,dP@.%7^D"_TSJ00uS0eh6YCpq@A;s/+fHq)10F`CT65K@SK`&WR$NpTG(cWMe.!BRX
%!GR'/&Ltlb-H[5Ok`nsSO/t'm"P^iq$`8L#7*#?MS<+[LF+JQ9%HHU")T<.\3Zn`J,XM\1gdE#i"J$1Jd?-<KOPlQe@"BT=Obc?_
%i'dCW1D^N,d3*BjXpNe?=U1i*c:"TNT:76=N.=hr.694R'Tu]7#:u5F4q]"HHuMDii62Aa!Ao`SNb]=h39br=^l\m;jDtuGN=eiI
%Tj1)uNGC;c2GAb^LpHQi69Zc^^D=7);8$*g(X4j*(_E?Ki,"D*Z!0nS@;#1lSrXR"26,[D$kZ/sTj16$NU&@92V_CR7Nd=eQ=&@M
%jYmA)`nHM]TC@&U$IoSaIR-AF4Y'Lb,8?$^jW9ac.F`LZU^?12"hp;GJ6rKUcg'22\EKc@@S>bb__RW).,pRj$BWIdN<J.WJK#qf
%:W^ZZSYVAe7N`[7QW%>1iLM.t7ph>]3$Y2MI$-t]#`?-'PenYdbTT81IcQ5Ti'T7T^aEjW"sA^,cK8*aE.Y"On`^jc!D^b8*1s'i
%21d#i)5[,L*4(I-9cU`Q)Yf\Y%.IC<\H)uqJ^ZUo31SqVH>rccH%9rk.`eN%A<*==?UcJ01<23aHkXP<Qj>l(,7Amf7Xb>hJDbfM
%71Q5?MB<gh5pH*&N6:[9)He:5ig*H!:K_0?$+=7\D##sF7(9DfnC7SV6%3r"=HS^bJ05n&.<%18o[kgo_3Wu;[3PJ[CLf"=*HN*U
%pgoZk,]cX(_)FK&e&A&ueuWO/I)VJ5%8+d\JhQ&F)h^0l5ZQ`Y9sFf(O9T(=AiN8UTNE%b9*2Cg&@r$E`Q.+s7?VMT#-!UP^\Sm@
%K-;!nQAN;r(W,5WEtUeN&>Kq"Rj3CK(D@rm!3W(eb)&!\*bem[7FKL1eW[;YQ'l#!VBI>%X^^P"1s"E(h8*tPn$Yn;1+=@LnM!Rd
%ZT4c#IPD<&3\HbWj=;Um;4YaF!Dk'?N)Dg$3NgU0h_5X_4_?ZK/.qk_V"I9:&rSD++.8E+Jq+]7aOqR'A&"B:s#^-Z5#P3VWbt>T
%WfTdJ$)D;[>?mR&Z=+O02[:<chAi=?,8[UmaY-de-7+<f*_%Sr2Fli\04mL6Oc(cmr,4r,DBoZ"7C(5f<>1d1)@=,d,&Ak+njYGJ
%[Lmm3&1iXbfZ6Qp-%mB`7O`@98,V!m-Gjf0\uS=W-GQ0e7)fId+r.mAeJ+E])@=-7$S+mR?SRZH^5!ms!'rkhZ_\k$q_,o!Y)XV:
%E5t?aj-qI>.m]:)@$GD`bV>([ho(cp-A!n=a9(6eOWT)r+Lp0(Oi%WqiWkf?O9i@-U5\VJ']kUQ8-L\>!KoI?Ol.1n[":EU23UAc
%/kWZ?LuZ>+XY=_,!t4A0r=Pq.n!PS2HlGLW,q+q*7O^MVa"64d_^t"\':P!N064X+LcLU^,q%7mGr)bZ6jV5V.&DL>;&\(?k!@UO
%Y5r-!;5I\.aW*SY^Pl'@A<(@Lpa5Ft0G/]m7Mbc&Nr/k[!Pq3sMB&c$'gK3"K1*M?)\qFl3AO*$`%Rl"+IQ^X$,2684A5n8\WI'0
%Qm4fq5sTD>V]pm(6,aB&dNB-@ksbjPC6$LM'_0?p"\@dC7Y5R<%M'5h[r,`-YNEn:5S+K3p8Q-l8l5&1gGDG(>e<j!^76Eh"@`5D
%8cb)8VNKf+\Ac?Rd+oWYT^+W/_?`QIQ[L>u^(=8ni'%Tj!#KQQOK[ig)F4t=N)Fb.N[Z6P-LUCX#CQ,4(AN39qu?j#_1eM=*3KG[
%5IaXE7.B"OQ/`65Z:7[//Ya#PZGn.&C_JaQQj19O,7Alb7rA<YGi6_?"V)?$MB:QP5oS\PN=,4k*LS-#ig3LLON]G="Q..'*[ZJW
%hoGk+d?,N$+<\2d;j"uJT]-3cC6/_2I\VLB8OqnKMYLbI![Mh\,Jc<YRtlin$TKoWQZV9m+G^9*rD_^&2lPBF]c*[I0&WZN?dk,p
%Jg,(MV>/+OZUh;pgugsAi!)rME)!8.+N+<>`EsHB?4Vegn8=4!!I&K^N\B\=)F<R&:_b'T,8*SVM&STO"5gqW"hpo[2ZQ-+E:p+1
%LC6F;&+8!k%<)VD"o50YbRkO\5GM1RA<(F]_)HA3LPaqn33p>$FlWcM#RE'_<9/!eW;+3r)C,BeiM[l+egYYK74NgbW[T^DopO_W
%-6ahp=D#RmLO<FBPp*I'cK>X^^4QLj64a^''KMX-Id@jaO`T`*P6tJr-[INQ:o".0V4&TL>b;>:@3SD@[RMXQn]mV5MddWf2C2`#
%Q]%rr&;#ELV9%=0nRK>$#l/@L-aN7X]:s+*E\b[+,lIjD23BKQO<C%&j:r>I:;47qHHE3a\@]01X"!B`UkoA001OmMY:EuUR)_j+
%H"uD.mW_)EHGrOrpu7TU&JT6--q-YWQpZIAieA8U^pgU[JZ`n4%3lDo?i-k-iO1`,"rFD3!k==l`VA#MC_7BOaXG+tesJ^SC&E8n
%1ViaiA:ST8aULKH%p\t2^u;^]AB3<'S--9\<MfK5Q:ql)n]<0_8(O%oS8.&$(N[BYZ"/BgCrm,O&.dRkWkdSn3+N7qXIKF'MH.Xj
%^6WRI'QM8D77Ypr6\9.6@McAd2mHnEmq^#U5S+K3pSu<nSiEMN2lrMQ^5,dcpp-2Z&JXcW-j?N-0nTVZ`2tZSJ?ND'!ajNA)h9%P
%\Ed.G_^0<D%PCgC#B1!MMXaCmfchj(PYm<uX>,J5fe<eCO(%g%</tM*nR),4YoqpVB&k0g!?_Z(;2Umg.=1=rZ64<Z[]NuD*)W8q
%*Z5Y/ME#13U*FHt+[J$1Jh,a.BBl`QLb4^^fb"Up)_T=U%3lDoJJ:#s;V]nPUd/aGErM!)\X;#!RaE:ETnlK6.5nKO";4DG3sn]r
%[+oi".53SK^*!sl'gn2RJ8d4J#]W+[WlW"]8.XKr((<pOU;AalR&J6mC^X(X.AIRt=^qpJZ3c3eAq;cFA:T@Aj9?`_#BUJ+E7R[8
%j?RCo3<2?s.`SIl1.;cN"B5QFeqcYUC-pd-3FFuO=^]b]q#La&!muXX*7PTE4jY'c(0HTi9!MoX9G%t14JPkCar"2iJndX,J2q!l
%!a/pQ!kA=;iW7#N$65iS+Zkc&E"5-jTSg!\6.o]qP'BHqL<(:b@tJM`fRR+4,m%4W]`S!1#Qb(<K8LXj&g9E"(iU6UMP,ih>_*Nf
%O@\@;U^A;E>`B&e#uq))J7T!sJ].uW#9\g-ZjnR'&4qQ15[;)R!"hP"%$V*`:4a[8B9Xm%X>,J5fn?.%ZbRI^ZG9'9ncKF+"@<>.
%3@H.>HCuhI/:[df-&Z=APYm#VWFqI\Lo`=d"PJI"!OKQC"L>fu"nDa,"9^1Z'fj>[6@'b)i%0EV5UD=G$C"D>,,o4>lA2MrLBQ:`
%QiXP/l3"?-)?o[6&-N+K#8K74,=6^L.Gub-p-9p^"U^JkJg.1,PbKC<bTT81Y%3&.JFl+#+AbmP&E7q2h[g!P_ME^_-jh@--p1>*
%@W_b6PFtJ+)5Z94)H2Gj9un/*#HU!0"0>6?2ZQ,R5hr#Q!31i/#G<F%,_5/F'k:qZfchj(PYm<uX>,J5fn>(\ZbW:;ZG=lkncKF+
%"Ngo`3Ck>\H6=Nl/:ceH'k:MNfchj(PYm<uX>,J5fn=kVZbVG#ZG=$SncKF+"L84H3TqVQHCuM@/:cSB'k:)Bfchj(PYm<uX>,J5
%fn=YPZbUS`ZG<1;ncKF+"I]N03J\hFH6=Ei/:cA<'k9Z6fchj(PYm<uX>,J5fn=GJZTrg=1-h92o"kZ#_g2M%26.idAtU:)"G"oc
%'k96*R3F'=P#2RGXE".ESdF3S-@gdSA:`hJj9He5#h084Ef`S?oKY[W=^[eO.`GQo1.>$X-_hBG1<'_8<"ku0bQ4aQa9$,ha:1BG
%%nIR;i1PW,fn"<sEr[*\<K)V;A;d+:;ar2sZGmjsA.sh(bQ:EGa8u_]a:CNI&Ejs1j</sYl%*f(ZN(%/<K'o`A;d+:;ar2sZGmjs
%A.rtebQ8(Za8i7Pa:1BG%u;'%i%0<_aan2WErbJ,<K&40A;[%9:IZcmZGmRk<"iF=a8q))'FGHUjTcq=#SdbVj=#E^kb2[?Z2iS[
%<JpGSA;VN%$)e2kN"L[feV$a"F25p"ZG?;=EWZlk"7cU139VDMG+]Z0*.Y1W'k?b7fchi-GXeZea;WZ?Jo!cMJ6?8_!Eih#!Vla%
%!Wqb@MB#"p+[$AEE#(]<TSg#F5hTTpP'TTsNlW-jA:eVaU4?BS9`\C)jT5/X#Qb(dJr1N^%j=)4$?-bG;4rfOm!pi`:aG^m;B:lW
%Y/ph"KK]FC^k)Wn^p4(5!tYS<WWa+ta;mTnTG6<8J>+/;`i9,5W'V\b-]fg69JM)$dkCt):Mdud$@/oOd#<@J.9X3_mR@EbJ05n&
%.;h&A\?T7/Jc)X2*8X<N`T#@+*j>YZaZH7s6"Gs8,fk^CY]Wf$I_[:F/Sj(&C[&M,_p1bQAI(ReN)J_Q:=3R\O9J;V5$KY&/5`%e
%"#bZRWFqI\Lo`=d"PHs`U>b1=Np4KsKWe5'?HCSNq9rl)kZK,Pr&>)J2WW14R0H8?CjGqmg(C_\#h:+C%5,`]$Sk4K`%@_u*gpLJ
%$*pt+8ct9mZ3iA&iX9c/&B"\)%2CjY4qp.\9L'L]=[D.OImMWkMR[5^iZiNg,0mV4(M[=r=BRoo=FWVS!.oG\^7bT5h1q^0RL.%;
%Lb#DH9/+F,5nUkj;Li;<BdEK)i`Zdb"H+eO!_Y5g%mU[;-ob2e+T5.75WAe$@"AKH@hf2N,:MQ;;2S.P@hK*V[CBHDe%keeZG7pu
%EWZlk"!S3i32f%U4]"m=)F.at"^-XIjp6k>AX!6AF%dgp[h`%]?m8]^5o*RY6%/fcJ3_/K+pS.)iWnHL8-GkBW$#k1a;dJX^Pl'@
%A<(@Lpt"H!%86m4/]\!m0useK&.U3N<7i;n;<0u,!EfDr"VkQ.#+6\aig*FKO3B>6"PHs`[fKV3TnPg!NhQ@n_uZR#,E*UR+<`t6
%:iIUTCI&,,O[8+8MYLbI![Mh\,Jgi)QYp1T88LQr=HPme!.oG\d%LMR+c'S4.LJ]Ka=X>5M_`?l60K(\'d&ni(.ksB\9\8+^iBgg
%^nM8.!tYS<RLU&mLd;_>OA\=f=E6^h=I2>)#`>FM;5u!TN@Qg$[MBZu?lE-e5o*Rh6#H[SGX0iR!XClEU'Fj/8-=Z#W$"_hPW=IB
%l"?7GM9KsV-MZ0O)@fFDM_<'P9/FX"5S+JT4&k8`#uUUc;#uLRklheII0QNJ+d)C18C^,:\2"_.CN13sAq>(@A:`8Kj9Hf`#K.W4
%DGZ$8EhK@]/:d@Z'a0'l-'b,op)0]A,'-F&_7(1]EaU(nH9i<KTL"#,Jq-,DTcs_MLuJZ6$:k;u0.:>3d@e,b'WD(%WM[`Vdn&u1
%`Piga#Zb;o"kI@K++PIVOEd_F5oZQnJZ]%e!<N\P(s=`aY679DJ5N<q1<23aHu!^b#:>$+(hA2/)WV,G#RFBN.WUW+."3;@J4+nl
%K/1G=%E^1eOU>K\![Mh\,Jgi)PB9&25_Gb,:hhC;#]VsToEYOhKh+`Fj;"0hP[RD&=KFek,q+q*7O^MVa"64dCN3>ZVL`:qA:VW;
%j9?_t")'hs)F,RBdJs=Va9*hFW$(C`a;dJX^Pl'@A<(@Lpt"HA%SR!U0usF^296:n&.loG<90\c;>`[h!Jpe2"r1[j#+6\aig3LL
%ON]G="Q*BfgOY2h0a:cgaThPA#Qb(HLPd(I,)RJ`/0GOta.S$cg)tG>7Jno5!KoI?Ol0H%b<%BiXN)FkXP+d]!'rjmqG<<,>"%l_
%V$/+G,T0RCKc=Q_TSQrE.6oZ/1_P1OEJ4WEJn,a0J>=.FKb9,qAKNC:(5jSU+LZe?J1?0YZ?Cl%&JXcX-q-YgQpQC>/M?V0*3^oF
%/?j;Mqu?j#Jb2;u%[n!K%hohA#ZbP63L4TF21d#i)5[+m2("Gn>Dqf00F]SW+:BaX+?'9d4J;[MJV.c,d0%JoU]Ih?<0.h7A<*==
%?UcJ01<23aHu!`$#:>&1).\:5*97>I#RCPU.WS@G."7i#J4+oMK*no?K?OoAn]N<a8EQ:/Jo<6Dp:s(X5(a9JLkFI_"S%!H6j:li
%&]G65(Q\htBM_"GEKE&0,&S9pprFG]8?f58"Wrg1:hV6kF<&F666$QZ5f1T>58*NSo`Z]E<#S_rV&X$*+ES!iMN=hNM'UhZ>k<M\
%@$(Xr?mu>k!=7Zc-&;mJ,UA6ga=eYFT[TQcXQCXH"@^bb.+K!!j4[2rXi4inQjD8WO9J[+O<8uq+:s1(a?`7hpjiJK&ckl>.`d2O
%AWEHT"Y`P+7HV*D'7=S8jTd,aV&Elq"WcY/+:&8F+=_CCOskc%_LP%)>([0fVM"G3:o".0V4&TL>b;>:[CGu6'>\DmZG;n=ncKF+
%"Hj<23G:tu5EK>>,!`K.$F6mgd]/C"q?`s4,$W876+.Q\Ipa$oYX'%,ej4`bJp9NqU>cA;M'<1&%*/K`2CMk4m%C-e'ZiP6<)$n`
%BdEK)iXuer"D]p:!\6@R%mU[;#X_SPTI<\85`Gf$!8.QfN5Zg%=+VV2^aR_IR:@-A^0r4=.4]BnQPY/;3A&[V`'VF^,:a%Q+<X-&
%E]-GcfInSgdH'h01h1E(Mk8,n'WD(%.6oZ/1_P1O0d2?TMWAn7o1+KW$3bj5/'h[aaQknJEL6"2?e=7oM8HW*'S=ET1WR==5ZL?,
%+p?kFV!h],%&$lp.6]N-/E1J]E?PUbJX%0bJFsrD"sA^,:_btR8eaE"A3_2$\NpBjhneFl6GJIWJ7O[S,l#sM64cfn.lYNNlT</u
%5S+L".WWn$."3;\J4-V`K?B=jK<6k]DAf;GPVjeM?sANs5qibLg`R!+miXOh5s0[t^d2%rk^aiYdK%E!.S0CG2THC*AX!6AF%dgp
%[h]d3?m8^`5o*S[6%/fcJ,iT3K<@W4"$m,:!gFX'ORsQ0NZn&<-j<0(Qpu[G/M71B7'Log/<I`$gb8fg0W;hm;2HJ%Jdf^%-o\(I
%kr[N;6g0h5$BNCcLBQ:6>R1C6!9Jr%6/SC6+N+:()FfauP)pam1,olEgn97pmpL2FTjL8<5VgA:&q"J7+UBEHU`3ipoc<)t+G^8!
%'faB/'KZk:5T2nu5m9j;_:BG)[t(LRfGq.eZE;*"+IE@6DNG%QGE<ns+<WpLjIe##r'6DGM.#QPPp:\^>@RrfcR@>-ZGr/t?sANs
%5qibLg`R!+miXOh5s0[t^d2%rk^aiYdK%E!.S0CG1'\AfT2DU91<6eji*2*I5qinPg`R!+miXgp5sTt#a?`n%pjjao&cpu$.]=%&
%S5qs1r<-"UOY*`["PHs`#_H2ejT\jqI0]QK#iYka`=9Bk71KG<O9JHuW.M,>i1r,]fk6PLM9I]6"Q*Bf#_In@jT\jqI0]QK#Qb',
%71QmA`=E(hO9e[#:rZ&`_0KSt.tCKs.5Jq#&q"J7+UBEHPoF7boc<)u+:&6L'fkJM'L*.>5U&J(5oCnq#Nq?qX8k_hVT9b+8FWb#
%Kcl`g<c4!&ep!2tJ05t"<TKf';>`\@!Jpg<#%`bc*Lp2cYQ>Z<!6H508FWb#KHQ?]:i7ZqoGu'`66$N1@Gn(7$0d!bK@>@n%E]LO
%4#j8L@JUk<prFG]LpO5&Kcl`e<c4!"ep!2pJ05;OW\f7/7&9ne)3>)"DGWXIGHa)^cnD..+IQ^X$,3gW&-NZ_apkYlq@<&u&-N-7
%MB$^aMB<*Z+;(:%TRs!.?ulaM?UcJ01<23aHu!^F#UY.g)e=Nm*TRGJ#RF6A3Ts'L57h?j,!`\)"\IUfjqpG"N)G1:NbKd6f&B"-
%9EZk)a9(Zha:CNI&>1Lnd$6#.+NT($J9$8LP.lRn0naunV#\UWdn&u1`J#G%#Z>T&!E+0((IfMc#$'0S.8eS[O9%?AjTZGFI0Wtd
%#e_ucd?-GdOJ#d8$UHHOXP=p+XR@8r!'rl#WlRJ-UA09b!trGu%4XmE%^s@g\n.,c;q@=(Jo*(l"Mlq!Ee>pI^4Y2@"RuJl!XE"f
%U'H8Y8-:8!W$(=dfGm9BQVe*ObV>([hca7jJr*ms#$G>^#PeB+!Wl=i%_<:l%g3c3#Z,D86.0t]3JPm6UD+i=@i>Zf[C?bN'1(%U
%1;N_rEWZlk"/lQsAL33S#VmM3T\Q2lV!h],%&$lp.6]N-/.uc7E?PU`!L+N1"au0sK+J9@BG`bp8j[tTal#R;FG%_u^4WOB"E"6?
%nW>[QO^q[S$UHHUXP=p+XR@8j!'r_tWk^o%U?I.N"4@1l%4XpF%Q;?=VOp_c-Si`MRG_;-$UHHYXP=p+XR@8r!'rl#WlRJ-UA09^
%!tkXW%4XpF%Pe8#<WJmo;e1pS1VpO9(P6$==Lg^5=PlDn!.o_$<KVp:7.C@F"sa87)cVpk*Lp2cYQ>Z<RNcfXT*`6>\.AcV_9*4m
%_"nQ3!tYS<W/;R:-&NdX1*@/OhG=AIiPB4S"Og-h<>4%p%LKGK\.AeL^rd+l_"nQ3!t`BQW/;O9-&NZJ1*?stgn8bO^4VWl&8%P3
%W[9LA1_P1OE?PT7Js@9cJb:&E#9X9X:_c"S8eaK$A3_>(\Nq)XI0\r#+fkZ5WM[`Vdn&u1`J#G%#Zbi)"kImZ++PIV5ZQm<.oH40
%O9(1<jT]:ToGsH'L9L^rV#\UWdn&tf9-F.r,YPN%L]i<+<]9a995`UG5_b*B0V]6dGp;>7>3&s+XunPj,JP=pTVr!F$S#]iQt$F#
%1.hQsF$Ltd2_KZ;,_@i\Ck7f[lj"X=#Z)6r-n5oq&0jFa=L:?TPd1=k0naE^V>*Am5U+$&/qJhSJM[aNJWpW1"sA^,:_br<.MP%-
%,![&3ZTn\ZZ2r0(KROf8!0oR;Ol.1F5XZ5NRK^,bap.PA&-N-7MB!<FMB>A$+;(8LTRoeh!9P+b^Pl'@arJc!n;U'`,)IGq!aALT
%#'RliKYsGi)rq]j*(UYa$_UXqJkF\rjqpFoN)FoC*,nH1NCtBJ$`mJRPa)^=#9aQ_d4fT?<.t0GMSP'6blSVZap'Q?&Gft&!`\<4
%7Y5P`!YJ"W&hU<g;Dt`uJ05mu<T#F,;!^H)!,2GX!Yn\W#-c)Y\-5jN8*61-P&4G*&P3(=(>&[;)qYZd&.kKaE_o^`INV+17'L?U
%asgm(=CVWccR@=BBFQFI_)<osLnoSY$Z(BY%I=9AL^-`k3%-6j4cgjQ)F1Vo"dQBEblNL^B9_[QR=j3en;U'`,)IGe!a?dY"8`*)
%!Wl=i%Z1V4&(ClH#`pW7_,/kdBdEo2:EWZ$Z3?M]+<-Y47'](H"h$\=#5/-1_ulrq)\a$E*(UYa$_UX!"\IAI8S&16cR;eW1']WK
%I,biq80UU2^_TJo^jZ98J,iT3K;(^&""=9s!]1:L0r8]:]J>-T^aR`t1']WKI,biq80UU2^_TJo^jZ98J,iT3K;(^&""=9s!]1:L
%0r8]:]J>-T^aR`t1']WKI,biq80UU2^_TJo^jZ98J,iT3K;(^&""=9s!]1:L0r8]:]J>-T^aKAbbQ3\+hj=NJo>$du6<Vu,D@kfP
%&.J_377B`XZj<0+e1=G1Pd1=qaq1GB;2S/;!u>mbE=##Y%A[-7"/Ka@2ZQ,^!**_57>4>98.csTTNRq>9%a4,(dbur;Lln0cq*Yc
%9->F8+O'sl+CtZP!=/`.<(.:S$H3OO#`o>=/5SX/C]JMbTjL8<5\1F=,l#A*&<TABAq;OqZ@VrS"9AP'+pUPjiWi?a8-ETAW1[$H
%J2rA20;B5S1']WKI,biq80UU2^_TJo^jZ98J,iT3K;(^&""=9s!]19a:am@!*(/qV;$p-f!u_K[E=##Y&PBOJ#*cQI]eBN80W:^X
%22.b/;?Y&ABGRP>;Ds%_L<qHG'V-ua'G=C*&r9'g8@-)I8D1e-!.o_$<KVp.6Lb.4![N@d$WKkM)o*@Zka#)'0=1p/&o?S@Le&FT
%ZbR>Ift_J*Jp78qJV0[`d/tg!U]E:[<)>"_^`5`*QVe)dR0+?6^2XHI,S?hT?jicH?p=WW5_,lU5uF?NJJ8+t!La0AW0@a!NZn&<
%-j=;4;(9m`n;U'`,)K-j"ZAWg#'L([_ulqFS-9Xb*Cpbb%A6jsJkF\reeg`_N)G&G*3_u<NCtBJ%BN\TPa)^=#9aQ_d4fT?<.t0G
%N518Md/oS3ap,)i&@_mC`M]dlM'Uic"<s!5dO_U+;Dt`uJ05mu<T'OK;"R#1!,2GX!Yn\W"u+(/VOp_c-Y3d&1Vl"&JVYS'1^e,N
%PRZsa+:&6L'fdZl'L.['5U&J"5R!FYJ^"4K'u26JPVNL:RG]$N5XZ5NRK^,bap.PA&-N-7MB!<FMB>A$+;(8LTRoeh!-r,].tCKs
%.>Q2@WBLuCit@/=,"T&U(.d,oIK4tM!*,/6U-eAP2$,$)A.,E1dPa?o$,Q6I8CaMP!J^g2\-+"="k"s+"]@7_++PIT5ZQU4W)2P?
%M?$cZblX_7.2sD/$t8iIV.rojJ4>-/>QPL/"DJY(!\#)@%mU[;TIOtY<%*2<7=[dVAq;_7PRW^UL9L^rV4(<EJ4>-/>QPL/"DJY(
%!\#)@%mU[;TIOtY<%*2<7=[dVAq;_7PRW^UL9L^rV#Zc@TTS.O?>pfP<c$4F#@d*UF]!#HK%%f!9rpQW.TA@F+56a-lV,df]!3Qk
%U].?G)V0Q>n"GZf4V:NrqU[ABQkO;(/0aIGIrg$`rBJ'3rm>!7p&4i=++O8G2aq)'0)TtmnQ`ZOccWtM6L$b]T<EZk`SZ^b4S\ap
%^]*;X:8kau(mL$t=5L:_)`_h*nDCX9@K,:Gb)!uri7JOkKSsMIi'1t?KCb_L$(Xn(7Bn3\)6U4,rEkQT<W`:R'++FmSgY7#IY*UM
%cqQW6;Zm%PPFS+lj%7mV.P$B@kt&).T)C:?2>Ad0!h]?4'.A<]Nq(Ij]]c3t+7aZ<k<@<#<EBledLkN^HhP(E(?)kJ(jtb(:7rF2
%3mL)Oq4a?&Gfeu+T)6SU<*<)r_+'52mFgr[>(c9q@.:];14eF4kSOid`/AMJn0*htH0uoJ:j#2]-lk%F]P"teC(\/fK#-V6kQHd:
%T]8.VP:sKr_M:5pjLL=n6IcgiTQJ,^nt,e4W($J6#R2@J+<qL\Jn$lI'/$"n_1t,ojLL=n6Br;)SoeMQ_Og]Y-nXLcd%G[P1HL4H
%<:k0:\gLj-/Kt^N4NMRcl%H&eMF$K_ETK@\>u6I;>n@-&pH^-&que&#Z;%p/V?S.5G`_)PZ3`rXkkGPAUq"mFr@Y$+paugVTDP8p
%.#*>6o?^4Gkb\Vlnp$2X5-bL&ISoM>2D4SnHhP(Ef&4._(jtb(9VD.e3lXNGnY2KkI)t>6T)1bhW:c'h:XX6P=5L:@"gnWn"i9,<
%+*7S':sa2']#bcE']E7;&'feLCB\GNJ6\:C>ildpluta4_081!ptQ+F5k,M0I"uUV75lgnOGAHPpT[\k[P,c\8On^in(I/]>(l?r
%@.:];3e:`gkVs+/jGRo5n0*jPn_D/kKmEcoglup!\FQ6i/uV56/dMZRqk+TNL4YHWcqV7<V?e:7fGMq_lrBu#+NdDM7uSteg$aMr
%K^XM#n@9&jJRU%k3"Oj+Mf+FA+chWQgrE`TH3'`WP`?S^hQu&BV2)\k)Docg7])8rME]$QpV_uk2<5pAIIZ+5<eX_l./p"e`D1dR
%]:da5]-%B,mXn3+e.?_:#i3uAh=TVm*Y7hs7lm@/MIKCC@U+3)IM^KXHkup<c[F.H'LP1,H0?S^FAmi'Gs'/h+6eHY.uHXWLiMN>
%qd!$Vn6HS655.>j:^dLJkFnAmd7k3:jRFA=IA@OVXsaLN,K?#Clut`I_KS:"ptQ+F5VWspS;2"Q75m[1ON2u9pQ84L\tU%+NYkjS
%Zekqo#i5_N^k3_.7,g[T>Y?s%,+/pgaQ#RXqoC*`<DhOC7t`DXg$aOHJa\1un@9&jJRU%k3"Oj+Mf+F1-'.56mN\2tAOZ+o)^2Ak
%B>4gh%DE4%_<4#'"H&hE@m"iH0=n.!LHHX=\W:i!eJ6&rFMt][T)C:?7JJJ@#+tdc'.ATeNq:Ul^?DF"+7aZ<k<@<#<EBledLkN^
%HhP(E(;[U*#^l&m9VD.e3lYa#FAYaA5325Vc[B=;WiRWJUa*jDp?ZuhW?L_^#0h4]d4(lbU6"oo4o)*n&\d>r*7'%D'8gVQnL*(E
%\C7&J/uUZ&/dMZRq]HP#IY*UMcqV1:V?S.5G`_)PdL!=1;=7":DY)"tp:Ht5iO^3LI-uV^TGS"sc9jPdU73?SaQ#RXq`ksr(Egjp
%8]Q6cH-^pUe098V"G>$Kcj:CR6-"97-=:jnKF`>jaE&GM($YsYE`:D+T3'mUhZ^CnhZ^jSF!#K*`DFp$*kKH0h%\gP*Y.c!a'(c4
%59SQ'(E'B[B>4gh$bd"#_<4#G"H&hEj#_>r0"Pc5LHO/,F!"$iCAX`1PB=aQnt,e4W($J6#R6puTG&`.Jr]HL9tohg#TrWi(sdWs
%<N$]Vb"YGtN%=AMcXB"e@/f]mp@nMGbb07Co(DU<QN+\66/V\9rT!?rHm%A5YCkFc:jifEp%+r@f,pEGIA$3*)TIClEfj*FZ@^_m
%N=]1FZQI)l"s:(b^ag437!'Y3VF*5gU6uL=]])5K\4@t]<C+jN7Y3/U=\iI0JT"U4n:_6*J[?)0CkllEWL=HI]&G^k\B$!2<C,E^
%7Y[K,m"[8H_3ZY`pq?p"5hZN([_k#^,+B?q\DffG[n%k\=[DDr7YiS^g!=&0KC;iKn9#+"Jb0UpI"uRe75d$mDT-ZZDNRXAWe.a5
%N!NM9ZQI#j"CJ:Hi7f#X!bj%?fFHYhMel#Td>A0Sg*3(aA-K4c)^2AkB0Ur]%DGtr_3Zb;"O^)]nK#&0(YR<rP8+W!YXLUHa9lBP
%2F:Y_c[GlC)LSmn"#!l?&^cTjQk%Y7Me5$>_28JCefpY]<!>!()[W[GB0Ul;#C3L.BO8**:*KNLI!h:J8QT&1aE&(,nu+u<Tu[RM
%:GtOEC!V8+dMdA5!eG8nO9q_RJ7DfhaVN9gi+!K4nt\]4+]SW)]<G"a46tQq?Wr&"<FG;b$T`k2'6&>SD:1j22=OYcF$+,u9dng*
%E^u42O]U,?+25)b?`Lp"HPU,nBd_ik%blYpCeF2jM?eFP!aVI@0?>0U`_BcRc[PT9)LSFaK<JG)$)F2Dj#_(@0!_ImQRX&Hk:Do+
%P4$/r,,r)n/*bfK?J9t6<+,2I$T`jG'6%33D5'HW*V`0ZK0EkO;P@&Ca;)fdLb%lG:L74WDcC-6,mubboFl1kLMbI.2Dt7t`P-T<
%@]Mh0?]\KTN=]1FZQHie#%+=Ei&_]r!pM)jp^Z&SMem.tJVnmGN5\hOd_6j5,T@o0ZtDUIBaqdPJ\bD=kQK=0_!rGR8Jg(0i:@Z[
%iXq*N$Di/:m)__Q/+$K#?.)&GV[T"Q/0e(!3s?_\AUD9_eIqF4`O:$.@])QW?4_=dO^Vlcql*4]n8/L8^0j5RO<k%"'#HOQ6oHXl
%1rY)0@$+24Z@^_mN=]1FZQHcc#%+7Ci;472!pM)jp^Z&SMem.t@>Y;8^*9+EA-K4c)^2AkB0UHO%DGJd_:L4$"O^)]nK#&0(YR<r
%ZP3r@GXXZea9lBP2F:Y_c[Os')LReOK5Xi<$)F2Dj#_(@0!_Im7k#M?l&'RLOVPg+CkT=HT)HU(2=N4%!oC)Q,,,s[nLW,lMddUo
%8W!au\0@D=6j<*-)Zd+7B0U?L"27<W_07En"O^)]nK#&0(YR<RM\OM-Cdg7UW!_Mo1*Tt+c[Oa!&q#`AK<J=;$)F,B@lnK?0!ZqB
%k9qD4d>E$4OVPg+CkT=HT)H0q2>A'n#2cMT'1b=ga*6/_?"?ldO&8$\P83>8+tJI4fa)So4o8qdCZ$oS"MRu(-BNBPNbulb>=;DA
%:Jj6qK,*'mU+1s\fuS,D4o8Y\9#sYi61\DoF:.!)i8_Fc:V+\PK.g(aa)`!KKN&C?mNe8-GLj*m[Bp(oTtoT%'k@A[-fEVegOtK$
%9(3^U#C3BpSPZm6jGmd2-Ejdh5AFmA^-[Ce[jpSEdSI[K*O\NUg!nq)'G'b6"hHs5?]\KTNOujOT)GI]2>@@Z#%+C''1b=ga*6/_
%?"?ld:Ja0p6PWf?9)F4qP&/q8Q1jPL/Zli*-ntEk"e@pT#roZ:2X)ET)LR1S5p!%..S.,Uj,0WV_%lY0k:H#9pEqZi8d1bNg'KaA
%_`#mdRgsgp@TbfkYu78p0?=mM7YiS^foK9>K<J'Yn;Rc9Jb0UpI"uRe75d$upr'mkU11/iBjZs+P)U#Sg:oLm]U4.R5?`PaIJjlT
%rTu\$O4XF,GlQ1&&:OsM^<?5GX/n1kEq&;r#J]cm"EZtm'uZ\[KXfGo^Sq)$ok![>Y?,(\_Yj3*p!8-Skf]<2oCMgOYFcJ85F)6D
%UZL7n7k*?0]KtF^(15r5I/_\Nkj,F(+0U/^QgXIY`TrT-l9<ReYC6@@qVRo0ffAj(IcKV#5JQW</l6YB@Sf*p>^=YEg=.<oN!+c/
%QI#pP6UAb<kU'YY;hV?:4NO!<l%H&eMF$K_ETK@\EDqeb71p"k>=(e)Fp,j/\0bHKdt7%N4NOQLl%CN:MEU4FE.pI@GuIB*5nX;a
%>='Z5que&#Tpp;LV?UBQH&d)AZ3aN3'S"Pn@])BdJQ$@R8J2.i>XBc6que&#Tpp;S9b4s0nfTTPU_Bc2-jHLm`g-;b-Vc817nGE0
%F:"L'0be`"LMlZO2b!3ea`G+#P"hm\UA0A#&6ISl+$$_5T-_>3j!A4;`D=i8*kI1Eh:1Ap,S0Hl8NNR1MIKCC@U+3)Icf-(I$b%h
%c^2ub'LP1,H0?S^FAmiGP<?q`-0^)_.uHXWLiMN>qk6rHn9#?P4CLQG,^'=2G.8l(7+6a+P<?no-L$15.uHLSaDchrql*LtaQ''^
%o7Uh"$>HI&j1KJ0^?Sli?71#[2b_X+<EBledLkN^HhLsI(;]kn#^jRD9VD.e3lYa#FAYaA^/+;BYF&i6MJUZ0(V31XV`jpf;etlR
%&e$s6675S<"Wcd"Rs`UX&Niq]*:K8*'5IK?g_4L/k*>Z,#>_J<-V?)fO9q=?nIp#'LMl*?2`:A"ab.6:JhBmc(Zh6aj#4*RB0UZV
%&O'*E_5Buj"H&nGj#hFI0=iULLIrVXf1aa&deX!T-FpY1/*trMT%\eBP[Nu8'0:^(-g:=8h1U](>4A'q#CXj-WBtH/P\ZGB(g#S#
%T09Rf+"G+bF!bu1`DFp$*kKH0h%\g@,obl-PJ%=r!^sRJl%j?@4o=2:Mt!\Y$pJ>k-Vt3T*Ts,cI*kY#^/_Hn?8U?9:bP(uS!&dK
%=5L9U5.(Y</&C/--?K=.:sa2']#bcE']EgR)rjYV]aFE66np)10s80%4ap!6H*/u;*]8pN+oN+'N0ish(KkOpHR8RK<KjNl[=2!N
%8OnZ/p?^s<Xhb68&GW=5R6[_pkgU0TW?Jk;_&#`cjB[sk6IcgiTQJ,^nt,d[W^Z\n#mMJ0TbAi/Jr]HL9tohg#i@1YOI&\i#ut%@
%K@1@lb'WgqW#"?e,oD$`KMJ0W$9HI"2u02;,(-fZ6/FLk-WFAK$qa$K/+;/PTN[#pQ=03%'0:\R.-NW$h;jK3MX]Gb#C5,NSPXGt
%0dn%sY.SC3K5(u\?@m\4:8iueNSq=4C8+-P*VaZsK=l,c9rP(d\<DpY=4FPu6F?of0#?HJ-ZfF/:sa2']#bcE'Z&fUcgekD2PJ9N
%iX[q6>\VN5$Ip&B]EEj_S<+$k5=*>7kU'VX;hM9?4NJHhl%H&eMF$K_ETK@\0iX)#q%=*"E^D-M$j@[7TppGW9bG*HnfY-+U_Bc2
%-jHLm`g-;bk>3a^(JGD8bR'\&nIp#'b;SUZRMpRij?_W_aX0ti;>a!UMC\)I&#)rhShLVBLJFUC84,ffkG<Or<S&FB`8ipb3lr]_
%fq@A$[L$rO4o7fMC[_oL$pJf#-;aUC*TNi_GgT4p^1-XUDk3[;CAjm^PB>UBQ1sW8;(]Xt9JH7o$(X=9'Qfk#DXp4T7JMnbK=lAZ
%/l42dPadhrqn2Kkr@Fs;plGddT0&_[.#*>6o?^4Gkb\Vm13nuU:A-0e$P;EsUuOYB]OsHfC(WX@K#%[fkQHd:T]8.VP:sKr_WOT4
%jNWmrK!]tlY":6$>[bs-)V#UNbQNPoT$RcX5=*>6kU'PVdt4ckXG]#5Q7CDX7Cac0LiMN>qf,Snn2V-j5'fOC:^dLJkFnAmd7k4e
%B<j6u4kZl400kbkP)^A\hR!4i?nK7q!Z2@FLV;%@'LP1,H0?S^FAmkmaY"Om5O;sb6G3@r$qa$K/+6ETn#ucgH@7RCrV,W5P[@eT
%rgJ.]X7GT:^UHEM!l\!_E?;^5(YoeqqnN10r;H6#Z.H+,?+gU<!^nak*AO_0IuARM&GeH"5(NG'mrbVe55LVqa6Qrpn*cmm(",n*
%a*?j?G`fCgO8iPdqr@&[INSUga+p.g#ut"?J'sHgVgVbDo'Q&If_T.Hj3-b$P[A@D'`3-'Vt0``PIX$M'6K1gDW4)D4ad(BLRT:]
%Nt41C'<82`#,NQaQ1sY>P:aWfO"g>]&tM9B'Qfk#DXp4T7JPrkK05*W:8kau(mL$t=5Kj2(Y/9GPIZ_jeTrnCna5N&6b*,P>UY>Y
%Nq:Ul^?DGMDr:>7PCm6;GS<-3lAB%I3au?>T-D"!Hp/`YhctYYs0:J*]mdcshiIM-jpK((cuC,<aVWbInbq3k2#$P:(3MgtKMJJW
%U)<g:+3ja/mo.0NfDg,E*:r^lf7#%=nbPc)fCt>9$H5igE?;^5(Yoeqo4,OuqY9lW:UHc.Wid`S5P?V,J)l$8q"=Kor:R2D.cT'`
%f?a(2Dgt3grmCB(rSs830be`"LMlZO2b!XjrTs=YEQlJhH]n1u$Tb!HMIKCC@U+2N,(BRihp3DAZeCJtY?QGPZgu0&T2"5"5E71g
%T;#h#[Rh:ceF<A.PN2P\0d".prqGNR&2p63&9MXmh:-DArEI1#s'@pVJ(`^PrV1cMrVgf\O3`U9miTRa8e430kG<Or<S&FDr:g'0
%n`PtBF!("1(1\O>+-9-IMOV8QrpAY<lQ8%Brqq?Dq.kbXhuCn1?Jfi&q"<h3`dk72#[cI6If:qlrU]b`+2<_]J!p3-k<El(nF`pU
%f@So4U&+]Sdd'E?-pG`<$X\B*rVZWWfuAQ7IiJ@^&TsHDe.[16KkHo_!WNB(o(j^!kO1Wb^EiWAs1Wp\IdhR.0<]9q^]4&kiSCFH
%dS/'/F6T9$eM[AncbG%Fs8LH<?9]e9r7qR/UiJcVa[Lq7m+H`D[bsCP#%nY6"A0%fVhNJl$dhZV%OA-6)24mo[=(m\8k4gjn(E&G
%(?%L[#%nY6"H&nGj#hFI0=iULJV48r;+N'6>u;#&7uStefmAVmiC3m'D_n1S7O3-[a*+s>>X[%m!soJnUQA6LZD-!8NXT"AZh>.d
%_1;^lc7"b\'L+n(Gj$KGZDkZkK]bQ!&b5Q"D5#+0i_MU5m'LEo/R!c/#md%u+;6/PJr]BJ9t]\e#6tk_A4@`5:j#2]-lk%F]P$[b
%>(cta(n=Hr'.ATeNq:Ul^?DF"()!3K7Nn6tAOZ+o)^2AkBC@EUK*)DsS5CCB."6c.n^("Ckb\Oh&ftRQ+e;GP756220s80%mk%^r
%!sog7;4nRNL4YHWcqV7<V?dD>*b7_`SPXGt0dn%sY.SE9/R!fH#oFLW+<qL\Jn$lI'/$"n_1@7ER8HL&<*<)b8OnLcm+H`D[#fjW
%TUAZ9:*C&]I@QYla]Dc+a?[UpbUB8#Wid`SV'F!Fp[#R^MdR\/JMRXD!l[s^0eV4VMe[!G+Q5Uu'XA$62X'oDh5%R0T"VUH%1XXk
%E(5CRTGS"sc9jPdU73?/89g.4Kks)X?^,nhNQ\u_T"VUH%1XXkE(5CPT_JgS`^;]TU73&@89g46"a#<!^F8h%*Og=U4aV+p+rj.h
%i/@`.5VWspS;2"Q75mZFOmq9;.BF8[o`K5/EcILKfX(;fD8Cc+%*g9J#o#Tia*6_o>]eGH!soGuUTd^k[P,c\8On^in(E&G(?%L[
%#%nY6"H&nGj#hFI0=iULJV9";UTdgn?@XF_,on_C]P$[b>(cta(n=Hr'.ATeNq:Ul^?DF"#8/r7N5AnTH3'bqP]XjRnt*P(BFt_"
%?uSSd:7rF23mL)Oq4a?&*(\^!1CAIDl32uQ:c`&jH-b2KUk]@(#0i*9A.%S!k[V8I:V=bP6O"1s`JhZ7Kj)5>rhLdX:4)]kU,=ol
%JA<$+14`=jd&A11;aYZUK*)Dj18Bq+W4J]?P`?S^hQuql/]*&A%*g9J#o#`ma*Hkq?Z]5"!soJnUQA6L\tU%+NYkjSZhG4e_LVgu
%c7%$G'LP1,H0?S^FAmhp#nJedOA;acU)9,T(g#S#pD,?tJHQD,.*r876UAb<kU'YY;hP5Z%l0oA:8kau(mL$t=5L:X(+k-#"9],^
%:_AO'_/V'W7#PS:E$4+*Ae_NW<E0`WdLkGqHM63i*B9.2_&3D;JRU%k3"Oj+Mf+D[+lPFn'XA$F<YU%f&`QE0p>2N$308[,)$MdH
%i[<q,&)G0^DJF,5iB_&idKroT'SFgGj2u`BhP*FuOFY.b"Zh3D.-NW$h;jK3MJs]s6"UhZ#ut%@K@1@lb'Wj=U.);JJA<$+14eF4
%kSTY'dR?#N30<VP1CDfg.P$B@kt#fj4aV+0)D[Bk1c($:.AWZ3O7Ud_q5S3B/gNR"N']Fra9EZ7Z;$-:mFciEf&/dp#%nXk"H&hE
%@m"iH0=n.!JV48r;+N(aqF.qBl+"tgn(E&G(?%L[#%nY6"H&nGj#hFI0=iULJV48r;*Yqr(Egjp8]Q6cH-b>OZj6mL0K>gm-Vt3T
%*Ts,cI*kY#%O=0XN5AnTH3'bqP]Y^DQ1sXY7>l+-!J<08F99EXcuC,<aVWbIiC8EOhe,JgXWX_fODC#;$s2)fpD.V^JHQD,.*r87
%5=*>6kU'PVdt.Z.lXE=lWBtH/P\ZGB(g#S#pD,?tJHQD,.*r876UAb<kU'YY;hP5Z)e2?GY<oo&;/Sue@U+3)hHR>m#8/^MUHg2'
%$j@[7TppGW9b@j\ClB6c]aFE66np)10s80%mk%^r!sog7;4nRNL4YHWcqV7<V?dD>2TC]m?A3\+U)9,T(g#S#p(lm9",T<"UDTCc
%qC27X0AR9pZIY+gK]e_"a<jkh;>a!UMOjJ-]gZ^U+9@$L$=j4W:XCg;\qq6Zo\`!OK?Pa>'<82`#,NQaQ1sXY7>l+-!J<08F99EX
%cuC,<aVWbIiBY84bUB8#Wid`SV'F!Fp[#R^Mf9d>K/3jV!l\!_E?;^5(Yoea5f//t.&7NVXsaLN,K?#Cm(GiGE$,2!G@hQQ"H&nG
%j#hFI0=iULJV48r;+N'6>u;#ZgQ1LrOnU<aj5Y9*Ikpabp8b`bO'hqao(LI9OOt-bgYnT?&PWWThtN>FO4X-(o@YI46Br;)hY6tZ
%mN5l0(4Q2Vhj<Z8\W7gspQN.Kf68]/h`mS\'LP1,H0?S^FAp,=n*A*NMtMSWT+59CWiRWJ^98o*s%%M1pnfpYQ@ZkH%5NLo-g2BX
%h8G4hC2bcb5rLUK#ut%@K-1!4gctA$4hbVBY%;![;hIi<(^`=L6T=h8Rj)+\G`YXZF@+Lm`Lq=k\FQ4S^1e2'AHpAUAn285Vs"ta
%D:1j127StB+Ia;&KMk1aW?H@^_k$MfnP*c>>)"*ReBgRUoFUY7?FhLkFY1JLN9=eQ,8j%q#NV&@i[1k-IlhoR*:i.908*[s[Jp+#
%qW?ef^ospp[6K/&%/BZJl1K\X+6<)8dd(QB,-O*'o(PB&&b,JB`6[$GFeS[0"l&?5DZq6@olZmVS:(A.NbQ;\T-jU:r::VFR"?_'
%nF76nn\,[.[5pp#Va:JH-Q7[])@?36%FpXkMFMeA6pWUWU-jGf%6!r(cT&Z@T"R0Wo#uakc'W0D$>HC$j108-Y3MH?9-JUj:.1Em
%WE^!YEfo;fHhQa'/N=Dq_(cN_J^Qm3Bd%TI6?L\.1El'n9Ot+hD-n!0dLkN^HhQa'75ts4_(cN_JRU%k3"Oj+Mf+Dk-KIJ47+)BA
%<tp;8&`_#\p?JSF\.jOG3>""jYp26:__pBsRMMD"H&sbCF@)6-`L_0^\AFiF3beuHKHP5-KM8'6#s-'n2t<,,%F0Vha-]CUTur8P
%:HDD?ZtHS&>(\US#TOL$'.A<]Nq(Ij]]c3tB0m[;11MNmKW6P[60X2FjZRs5e0:Ch_;L[dSNnnDFI\,(njPK+YS6RI@j9TZ.P$B@
%fEcJn4aV>$)Oq,Mi0Xe<5k,M0N/)<175m(`'Cm8U,3ac\.uHXWLiMN>HZdg^S-d$iQjB6J0be`"LMlZO2ao\>nfVEdl%H&eMF$K_
%ETK?1FjqU?$GjNJ#T8cW&KKQaRW&j5$dODfaI#LZTur7%:HC79@F&7#V1m-H#0iNKF:)`\ki9<t:VQ*t6tSb,A5"8>:j#2]-lk%F
%]P"F.=p-o1#TOL$'.A<]NcE`!>uXaT1Ed8a-B_(OZ9cN<kU+9>p?^=,CN(U'K4?*I!l\!_E?;^5(YoeA:<7L8M.@97rM&'\Cg?+f
%p?^=,CN(U'K4?*9!l[s^0cmo_(Z!U!9ZVjFM4b7+qF.qBl+"tgn(Fb:(?%pm#00-q"H&nGj#hFI0=iULV2tpp:1UILXWNX?P)IMr
%_OeG%C(&=??uSem:8%@g3kds?iM)eWS-a2^0p/:>[=(oT8NL<cH-]e;[0UD30K:CG-Vt3T*Ts,cI*kY#c@g"m0p0-Vo`@Ol.HuY.
%jZRs5e0:Ch_;L[dSNnnDFI\,(njPK+3"rSP`^KMMe-ciLVPGHVQ1sXq;2]B?"G:2.F99EXcuC,<aVWbIiCq>4(_bT':bP'JK@1@l
%b'V_)-p;)f1hals,?%,t73CQdHf@KF)DVu30?-Dg.b+;`nL#>+G1s9(8$0Uq&-S#MO9q-iJkccKRi8#j*h3O^O>2l>6IcgiTQJ,^
%nt*NUC(\aE?uSem:7rF23mL)Oq4a?&S-aJ&0p-QEeJ6&rFMt][T"R1"&^H&;E(kp[TGS"sc9jPdU73?s$$hUeO`Wq?'uchf`45B0
%]fKm?c@fSE9S?06(^`=L6T=h8Rj+@/H&sbCF@+Lm`Lq=k\FQ6)3bf7#KcjbuKSi=U#``]"-<_\DJMSG[1+&/YW2cT%PE#oMe?`4H
%mD,,$%$$1k#o#`ma*Hkq?Z]3L4!Dp)-B_*%ZD.,HN=]1FZWBZ!_3kiCNeri('L+n(Gj$J\FAmfJ+V-=TP"qseU)9,T(g#S#=%=jZ
%R1KdeM9lPC6UAb<kU'YY;hQqM%l,Jp:8kau(mL$t=5L8b7kK=`&-S#MO9lUc6-$KOP:il7_3pAi)&(+=<*<)r8OnXgmFeP8e<$*F
%TG\E&:*C&]I@QYla]Dc+E$s^,`^I*=75jB)PANYAC!U*+[0C810K:CG-;aUC*TNi_GgT4pc@e=$Qq093eh>0/8]P[SH-]e;[0UD3
%0K:CG-Vt3T*Ts,cI*kY#c@e=$QjC8g]`:oI8ilD3b'WjIW'rZZK#'/R3e:`gkVs+/jGRo5E$jX3`^KMMe-ciLVPN69YInMON`q)l
%+W)14TbAi/Jr]HL9tohg#a[jtA56[;+KZ`ICQaSa=4ji\7r?)1&.FSUcj:CN6-"35-<tZAJhnS9@SC=36>^(oCQa\p=5L8b7kMTG
%&.FSUcj:CR6-"97-=:jnKJObj@n^F:6G3@rDFus!>^=Y%*OQ/c681AG675S<"Wcd"Rs`UX&^H&GN%pI.$M=Hg0dn%sY.SDNN`q)l
%+W)14TbAi/Jr]HL9tohg#\QI^`gFhRKmEco(mL$t=5L8a8*M0QTg:I])OWqg.Jal7h%MHIerZ;]k84lS-<+,Fr(0D9SbDF#;/:+t
%"G(&,A-0_GcnQTQM&5"?i(V4EN/=>DWid`SV'F!Fp[$F-Mf:!GK4?*I!l\!_E?;^5(Yoea9ZVjFM51fbXsaLN,K?#Cm+"skE$b^?
%@j6!r`DFp$*kKH0h%\gAaFfG.U_Bc2-jHLm`g-;bePV6D-3Ss2,'3n*:sa2']#bcE']Da,K8bY_'<82`#,NQaQ1sXq;2]BB"9W]h
%A40lsE,:;F_F6:53"tj*@j:/j.P$B>l,[gt4aV>$(7Y]Ii0Xe@5VWspS;2"Q75mZ>'Cm,Q,2%W!.uM+1lcIpHd[n-5C(8IA?uSem
%9VD.e3lXNGnY2KkS-aJ&0p-QEeJ6']a*of<O1],/N`q)l+W)14TbAi/Jr]HL9tohg#\QIFA5"8>:j#2]-lk%F]P"F.=p-p\!Ac&@
%R6pa!3lYa#FAYaAc@e=$Qq0-/e.?_:#i4!LV`fBLPSu:jU'J_,oFNE6"FZf,m`AO9Mf:0,\X=+&#1E&C\Kn,`aXcZ6%Y"EOq:!qC
%rqU>b?iPQOXPiarg$A+-T)i:`00VTerqQCkeX&5Uo7cJes(kQJf=0.7?f/SNlLiKnO4U"4;1+JO%'RE[IfK3uCr"@]<knY0bB^%<
%W#5"Y(90*=AN]F>X$h.Y25!mJ;$`nYJ</Sa4dd!@\MGZA@S0(G,3`9MY!f;[^([*G\4UdS;?JtV)MK:P$2F9)eWVG>7X$:M5r5C4
%6\%!&2YSB@355Nd]sp]*9V_m;OD7`%Br:+S\TCWMlC'pf.=,Gq7@,3t>S)+"Ol6Xop>W)(30Ag/+Vd%hdR);p+`u1"FOPgT.I1G6
%AZ8"5?PJ.@&`_#\p>W)@30Ag/+Vd%h@OUG"&)H<)DMiBWj["W#dKroT'SFgGj2u`Bii5GWP(J66'f$u<,<3-L2;oaJ(7[p@O<Km2
%6Br;)SoeMQ_Oe0FC'dY2+E0l*9VD.e3lXNGnWZ`W:8C"mO@hF)b)51S3`>=OB.pDkK+f[>4r@0@'.A<]Nq(Ij]]c3t-W2!r80sg'
%F[\#5*AO_0B.pDkKG,dO*)`ID.#*>6o?^4Gkb\VD;P%Ah-(@_B7I^U%+g/1b0<SK2'.Fb<;BZ]%IY*UMcqV1:V?SDG*b7efSPXGt
%0dn%sY.SC#Y$-Jl.2X%&TbAi/Jr]HL9tohg#U`LkA4S#;:j#2]-lk%F]Orn#>(eCT(mn2E,8*(i@lmp//u!'rM3J5_;Fr68=]+NW
%7trP\fo)o<OGVJ[),cGh+Uo07S<rZc='^a*7*:,jWMC3-XsaLN,K?#Cm);t_?m>i+6RlUJ`D=i80&*1[C2.]3j["W#Z3`rXkkGPA
%Uq"mF]sqed:8D9:8;0g3(^`=L6T=h8Rj-KUH&a&5CdP72P^A"AbIl8p]sqed:8D9:8;0a1p^'"$6T=P0Ri7efH&s0aFFdW1./+u-
%[s@'uHZ@R[S4LKSO:%OD0be`"LMlZO2at6>o&*3@X;.Q("*.+VELBn\ZPQ\[_2/j7%]Re]'L+n(GN^AYFOPgT.1Ue\Up<sn[P,c\
%8On^in(EW"(?%Xg#)?1A"H&nGj#hFI0=iULM3NuSUp='q?@XF_,on_C]Orn#>(dP<(`ZGI'.ATeNq:Ul^?DF"-W2kBONLm`H3'bq
%P]XjRnt*P)C(X4:?uSYj:7rF23mL)Oq4a?&S4M<M6RmEtl32uQ:c`&jH-]Z!V2%a?#0i6EA.%S!k[V8I:V=bP6RG_)`K85CKj)5>
%rhLdX:4)]oW\lbuK"rNE14`=jd&A11;aYZUK+f[E18L(.W4J]?P`?S^hQn#"/]*>Y$kB8`#o#`ma*Hkq?Z]5"'.FGIUlnKO\tU%+
%NYkjSZPQ[p_MJs8%]Re]'LP1,H0?S^FAmi+.1\20P"qseU)9,T(g#S#(KW3*M%g@.WR(qc6UAb<kU'YY;hPf5%l0rD:8kau(mL$t
%=5L8"="T#l'Eh+/:_AO'_/V'W7#PS:E$FC0L/bGb<E0`WdLkGqHM6?u*B915_''OSJRU%k3"Oj+Mf+D[,NUq?<3cg1<YU%f&`QE0
%p>W)030Ag/+Vcb`i[<q,&)G0^DJF,7j["W#dKroT'SFgGj2u`Bii5F,Ob1Cm'fpnT.-NW$h;jK3MJsd$6&&@e#ut%@K@1@lb'WjA
%W^X.SK"rNE14eF4kSTY'dR?#N30EbS6RpcB.P$B@kt#fj4aV16)D[En1de:j.AWZ3O7Ud_q5S3BDPTD8O@hF)a9EZ7Z;$-:mFdDu
%f&/q'#)?1!"H&hE@m"iH0=n.!M3J5_;Fr7cqF.qBl+"tgn(EW"(?%Xg#)?1A"H&nGj#hFI0=iULM3J5_;F)+t(Egjp8]Q6cH-]f%
%[0S-X0K>jp-Vt3T*Ts,cI*kY#:8C"nONLm`H3'bqP]Y^DQ1sXa<Jtf?"bT/lF99EXcuC,<aVWbIiC\u[9W>*.V"Fh19lcBT$@DL+
%W\$2mK#&TF3e?9<kkGYDKSs_OE$Ak!%&kdXW9oL`:!sX6b'WjAW^Sn0K#&TF3e:`gkVs+/jGRo5E$Ak'%&rSnW#$T!9h@j6/+;/L
%WtsY^$3l8bkQHd:T]8.VP:sKr_MOM:0r2*VTjE6t#,NQaQ1sXa<Jtf?"bT/lF99EXcuC,<aVWbIiC(i.(fK%f:bP'JK@1@lb'V_!
%.Qq;d2/%_D,?%,t73CQdHf@KF)D[HG*()4/KISL05Nt_De"47_C(3q6+E0l*9VD.e3lXNGnY2KoS4Ipe+dI.9eJ6&rFMt][T"VXK
%&Pf-0E(G[XTGS"sc9jPdU73?s89p:?Q#o@C'uchf`45B0]sqeh:8D9:8;0g3(^`=L6T=h8Rj+@nH&s27F@+Lm`Lq=k\FQ6)\7uUN
%UgS.4Khe9X$9HI"2u02;,+M2LO<Km26Icgii4&YumN6`#?<jlD=&L_+V*[WsFp,j/\0bHKdt/5^%l0rD:8kImfTV=(=4jhq=)Gd1
%'F[2C;P=aPL4YHWcqV7<V?f(XSmt;;Ro!ZbnHU!VY-_gpY$-Gk.2X%&+VQ8QJr]BJ9t]\e"t*:iA4S#;:j#2]pp$I8r?LdaMlRWP
%6ja-R<9OIBTqLF.FH\Ah.Dgq+#8pE2-WFAK$qa$K/+;/LWtrN@C;:7WfWt_'mNq'6QYk/>2)R@UnfU:Lfn<6jd&A11;o>1"m);t>
%a@(n,*)b0OT_&e;G!_mLnl=9cS4S!DVGr_0[!Y+k#qBi`ME659]RC:fo6offDr>![r\j9-o0pW:Z.G&]?[i$#!VcBrr/Yb\MYq^%
%qsnt--2@:`o@N/T+:G'm2kIcKs#XKL4ij81S6nL6rH[#7YofT&6[oPF&/>:2`^9@Mq\AV%V4"l"LHV",ZCqf'Mh$lA0Kju]BC6k#
%_Zk3J7YN%#>&Z)^WlOuHGhuM6`c`6n@#i9^4btEd5$l/!jAF4P%`9]MnJDFeUh@NS%]LN8/)FD:1K1mmHSC4b_]D2Z!?\LRHLaJM
%f^?U)B;T22#EY7fjt>_?N:1k$YKKV12:r"C1,]Jn1fEu9>IGnX<R%*u(`b=LUIUHr/VlL!-GiN(p9H4Y\-/9SG:nV>TJR4%)@5(S
%&CiVq&Bq/AMcluTRhs&:FH^0h4aU1p&mU"4QTGpL,>cSe*S4_hCf*n5Nkdcu<(o?HlAB%I\k00ET"QOF$')g`b8H0\+VH;W@l[L%
%/<X__!LO+[M+K'o=]+NW2\C5]ZdrY9_"H<,[1b8?!l[gZ0cd]ZVJ%Gur8fpc@^6;?<YU&39o'PWlm5daE;;@um5tf65k,J/9S[JZ
%75Z)Fr:2!%0^47j.uHXW-H-IAp51CI\GDXIG8c3*TU6$HY/<0NU7)^Dbj*Am9Z(BSWiRWJ@%.QdlIcQN<8cbO^>)j.&qT$gka2k7
%7#Pe0E:DsTAms*o<EBledS5T>p?_HS8oX/T?g]0JNBf33FBjT<Z:-Vs3;2ncP;)6SW[irmkpF@ZHhMJ2,rkUe04tiNKLi0MNoa)3
%YXkVlLL)$4%OR`CAOWjOh*fmecX)Ua5ZV2%Qmp[$'[f\&a*$(,CfRlrN4_9o'MLQ]lAB%I\k00ET"Pt6#u&"oX.=eb&L^t;NbQT^
%=Ys'.""t0?"-ZG-Z9cN<kai>ee?db9WPEZ.I(9nE1]kWicuC)7aVNEk^q.^19Yb0PCA"=V&SuNL46kKlYuKYeCVJU"(D;;Y-0U^+
%gI-s7.WF&%60;P$"`!_)glZ]"OZVp_/$Y>sWb]?(knb7h@OC<K%bkNPC.`HsjhVga=XcnB#NUd'RX<g]cX)F(!>f&5jj(Te#S\pX
%a)fl[=B*b"K.[Wpqm'%l2D<2f8N/)AfX'1<.D[mnI(>Fo1]kWicuC)7aVNEki0_]rR!dSd:s0[:QDBua47(YDYa"(/CVJT7(E.j6
%-KqrLgLQ4W8oVj_>KjeI<2eo:E_FhTMB2EW<EMk4`AM#je-h7$0b\Y6LMa=c2'k6AZ7Vq[Ft2#47564HUtB,%>(kQp(0hB;RFatD
%dS&!.FP37!&[d3!\Eo*@Q]2?[H;XT32^)5OZe&Ta_"H9+[1b2=!i:LA;aK'5JuGOKa'0Tqi[(-lF[\#5h5&\3cX)4""IE?ajj(Kb
%#S]'\a*$#]>?"OQ_^uBSmugGE\tU%+DGoi*B<T*KJuc$LEi32V"H&V?j#V"?/ZL89d?Y$*G"F&\>u;#&2^rq&ZPR!u_8XuQ\[*nF
%!l[j[E?2L0(=eZ-@*=2H\tg">XsaLNRhRsNg$>i+^g_)nRSak.,&nedNb+Y]&PRYo=rq5&-(@_27<'^2,hP-'?@F389<J#1k?M['
%MOC-t3c(!3W[WLqQKOWVaX0ti;>e6g)0XN9='qrBQ.C?Y:SqAf"H&P=@leE>/ZPecOd66?E_.WX>u;#&2^rq&ZPQst_1gHf\MGip
%!l[j[E?2L0(=eZ-5g+f(\>0e<XsaLNRhRsNfk[dU^cZDHg'JQ.J`8!>R$MQO75GZ<cLN(k0%kn-.uHRU-H(pjp<q+kZHRX1bdU':
%OCjA6Y06NLX/[JUbjlbF/_Pe$)g)#"p11\-T"X\e"g5/nbFNMo&L^t;Np3cB[&Bi'7p-mD\g<nDWu'lXUmm:t@F&8)V$%T;oB"9+
%cj1=A6-"-#-<jGJJqGTb1>@C5:s0[:QDC"NggSN8GGPGo=S(WL[a59o1I9'(fHsg%;hAL1%l2hD;k]L1at61D=1Q5?^$J>t0!XQ^
%SSOo2-t\'kl`a*lW29^,=<(kUAYgNO*fqn8CEi,@B<SnpJ1I_sEi3)S"H&P=j#Loh/?3F"&XHEOeZr#F2D<2f8N/)AfWuB".DZ2=
%I(;$b1]kWicuC)7aVNEkhuLs/Qtb6Q:s0[:QDBua47(X9Y*@l@C;/J[()ha5-KqrLgLQ4W8oT/h>>2Ej<2eo:@SjX-Z,<0Hj@T_2
%YNF$!B;#ncAqH'/YYDR)V?DZU[`(AP:5)lc-jHN;'KbYa.kWp)lKSC+c/NGMTKE5a3_r2^p-ah;'kDFJ3Morb#ut"?J'q&I(%pns
%="80/2.,`%$]..=&p-g&D5'HV*B:S"+L<W`KW6P[60T`8%X[nq.j_^6RP/lJKgq`&#s,6,2VFgn&fb,$O@ba[6IcgiTQHB,LHU!p
%PnI>*c'LN466f=N"<H*&Rqtqr#nF("a;di6U$@ME:qB6'_k+Qq8dVZ%k0'<)Tb/\bJr]0$9t%!t"@lK6A;V\(:j#2]ph`/h]>L5R
%fLcI1XQI\D@Ncm-.tV7k<"ggGBu#:b#FT!l-WF5Gm!W5:e*a#EYI2f/l`0c$-Wk$bl8Cnl%DgBh1p*c,JT[7@Qse#_<*<)r_)<0S
%e?bKFWSlsCoe\8l.jP289@,C6[YYdM<8b"'K?UNp'<82`#!^\fZodX-/$5&oWbT9'l':!6TpQ-IY/<0NU7)]7<I'\jQ#o@C'uchf
%P@B;1H_H];QrH4NAln=a!bF"tFA,=caeG11*)q3Ffp-A?W?CD(&A"ck/*^(f_k#*a7"9X_I%M_pkih6^kND"m\lS\*Yk$td^Jc)f
%f/Elj^3jI\o_H>dO0:c''cQ.TS&@$N7me"Z`IO#S:d*t0N+]8VP20!_J.@W0,)Atq5))GtKSlMW*>K%In;%uOd^J(=MH"*bb';bZ
%8r;u?BL'U.UC]g<!?](MH86p_Eed't`;#-$7FJU%>_uG?I4%-mV3L&$M["9R1^ZN*'(GE1W[C^ZNUFN:JnBU&LB)$,D!jZ^EIJ'R
%H`<7j)&EaN$.>addS/'/F6T9$eMVjM7J+M(M(V4p\KL>$,/Y/hm'T_qE*rg$1F.&DV1kSk6Kk;#kb\Lg7b5Nea\miH^*j2^,K?#C
%m);k\E+B*(;^?Gd`DFp$*kKH0h%\hhaFd0KU_Bc2-jHLm`g-;beP_<ECBO`l,\0;P7rW:"CViLs/N>TX+EJgmKISL04mC%,Kfs4^
%e.N`?6/X!pR6^9UFGtumi[L?8*#j0`8WmmVPnh91FJRQ'cX&94"p[X03(lRb;#CG:j.Vred7k,]N]bB68NNR1MIKCC@U+3)?8/bm
%7n56m9gU4($j@[7TppGW9bFIe4NB9M2PJ9NiX[q6>\VMj0sq4@7kjjOSqKe1p^'"$6T=P0Ri37fH'!<7F@+Lm`Lq=k\FQ6)A82^:
%O'lq$KMJ0W$9HI"2u02;+rh\MOGT-B6IcgiTQJ,^nt*O,C(Y?F?sopdN(E:@NpUd[\;7!c#=onHVBh^/AOWjO*>u#aB.o_%6:OLu
%Au[[KKeud$EF-4(?ZdqE,:!dT<K^+U\tU%+NYkjSZWBjQJgD$4cBXIt'L+n(\87?]Wi<fXOp@C*aX._TT]7\IPN#>ap9LYT3(AM9
%aV$Xc@OUG"&)H<)DMhh]j>eP[Z3dpf;=4`K0(V\^p:@4\3(SY;fb-&ki[<q,&)G0^DJF-Pj?[BNcin1_U>1rSguamrm"JArE0LKX
%dj9);`DFp$*kKH0h%\g#ab)BUZ<!(<&'-WM`FW@acX&W>"c#Z'3+#!";#CG:hk?NYd7juYP;qcRa\miH^*qSY*AO_0B.ofZK]=<p
%S1pWM.#*>6o?^4Gkb\X+8N+SAa^0[I!M\A6FMt][T"T;^&It%5E5mQ+TGS"sc9jPdU73>H.+oFn-@6Km"c.1tdLkN^HhQHu76"1s
%_'p$YJRU%k3"Oj+Mf+DkUh!t/RI!qP(EeT$l%j?@4_s_T*\p\51ioOV.AWT1O7CX]nKM`X)(O;UF!b*+CAjn%PE$>=mFf[\f&0X:
%![g^`"A0+hVhWPm%FIl\Ng2`JUe*V@lAB%I3au?>cX&iD#R=!V3,:i.:^dLJkFnAmd7k2_Q9<6i8NNR1MIKCC@U+3)?9kn(7nYNq
%D*fUH$j@[7TppGW9bEDO4NOm$3hbhr@Sf*p>^=Y%6+$uR9/&>D675S<"Wcd"Rs`UX&It-iaLk)*U$@ME:c`&jH-]e`[0Qt1&28,k
%73laRa0ek[/X#A6nWF-F36<LH<DhOC7t`DXfk[O0i.)+<B27XnMP6^'4EQc?\g`47PNS;naX0ti;>e7"Lb%lGMl>4bL^=9`:<3Qq
%T:f[VF;$==WPK11#FRVE-WFAK$qa$K/+;/lW#"?R$&6e+nb);([6cS^FI\,(njPK+3+VS&F!p4*W[irml%j?@4aS's,$6Wei8b34
%5k,M0N6=-DU7)u?1O5)(PAERN'uceeUq"jE]oG\o))Mekg!f.!dSS?3H0LoJe[5Z!9qGkg,b%V@K8r1L-H)JKm"JDSE7>#CdjJZ-
%`D=i8*kI1Eh:1A]ab*9ZU_@MAU>1rSguamrm$1P.E7b;Go-\V]`DFp$*kKH0h%\hPab.g0TF96W&ETdbj$'ZZB.p)bK]=BrS3Wb]
%.#*>6o?^4Gkb\X+9cdgHAZnG6!)[W+3puU^HhLXC76#7<_&3qJJRU%k3"Oj+Mf+Dkj2=6<:t?!%q>n,R\]A`D4aSp6(*#?Ni"QNh
%5k,M0I"uUV75leXEj@<p:mNT\p-lM=l%j?@4aT':+riY[i#E)p5VWspS;2"Q75mXpFL!X`;"cBg$P;EsUa*mEp[%!@MfA"c__3?6
%kQHd:T]8.VP:sKr_Qf;a0o<2;TjE6t#,NQaQ1sY<</Y_b"G=$/F99EXcuC,<aVWbIiS_htQpo]/:bP'JK@1@lb'V]k.Qq>71h`a`
%4@'F@VlE&G8SdO]G`fCgN1N/P1eK["b)51S3`>=OB<S7;K>T&BS4=_9."6c.n^("Ckb\T?:EF$f-(RkT756220s80%0<&-.j!P\6
%8>-\FL4YHWcqV7<V?k4<*b6H@SPXGt0dn%sY.SDNWEOrW-lAIGTbAi/Jr]HL9tohg#R=0IA0rUn:j#2]-lk%F]Ormt>(e+K(n=3l
%'.ATeNq:Ul^?DF"7o17;.OCW^F[\%[D*OKd8)CRR<@u'>'FYDIO:d<i_6G#`#oD!ri"4%`bb_*KWiRWB^@*Fjrs3uFZDoK9L4[7`
%'KUfVD%L7\nT-p_X)<f&%HTSs;mH^0<YU&@f9<apUcj'1eJ]Dq_;K,:R6^9UFGtumi^Gd`3/I,JZRP-lW[irml%j?@4aUVf+rj%f
%n;HOq)]#+a$9HI"2u02;+rj$sOQi!O6IcgiTQJ,^o$2HDY9/DrFS>V+s*h`^++M%fHMrNlk7?)D?U$>15=U*NcM$:BJY2u>p@ZJP
%^]+uQI/O`<fD!U0AmkK5i:Qp03Zl0Cq=AInlR/>ihe@)sodB(_&"JD)Ll)65q?k\]rD%Ug\15U+6k/?pl;7h[O+<;I0KkOBBQ=>T
%*+LfoM'D1fn@9.!k0gDcB2,Figca/;DPeJ/!;ZurfF?:C.=rmj%Q0oC.7t:Gf7M>.a>DJOK]dbcQ/Jg=#';Tm#R&LD^rL;ZSj_k3
%gG'E80USS$OYeZbgkSS`I-3S,<gDHXTa#Tlo`t]I7_m&]R%?\X2#&`T:t.:R.2i=[cX>(182Iu`G\<);Ouk1m6*li&7#GZSki90h
%:TDR+5!(/r@Oss3+t6c9bXk6T/*bfOWcm;)$3lhp,82=C"J$%>2B>1D*B8VU/;@&'.b*lTa.I1$\C-s3W+lboTO;^d2)7I,-g:=8
%gSBaDC2a176"X$C#ut&Kr5hEa/+)#2Wn-)2$3kZOUEU7*Jn$i@'.o[;_"j0!)+dCI<*@Ug-Q<ApW+V*h>(Pue#i%t18s$Oh3jupa
%iD`MXNh8GS6qTA2b)23BfuUD(Sirob$#Z@XE$7(g6/j6TfFHYhMelR9qW'pH;UPkO=*4A^7YiS^fgDdji:70YpJE.K,^+d"n$#Nt
%aJK0-:S)&;-(@_B7E6H[7(BOo4el`um[dg**Ao<4i[3mA%blYpCeA[?j?^d_dKroTFSs6MLb%lG,HB>Ql3R[(;'Q`"G(PbCYYD^M
%V?TOd*b608SPXGta.I1$\C-s3TkY%^SmYqF2(AY^,<2Pf2:8.d%\,Y,OC=Aq6Br9+GI!@hML+uH.NN'i1h_&0O%^/Q'Rb@qm7CA^
%CWPGUK?U'c'<85!plg[K=5("D;ltVe'*PJ47O:U\"<H6[9t#kT"QrN$A/$>Z:h52Bp;/^*m]:&^Vcn[f-Q(W,ND,Gd#s,f<2X)ET
%)H](HN_,IO67lPd/dX9co#c:PFK-XsFb7Fue>NM,S"O7QC_JG,.D`!I#8ooq(T?GRc6^TP9jVP[*_s*IQVK6ELDlR'YnM5,LMbI.
%2Dr!eo&'qN//=uB"3qoY`C4*1c^mk="*[Ko\:toi+E8':>_d0j75c/GF5ij&-n?$IpS)_!Z4Z(gHhM-Q27R[Y_(F0X"Gr\Bj#_(@
%0!_ImOct2JKsF^Peh9)9,T@o0ZtE13>([bA(gKCe9T[m53kiKikouT8S2f1<6RZ.RCAjlJ9sPAj8pg8>W\q;*K#&JWa97?jT]8+M
%P:j/?_1@eu0nZc3U"1kXra[7lQ1h;i<*IAWC!`rS*gIq\.Jh[LgCl3>QB6BUD)$XJ;k]L13qd)/_p3T%=K3[WDM#Y5e>NLA#skJB
%YY>Fd9acuN4NIXt3hbhrN^)2&EMYgF.b,Hm2Sn;QC1Mq7:=/MO[Rh:geDR^UK++EK'<85!plg[K=5(!9;Q[cH'+F<$7OC[m"<HB.
%Rrjce%1\jiaS\UjU$@Mq5M6<^V*0/PeJd4#_;P0(A:h`pd.&-b8Jg(0i2k%QN1ZmZWikR\PDp,Tg9X:IXat$s"K\4b6m,e=a0SGQ
%/;e/W;3M6Q505-N<RENK)Zd+7B2>>WJ=@l&>X"-@OOsk#^;Dkn,+BM'1jP,?PAERN'chX_&`LlYp->W(\7gK1h:&;*M4:/J4)>Q_
%Z73UUP6[L=8LIJCdIAS'+g/1bc_FZrHR9S74cN-sfEjUQ_`$a'Ri7eQH'$F;F@+Lm*Ik@,i_"Rk33"hiB7f&#S#9*i&iW+s[UbRR
%U+*o5P6[L<aX0tidBP&<)6U&R:SUfS[S2<cnMCb?K&g3.d!7hg[WuBrffV`4bN(Yf:U19q2X"XHZAEO54aS$r&mR3.i8/0IK#CC1
%YoU7Z(YP&2ONE.!SYQp6q4_q%Z>l(0g9YEhXhc"k%'H-j-:mJ+*T(:pFHK9,cBp`8fEo,SX^?1Q8N-#-8pg7[W\q:qK#+S<a97?j
%T]8+MP:j/?_%Dk9R6'$$;!SpgCQa[h][EB7M/!K;Qsamt1bq@+-g:=8gSBaDC2h/16)IDC$I\JGkDl>^_%lY05u]pb_$#BPVi_;6
%=*(+KY*4hmGfllc#>CH&bfNJ2g:c_*O_f]\d[iUWC(9Tt?uY5GX2&ZRGe-ptI"uRe75d"_?a;=S::;Y%qF0S9A0]$Xp?XM5CN-ri
%K,^_N#nf<ca*6/_?"?ldj!FS3iaf)VX^?2Ja[V(:mFbF:f&1]XL>OPP7OC[m"<HB.Rrjce%8N8VMh.(o$FP?1nL#8!Y-_gNU!c8n
%97pj62"*kcjB61nhXJ\]KSuiVA@U\\k"W,f<E=5.a[V#Up$<Pq95q?CJa4YS0oPZEZfp$OgOtK$>&^q26,lXI#ut&Kr5hEa/+)"7
%W7KmA#mRk5,82>GJr]<(9tJEC#"M<-AD/<":j#4IT591jd[iUQC(5'H?uXdU1-o@skkGYBUl0&(E3eOjL/$)&<EF;?a[V(:mF_T?
%f&1!D#'Wcd'-qaQNpj2H]#^`Q#>6+Keg-e_F[a@.\,F\@+)0&m5IC\C9/*Sc)ARgj&KK8nRV:)B#L8SsaJ_ZkTur7Q]C5WbgHVF(
%4aq,NY*EC6dkigG\igU9U[W=hF/s+l@'/KM-;CcP<E=5.I:(=UrfQm?ku15oWs"'5VGRX42aPK-fHsj6;h@po%l.g]:8kauj6pJB
%F8JJ]Z\M>Y_5.bQm[4oZLr<'8nK#&0(YR<r:s"@6RA:LrY3>YEN=]1Fq<mbj"o\7ikkCFIDmLfV##1^3*e!q^j]@Sj(IPsPs8D+=
%i9LolDa0dUrV8_Ba3Pj1O?cQQ:EGugdkCr%0Ap>5VQkRt4R]VS->0C_aIiir+?Bi(f<7j]8\lZbXQ6Y>1XVm]RMMD$JVd%3&t\jN
%;j0"<!bBZ26kGmlr9IF]M54OB1KFQfcU<NiBj,I."=C3W$.%AmWPKH&!A\=T+c&Shrj=9*,XO/p)(Sk9m$VN`+?^+XFhi\%SaX5;
%Ssl.R&g2fR'S:!Di*X)O9d0`SS@t*Y4GtNnjSquu?um.2i;8CUf'KBH*@cV$B0rGVAr?Sq*4AERfq`hmA4s7AU.Bjb/Vl?a9Q3E`
%C\IDO!CJ.NQnt]T-liG=3fo=2P\gX6Pu?27R;>iuc&6$A2FC_`c^I#1e\G!Q#3JVE"H&nGO)`iDVeg-VW0Dq@As,laWhS-ubn*t1
%ZY!!O26^)D@0THKLr>>3j'!q,WS%au.coTiR:Hu1W$pe91Vjh!][*2+.U]2#!HTT!!l[s^a1#l<6a\3o<6DaS1J&ok;,Q,bAqllL
%XP)',#n3(E@*YQAT_Jiipm-nYb-hJ.8i\kH-J:ee.Z-CA$ur+,C\IC$"%+@PQnt]T.#*=;`apBcZE7Q$8i\hG-HSY*.Z1h]1W#FM
%XP)',#n3)0@*YQAT_Jiipm-nYb-hG-8i\kH-J:ee.Z-CA$ur+,C\IC$"%+@PQnt]T.#*=;`apBcZE8\O;@_!@8N)^2MII)S6X4?O
%RQ\@7^fF$]hp7re)3NP`HsB<51c="g6_tcm23Vi#'c"\-CaQZdSi(k0#7d"aSMQs<84,iG)@tSuMem-IW0Dq@As,laWhS-ubn*t1
%ZY!!O29\ri!p32!"H&hEO)N+\VJ&V1W0Dq@As,h5U-ZhjCh1&^Si(k@.tOCW%*Y-h#o#`m+60Yh:>+2P9;S/J23VPpX^75R)DWu:
%b'MY*l)b)C8hr)5;C56<"FY[@7Q=s`!^ie(S2Csr6!CrMG6FBoH)3Z>p@MAf6R<V;1T;$9L4VV/AL!bOXb!TP%R,4d3sB<jJ6W[c
%?K;joXP)',#7Ql.@*YQCT_JiifTqM1b-hD,8fhNfA>:>c?Bcslbn*t1ZY!!O2)&!mJN8oTJRU%k@pCq?.GGaX.]'=O1Kg_Kb899+
%?o,`dp8lrr>7D"+A73]Y:7rF2qA>QYFNV#rL.^]GekDAZddfi;-.iWGV*/VfoMu&],oN(+W=p\7Jj.1c,Fu-BJY?!<RPg;*MR7b.
%m(m:i/+%VS4gbHK8taItO=?utU47THD8N9@&f`BtX][G_WCX'+`>rc,fNHOh4h[,r:e:`N9ZdK1#sk0rA>99=gB'a=*1SmMCa)jo
%`?&iM\C-s+H[;`DTooi.RFDNW6U;gSZB7o8f"b*2#QNg/b@)'`W[RRK1W5RPXP)',%1JM4@*YQCTGS%4(mg5(b-hM/8i\kH-J:ee
%.Z-CA$ur+,C\IC$"%+@PQnt]T.#*=;`apBcZE8\O;@_!@8N)^2MII)S6X4?ORQ\@70OlC8B$d?28DFJ7VI:[9MJ[m;;@_!@8MZEC
%MW,('"'e.<RQ\>A^edT,k"P%CMP6](ES3m\ChoE7;U3OU8MZEcMW/NpN,W>kC\IC$!^e7OQnp0)."6b3^1AOZZ7UX$;@_!@8N)^2
%MII)S6X4?ORQ\@7^edT,k"P%CMP6](ES3m\ChmFWP_6;SP"haPU=b+C&6ISlAl!>&bYh"6k"No#MP$Q&Dog"sBM2a3P_6;SP"_[G
%U:>j#$s2#dAkt"pTb?R]s7,KYlp>t8'(gH7+rcS:PjMtF=XrOgXI1=IM.k7U#8n-AXCoeLhF_1S,Qi*7AHKhHd)WV3KN#<*0N?32
%=Yn/Hdcs93,M9ZN/+$KGVmdQ].`oJr8Y&+$'_F+4)sNT(%1JMBE7R^e"_me,g_+G[jd#P@g!a.7%$b@2cD44.(^g*VQ]6+0[K_IY
%3B1e$9,21:U>-AthW:$rXP)',%1JM4@*YQCTGS%4(mg5(b-hM_8fjKcPFVc^H9eV=.MH&ac^I#1FhggF#3JVE"R<TZd<T%'RnrO8
%D$LK7;V%q;CfI4TMfM7j)<+88f'MY'#)5`*0PAP7^i06t\lSGX/fX&>D%-o=datRg/6/M-MfMIp)<+88f'MY'#)5`*0P=92:^dMU
%N6=[OAQo7(V=ZW\-;,(fq4cMobn*t1ZY!!O2)&!mJN8oTJRU%k@pCq?.GGaX.]'=O1Kg_Kb88,=CkfIJT(go:>B$MDlC>s$UOi!?
%2!DU2Kl+]+RM$SijkP?5BK9TI'c"\.ChD=&c^I#1Q,$3f!p31%`[oV`bbC/:fa+Kl>@=CoKE(J8jfjS@<>9ea)<+88f'MY'#)5`*
%0P=92:^dMUN6=[OAQo7(V&]EMa-OUi;H6T\_.JKRm9-cn[i-)5ahXE<SNnnDoJ%s;l'-#o%$bl&$QiR_Rn-OJYm6aAY-_idT&+3i
%W$DId-?TC/:sd7mCnt"<2)&"P_686&3G]m>'uf%=rQspRC!W52^"'o!8VS*>.3fHeJra]HLo+cG@&T<B?hqodfL.2=MRi3QRG0s#
%Si(k@l[Y[l%*Y-h$.SX!k_p4)mUpF"D%3gNb.1Y28L@>4;;?S,ceSM^orQiq>6t_'A73]Y9VD.eqY6A9E6>TlL.XK$SW>@X9r+e`
%f_a=Ih#<H0XP)',%1JM4@*Y!jM,4TaI>l?=3b;Lt6_te#c3K]R-;mi@m(m:i/+$9Qn"9XWq;_<]iV2Y-hu6LKj7B8Kqkn=cZ:YH"
%pkF`DMRJ2q5@29HT=TIKrqPB;VnaGh8I7\\"PG3^c8siLcSFeY:YbtV5D$Xg^BSf0p%dRolfY)g^L$WJIeils$fL3cU>Hu@IJNdh
%n@rnt@QhfspkrY+\qV\jM?+f/;N:K6j89'7gSeY,ZSeD^Y)s!aPCS_Q%*>);=_!j_UTHPrY_sDgd^J(=$<19cQ1:sS=0fHl)UMpE
%8-I=3^rLDkA5B/jZ-8fmecRu#U.19P/NB'u($;]YkC!AskjGk`FP8SZ5r95DnXD8dPK?C^aYV_@Jf&]/U.Dj2S1B-tmlTK2)mCT3
%\M^&?Y#,J!OarMMbfQGMR:R7!l`DUL#$uBWOJ]kV52a9Q(%CQ)=H[=+2/(!8UJaW=73BhrPs)Z=aYJ@T>LO5f0=hihjat!pb7%J)
%ZZfeo_;uF@cF_F0PSSjG$^m8S$X%#:KeH31W/H4nV$aVY;%,d(N%=AM9<]2jFpeKZ?K_NLTqLF._m7CN9id.mG`.2J]VH4@XsaLJ
%1WG^Sln)=tE52VZ,;3Rq@RkBRB3."MZH>cIR;[),OdC/VPnh7ZFCr&"T!\c<$1>8FE9)^HT_JgS`\T6:GRh&X6O$ecA*,),:h<)c
%#G!;eg9^N]Xhb/W"O=ZA#o#Tia*?`X'/.P1oT0@q#8qhZ-WFAK$pnTc/+;/LYSQ2P$O2AmkQHd:T]8-:ZcSPV<f1k8`Asf%Z3aN3
%'S"#4Lb%lGS$:K%M@0Wd?H<8,T:f[V'=3O^F]N7uN/N=I]qc=AXsaLJ1WG^Slr@/GE5r-7@kVp*`DFp$Srq^eb<@FFAB;_Uk$HIB
%<EBlecl(ldHhK(n76'F]J\`-X,-`@P[^.]XE*6kNKhT$:aP]]PTur7%%luLO@F&87V1i`r#0l(AF:)`\ki9<CZR9*==r,L?(C-@U
%8LIJC;%,d(N%=AMgTVI0S-oBG?cWA-T:f]LV:hZf8h2c0cG`(=?a9u,2X'q"NYH]kZe&Wf_*&SCNkWjH'LP1,H,aH[02&D]iM)6O
%be@U$CAjm^e$++c=5("T@BI@7(C\U'O9lUc6-"64AeQgjXjiG((C(h,5o6KmMfMV?H(.mlZPR(&_G(gT%_p?s'LP1,Gm7oF06=60
%O^/b.BDc>C+KZ`ICP'aQ]Y^8R&ShcW\mTLRKhe<9#s,dV3LatjCSca/]&o[G02!$pqk@=/FN1i]T"PbP&am5<E;YDbTGS"sc8.MN
%I+`;3L^^n/N;8gR$M=Hg\LHa$ETK?1-e9JHG/<,7$_9O;'QfjXFuK0%fLcaDG0q-/0RFQ""c.1tcl(ldHhL@=7C_`:_#YB6JRU%k
%37%)1nn#.m+u8S\0d^<%.b"h;`?99B\FQ6!'h]'?G7BuIfZ4cT:XR4-Ve8f<bdOUHo.KlK"D4]$X^;cld$\@@4aSd3)VfO&i!9aZ
%5cGpje<'4Re<&KeHH<m[K?V-,'<82`#,*imQ1sXY=Gq.W"bSTbF99EXcuGZQg#U=s.n+".`Bf5ddKroT'SFaMj2u`B@]W#.nUeS#
%(cm4W.-NY:!,_:<]9OQqo&:cj0^47j.uHXVN,drBHSa4s>^=0D'F^Nt0be`"B7`&;ZJJ1cR<`e60pm&LeJ6%GFN1i]T"Q%X&T#-'
%?k.pK8DFK2CBnMd/c2YlOJ*HqR=iU.<)lfN6"bj$lIieSG2UdV#3TCX"H&nGj#f-)ad3H<MK%n#3<iot#ut"?J&>lS/+)$5Z.@ja
%$O-iEa97BmTOU)O[#(+Y=),h/Mh=^?U_Bc2-jHA$`g-;bm9#9cm0/-+0Q[B8:sa3R.GEk+MCV,+m_qI]@F>H^<tp;6)<8kdp3Nf/
%0_g78;&D'>i[<q,GDeBDZK"Od)16Fc=dX"lPnh7[FJcRrT"Q4=%9\&fRTUJG7KV[g8^Ma8Ou_5Y<6:FV%pIb9EK4IpCdO6n3rWM3
%`1?Vg"^,V[o*'ca0Ot7(:XChf6/'9#Q7Fh'oYj+n@F>IiISoM>3cFW4HhN2q7C`2G_.a`IJRU%k36rjenn$(2+u9&T+QG0>!qcU_
%\LHaTcR\J;/$]rLmL'6>@H[iOTqLF.UU8.04]dN^n;DqC_sCC%(Egjp60EZ&H-b?0[0W++0K9S1-Vt3T*Trie9tlRt;FK)CF-)6G
%[=Yc75ctDG1L+A7?BV]"[pLgK&47gAhr'@^<mP1m&,P('V1jlCW/HM"V$aVY;6C3d@pF<*hNG8Pf3^3k&bD.D[spMm.lts39q-N5
%Feso<^M&RgR(Wk"!^sRJk_sNC4aToS,2@[ai(+9I5VWspS7e?Mq6K<Y&K-,H(c*mn($YsY@LtS1>^=ZPPI1Z4?naPR6RP\="Wcco
%VbOlV]2D$D?o5l"b[-!L!MUEac59X>ZPI-:+WIXO1DJjUC7m[h%Eck%#AR&IN4Z0b,;@Ct'pD@jZD.,Hc4iA-fpf:ui!KmE020?4
%*\Gn9d@t,5'=E[`F]Wn1%#fgt`M=0IXsaLJ1WG^Slr@2HE!HT"@ki',`DFp$SrqafbJ#JqA-g1@k$laF<EBlecl(ldHhOVD7CWJQ
%_7:CDJRU%k36t98nn$dF+u0>^+G2E5KW6P[60O8IjZRrnefrn$_;J]0SNnnDFI[!B2YjZK8eDqnEKJ;0F@+Lm`Se6(B^Qsfceatq
%#R=cl0H*;J,^'=2G'7U6/h=-4O?"-_)3%38<*<)bIG[i_rXnkjF]hpf%gIZ]0m!J>gE=WCiobbGf;2Q+E"U)MAn/+Q<E9f`hq+(&
%J##5S?e--#KYcS_%%0BN'6K1GXu>gUoL]R\KQ3+4Quk[F'uf+OIPUYY]OrnA>(iA!(`\RH@1eBjT]8.e[E4c;=,P'IN.XgEU_Bc2
%-jHA$`g-;bNEM0I(,fQtA*d>"AbQgZN4W2]FBNseL<RLoaEUB:U!sWqC64Gom^2RgmH7:+T7<DZIY@:hp#k)%:FJHbQ[Ar6rae8o
%q"EVF^46+O/'-nO)o'*Os)K9ucT`"*s.*'*o_D)#cd.YY8+-KXI,+Y7s1\I11&j9+.cJG*+,:mU!Q>2^P=4I.N]00ubj[0g?,R39
%C2P:bi[!Gh^R=?b9pD=jYqq/^%^DCJBEFu>5ct/4Y3Us(J'lU)/?p55%Hq2;,XgW;i*X6%kl"5?N>o./KR41`QCIRNdP2kG!>3q+
%`B.j5Qe:`a#';@S&gD<.n?:`.oDU)Z]T(P]_>V@.a\@*`knoM_J-b%6]^rk7955hn"$2Vb"d'W.pt'D,H%,oVD'O/rDbi/_jJG"i
%1^qGo5_SMFm]7R;6G%[cd"U7'Lr;j"^NMETq\prq2H"2dp,"T&\>bMg48fZ//\lu&/)/_r\qJAmD9tu:7O:mT'`DgXMnHfu3bBU_
%7rM0h%-+3OJJ8Ql0po=tjZIlRf)ja>_;HdQ*MF5[oI1nm]Vg:=fIS.T\*8`<**nH/F&9P9AqDPufuppLi7&2?#BAr5ePOW5G]n=-
%\Eqi6i2\rK3Q;mG.Zm>Tl4#K^>Z&fgc*[Y/DD8;L6O'?0"<Z7Kh`](:?*f&Tgu]G832f6F#c]]%["%1"CG4<;%br1G#)A.6r<.Or
%B79MbF1,Z_=guX)-?(Yq<"W)FO;VF24aS[1#2HXQhuXB+U&#)lps/Bsad0c3'kGrTa&p)B,uR<2]g67^/*be<\TZo4%0jjkkQo^8
%d)UAhG>G`Mea1(KgRMaJ#*VRm6+&UUqS.WR4cjF]0%s]PpP+W'r<.OrB5[HSb=p.b12!(dCu1ftW?eG!+>^hKp$?O#4)iCJK9J69
%KPDq!@m!Dr-X7F%G*"$)*+SC@Pt32eo`gfjY,H!ZinAr^2Ak)Y+TkV(Jrf4Km%.`*Vcc8SCibQ3)cS"]"P"B#g:q["]nf;^RBR-h
%U"ec6MP6boNH\b(2dCQ@FO:!?*+S%6Pt32eo`gfjY,GuoiS">(2$i!I+X9rN5p+u:l^hdXUtJ#1CNGG_)b_GQ'ZHMO"Ls)U]n:)&
%%bG*-hM.%e%0_0=B3"\Zb9"n<S?:$bVJS#DZuf,_B=PUk/*PY"\2N8W%0i/9a9^<ld)U>7F\fFSd;0qX[5l7,D5`&nFAQl\1@O^i
%HM73;*B7,Q_,2.468]JL0qKuQ'.u't431ZDNm4AZ2?@"XJ6i^Z?K%1@m,;.VE2a%oHT#u!l6ke*4#=Gq=ls?4OI=gDbUjc>MR7G$
%0*a6G>Z&i(]X7i3C+qVY6V")0Jj.2\TR4OeH"I:aW(g:9fVh`E[=`ciOI>$aHM6-r*Onmt_%dnM68]JL0qRpj'/$%9430BuWa`e6
%SKb0VeGFg@"BX*ZQYu3+Bc7Bif[(51TqIJ:m,jmYfpgY\G%jkij#-*9C$hR>K?OI"e?_V^rRH\(1k(5<G)]ic#k\uH6(d%=A2<oW
%C;[0A^]2A#D2Mf37[YGP*E6g9).3\4Hf*BY*2GmYC^h8U2A#Lp+D\NcJZR(s+D\>E`afN.O\15j%5JT%;9tiB[0*mO0Xt4P8#V/o
%5/oCCHbs?%Ad93Jbq[da:l/-a<,[kdi/2jSWi[:$6\E4[)EL2B'_F,ONSG1"gG1k3#&TAT<.df=P+[,RbQM"sZNk@7^]bVbmaTSq
%WhH)Hn]^$bE1*!E60;g$N/\`T,*`;])e:;*U7T&0CBk9p+CM""$HUujB*%2)\?+]PpUi-$N1]4b*+PQEP=PjC2$TK:YEW\GfG`Z'
%)%<[sck3:OTTAW%igt+WPM(MfZT5u[%472eJnf/4oR@$-Hbn8;S=IFR0[8Lg"4^2oa*75r:U]W2ng;/cfc4Ld#*h_*61kGM$*L4>
%O4W*:CGQg_UnK#46U;gSRDR4T#Ua/+OK$nQ@ughZ80pRp#+5e#W+YSMg&Xi&#b7Y5,?-lnk@"W@\0kJ2@lBF6fc4LZ#*VRm6+$ob
%!Nr).:Y*rZ2J.SRM<;tuTXUgRU<i.c%,d]^+IS8c9Z2Y<S770VP=QBVYm)$Dn"=<se_5QF1)M")+X9rN5p,";^-1/T)7+m1bN9WD
%1oNfG3iKLiR<NmE4aX-Y%U>=9nG,;_]iQdb6U;gSRCtcB1)I9Lbf]&bgU!R\db7"#+3;+6/*be,[<CK,$jNVBkQo^8d)UAHDbmko
%`U"_*Z8oqkN&jC24/hlURC@E04aWdO%c!8ai9C^kTc+:7(sgk%$(%3M*Fqt>*+O%ZRfG$g5VE?hm9_m"?Db+1VdqJ@3($4"m1l,S
%4Ebf/2XfV[LKQlcACD3%1V+97kFc,kA1"g\Sio\]#Hl-UE,4SD]l3pq865@;Sr)280%2L9aFnB0@V80$,-;m8qglro=4FSNB^NS9
%)%=g7ck3:OTTAWEgR`@eL"ScC@oF*U1[5Zgm@\cXbQM"sZ_qL(_!MsI0$MZSWhH)HnI40DE#F>^6&&lJ($dX?'PZs-H@sEE=4FQW
%BW3,\YsC/uj41#'?Zu^F-a[dFras=jN!?j2Ro9a=?kTF_W7E(I^^b\a!3H^?(k]V0R88WihVJg%5/&gcHa72eAd+T\bqV+f:l/-a
%<,[kdi/2jSp8f8o(5(QrP;765C+/:U4A3+1>S^^jOJUSL@nm5n80pRp#+5e#W+XH%g4;=?(gN8u,?.#r+6+6D4lJ0qZ@e+Sjqp`H
%W'i*AW]/!mE()p:ERkViLr&#2$lu#[$MkUcIdIH.h3T-m+#_.VO[19k8Pm*KgX"1E&bYLq=Z^RF"p6A2A3am"n8Y#Tg64(O0+5iX
%ClYbBK1_qsTK;ta+.`?TkLhr'(>pkT#3TL[#e`Cr(S+i^X0j<[p0Mq#/8S'9*J6qZMP+/M^)ijD,O!eoZSp_g$jN&.a9^<ld)U>7
%CJVAI]kegDYW9^<$n@B3K'M`55<A[3e?db<mD(_!%$&>tEra`ed)UC>C/;?U]^-bFYW9^2$n@B3K'Ee#'3nDt"2pTIIK+[9nb`4\
%U1urk;P-2Orqu`BNRdLt^&BbUr2Xu@?U(anrr+^;Wc+N%A:4=?aQYuc7o^OM0/Z]Q.LM1jWQ+k,EP=B'h,1I>L)SFPe4=+`V3?Fj
%i@M@-:g#iI4bK[nk%O%R$Bhgu\J2!P\1?TBgT"e.&N-5VWKG9U8gaW]_jP4%Te^gIHWF!bbiR@(.$D">\J2!P\1?TB"05sV(,_c.
%WKG9_8gaW]_qAcfTsAr!H_sXNR/,7].$D">\J1trIq:b2/#u'^)`=;[WDUb)8g=?Y^DUiNR9VqD4Su'+a:6[a.$C_6\Itk1^([(q
%[7YHE;?OM()MO-R1_T<JS(6)R.0CunB.#P?0r:<K!RgUJg]or$^B1"?[n?3BU^#)&C/d71dS/'/F6?b'Y3qq+hkAQljI0hp'M7D:
%\qA07=4jiL=)GdA'F\lYd)cbJ/HhU[ZJh5fZ@GOTR7^>CK.9J.CAXYBK[(E9hQrPM/]+V($kB;aaVZO_Jr]F2\L(Zq:amT8.1Wqh
%Jki8UTGiL/(g#S#k>s7PbnLTQWfV4^'g%"W4&`9gQRu0?aCpH`:91$$W[t+BTJOJ#p8e^(95l`lJ^Z)Z1<YQITOU*JY)2<c.Q(`s
%`B!ZmYR+;F<.E8_@])A9Lt*E6:-mgP$CP_:i[<q,c`V'CAJLIO18!R!,:hu2WXGgmk_sNC4aW1=,2>u1i5c7r%('IlkW$nuC[u$V
%Pp.2FER(BqCdOBje_dSKi_"Rk,c`d^U4U4X'f&p+`D=i8SqYe7b<@C5A4X[*k>oq9<>SVecl(ldHhK(m7C].F_7::AR;0];cuGYF
%fAt+G.RdlB`BcFacj<\g<.iO8j2u`B33,KXW.KTN'f+(B@RkBRBBV53ZBRrhR8e1Qi>$H$Pm,\ZFCr&"T"WKC$e\JgRc2f\FL7m<
%U6"mU^7K_C93FZ,<?-+/"eAJ45rAq=0s80%ca6jYb:3d&?QkWp<r<(@j,Ui#>rGW\+lb$^3l-DB.'fTBPE$?$g9\7lXhf,p%,[F[
%Td*N(6-"8J?^!.lW>+=0MKA3i?k[;RT\e/%H'qafZNj^:_2/m8m]_epL+@_)Nq)JN-=58%W?F&J%Q_TJ\j3A>e9cemgV!*K^"R35
%m]9f8N.k#]>VQq7S7_s_q6H_e&XcjCOA-LuK!bLX]dC8%bU`&5e#g(:fEqg!=m0D@'gG")GEuVM/j$)?OMTHebUeZML"\_hf*%X!
%Y.SE9[p"HC.i=dfTp&&L$j@[7R=e5JN2]]C<`_-?2N(mqH3'\q'Qh@)nt&#(C(\ao?uVTh:3Knt'QfjX'/oZlW(IYi?I>,B/UA/s
%"b:ntcl(ldHhNW'7C^$__1<@_)0a%rcuGXcf]:5W.Rdlt7:WL-kZ+Pt!3/?KN,drBCX1Jf]/[UcG8IEhp]X/'?MR#\d.rAeem\/S
%'us>Mj\&'Fo]9&1<eX^AW;`GG`D1dRVQ2Sa_LfS&(,D;'V1tXA6RH8@6O$TU+\O?r]%;O/W4JW?K[(E9hQquC/]&qP%.:OMajqts
%Jr]Hh`$Shl<[f56/.O_pJki8UTGiL/(g#S#f3KuF4VeHd[a<.S.u&Y9o8LX8?`$jQ,+C+n]%hm4W4JW?K[(E9hQnS9/](@#$nf$9
%am(C2Jr]FR`[5'd<[f61/.O_uJki8UTGiL/(g#S#G?ukQFVY)g\572@eR'-qnp=ppA,PcJd8`6K3fAW.\6ouM.]Dd.1Vsn"m'51B
%lT1dVbED28^,P\6W#(!fG#)+=<EH$q,\%br4kL8\UGpR12]BNZ)Hr,[s8C`S4F=2Q,'kpKq,?pppU<r[c#Y+1FEIdocbdL[>h$mo
%Y;?r93mZWead9V@)2*4@=Q`+*glttXec*S5&4bH^htZIR]VC15(V.Hc]EFOLU/'aZ5W8.QrMn(npU"&dD(b1>=r5]nYqsC^GO="r
%3X@BRiS\Q*lJs9o)N$SHk8"s%L3KjWLg8M?Ti\h0;efT;)oU#=8)CZ2rTYN8Y(_F.\gWd.@-K$g#R`T5-=&65AIQ,S`Bs$9iMP,1
%W:l";.?:cN^AsQSjN?&P\^r.Kj.3E;4K?;lj?D7I._1TTTZ)7^XRgHKDFu@Y8q4>_i_6uX>@8J(pU5&1EYi;-0eE8kS]5`MCuXPK
%<lU65>:fE$(NrCk5H<$94.kYtGO8JJ3X@BWiSY.ulK!+j)N$SHk@WE.bIstc+r@akkV]QKMpqu^lBB*1kBZ,oqgG[Y_Ac`>I!@[X
%2l/DHFZRkAZH8HV=W'VFEO!m&?HcEK%fk--Kq6Q]aLh.=@3($Q\8^r?(Njao/.G%=c?%$Bo&Z$8#*IYFZd:40N"r2L+48,^QPkgf
%CVLb<.<q0e#;:I%-^Vfpi2OTYH-m%ncYH^P6LJnL/oQ.m<2E>3e]3?60oin^^E1rlGbGKMDg_p0^Ae?FY3L,#gLcX&GI92^>j>d-
%?N"?98pp]<4t5iWETCF&*O-*k>?s45ontlA2O9)l:?T0.2YhB%.tbpf/gf`Z0BT:a#CpQAfGW_j]Cq.l*J@M+E:EiCF`M[W%7Qi5
%F73r9jjmH:Om?:HbY)?f<N-K/eHW97`fYI^\&C+Xh!Z.=QbYj_F+Gm@C/i8^0:uP?Ed,\]oSsaR]Es=^;Tkfg+*OO6e#rYl=NB>G
%0+>K"-6DP+ZLZDCds,c'9t]9=arGHLMhPIB_bR1R;/Hk+@iTdGIW)<?n>7!3?3d6#Y*,WTW7-$pThW7+ilWBagP^dB$,]N;F\uue
%4(B7Uf7&"HKCHGg%c.Me:@==BTr?Fcm\3FiguQU#Eoi45?4=_HWHD'T&3FAAH.RLtXFp#f(Cja[UJ<G,V4jj:GqPme^0KjD+EHq/
%L#*<W:8rA5D=IK6c2BucfnGf?'ouG4:N)l^h=$A_kbXB%0AdqESuTGn*'R_:QZrQ2r6;\]j4kZ#H0P4uq.">`>fu?f&XI\kA?8U*
%1#g`N<n$u7EIM3=]o$@p_T.I=$CMN(lm,Y+Y(h!,jU.9B*+mNNO'1VAONU7mdoMuoJe\gaaLJ[j,K]A-NtK&>1*r[I8ZnFc%HeYP
%'e2.&bao1aZg:mKL!1B23c2i]-s6#tNf7bc4-Jr:p__CO+]BSBS`G[MeSq[b>bQ2%_sFr'EJ_4?11N`:Zk_bt?q'ZW`jMT%#p7`F
%e.CS;V39Z!0u(:PM1.lD_X.WOHF$El*'9s#>u_f]c59(.[A2b&KX`rNmtV4IN(VeiV!VRR'.sQ7V@_=JKbE@s+l1;@dN3RD35Vg-
%*UaPM]ePTSVbEoY'?5D<%uEL?A@OFM&$k&nP6f2<kuLiMrie2tSp'MbGfLrmNIaJWAKmtC0]pi/8G%`TKKF5\lchbQE9r[(F]E,e
%4(B7Uf8bl8&@1.P8;'nh;AomP5+RHsT6u4"1C.E-ek(PTL3+rH8q5l5La2<@dIE5_ef+jNE6:R@5@Md6nW;rJ0*ldA&D!>)'&hId
%h<M#g+Ekaanu`uRmiZ/SEKCI(:8B]\`dBfXM*C`eE+]_j]ic`qNZHQMXssliB8e)(g<oF#6JNLbQuL3HU`Bd5Bfd1.KF>Yf.>7A+
%TgUk`8@Pn)["k1iNj*:ha"rFRhP5f2T/r6RW/UQ&GtIWY?P./\;:_4j'&hIdh<M#g+Ekaanu`uRmi[.o0ou[=9Vh:o`dA[@7%\Qe
%\2/lDhCOls`so"ZUJ?<mOlB'HG'(B,OS-UZ,+L]VdSLePkr^6fj9rns5mVhD:*LZ:UtbZEGu!D^_`ZAM*?FScAA)uE#cC@loFo5l
%)@qZgnUb^m$t6hP-kSXd9"4>knslrUBc_QONfJ;pZJIQ3KMs6r)@Bt<SVKV*I%e&+Lu@,@KF):mUYNkMaCE*1LO"PY4$)4IaElkh
%&PelfkpMGcoGnQm_?JoD'Z,1B_@YZ7($RW)<?;fs`]3Ol*?FSkAA)uE#cCFn1_drW3Y.'2q1<Qu&7N8?Qp`oT7CkV^<LsnJ`]3Ol
%*?FSkAA)uE#cCFn1_drW3Y.'2q1<Qu&7N8?Qp`oT7CkV^<LsnJ`]3Ol*?FSkAA)uE#cCFn1_drW3Y.'2q1<Qu&7N8?Qp`oT7CkV^
%<>rg$(e<GjU#XsPQ1\bT;BhY0bt-Lm%:_U!V'46!;cSQ6H`pkkR?p<$;an9W?^:Vp1W>r/mHAf8+R>#<6o\a%AIN"kB+,s2B+.)9
%1P`3k/<gF\%d@"qPm4KL`fYK4k]d=Ul]$Nb3-?FATePWXGt@SL(PFl&#j]`%M/_gCDKSrn&3FAAH.PebG7YtD3!_iL-W1ii>!8D]
%^n,osQSXF?c7BZ_`X_66=-Wup1WGQ$mDO)O!To=A-o=q'H;"BBc"ROS2((#>bF(X-B,1h@j+_ZVW_.Kf)<$C_G%/$=&95]U&=PYB
%dSS<Ukr\t>j9rSi6-)$l:(S=&Ug$u%qAV@\*,4#"9Qpmhc8Z(rHPiWEIY(TrirQA3?HD6"e;6/k:_4O,Ug%,))T9o<8)?8,KHT\*
%7%?F0",*OHUbidmH9)Rec&&:XEX!,oR>$7>fHK)9WmW#5`]3OlSX@-^g(*/%JKQd\,,Lp)eK!A]?Ve7pb8EYYB,1h@j+_Y+X%Ilo
%RGpcLG%*LB#ib482'B9Hf1J3@(9O0lf)XHE4<&H(a1*nMX:p9,%B3p6:4Kbci_6t-@_-%\EQ19URPL#R:XJB@495)n$b;c^"EA%I
%+>e74\+-NiS?VU!*dQ@49Qq$lc8Z(r;^YH]$<fT`#JcpY+dY!@+O2MPKH<4OgB1:68R^fR4S#YGR-l(bS8f*nVG<pD'XW0I%tHh=
%67um^6(D(+#gHV:D@]!t-\\,;o>nOe@_.1'EQ6ttdggY&8jfV#*WUQX"^]Is693@Y;/!s1b&.'44=7_bE.hLY1#4:739)+e9q=g$
%:IM6,<!9GA=<s4hKcn["9+[Pc,2K-"b%&<6(e<Gj'@RtTLbfNmd%WDdIf]Ns>!8D]^n,osQSXF?c:gnCR^jWu*e5_9$9M`;H.Peb
%G7YtD3!_iL-W1ii>!8D]^n,osQSXF?c:gnCR^jWu*e5^L@V:WEn(NW_%RS)O#=3%g6qTg4X/GOhfRR@mb8E\ZB-nr2c!6BK%mZBa
%YqsC^GAY9?jq,IVe:>nr=-3Pt"g*N7'>P[C96<0j=:f,r#t![,F=XCaJ(U/u:V1dZ\ml:k`]t)=-r?mBTP4!T*WUQHKj;nCJiL)5
%&/mX+>?t5I`6K2ihR+$G*JB5)%YE'WM3NaH<_qlZYU<f!jU<>h1CFA[YsZ+Q<M`"JN,doa4#,PWLcFE;#Ygj\BddZfF<1F/nqC>o
%+G)SZ:_4O,Ug%,))T9o<8)CWediF*t1CbK,TrA\S%B7d$!:7fDE]JaXilj_TB^CguF]E/FrQ^<!6Jg<[4C1S9IJWLrp$i[eo^VnO
%Q[eu-j1da,q78KDo?/TZQa_L3(SaKM&`,_*Hi,pLpaJC5A"I#Z1n?hE]]["Us2KYc]S(NW"o9)#n]CY$j6N-1AYbK8&RW-gT5"0r
%[k8q@^2kUnj,;RQG>J1X+5[^'?b`CArXnK`ELPEl!a.4V?Tq/UDSpbq/H,A?c9#&TXf-L;KbLR1$0N#oj\+0[Hh+)ta-XRpD]L&d
%^(rn]G+PcH_*/R2?(E=*"dAlSl1q$&"C=8Qht>;)6E7#u[PT>[o,2C'g:k+Jq*^P0+&UblnrJksEaBHi>0Z_l.np:t,7!;%A]"FV
%L!h+p?B5.8T%9$Ch?O:P:NAJp&S:q(a%4$1E_YJ,2jXp7k>je(j<)>8B:5^ur-4uYer&&m_23qj,[B)XJ0^K@kOS`&s/HXH5&s6Q
%C,]3%Y"58Xo<BX\5Ka3.B8@t,[GpjIE8mQ3$.j>@+N\3i8!NV[.R^M%>S4L"c,G8b;V6A\#N;<$I51a>,"cLMGWcY/B`1K3Fp>[Q
%l>l3<2?LA6a/;6fAEDh6ZT'rCHsd1JcNefaFV[TX@u#.VX#f(qAqD8mg'IJ65\(l;_=ji@V8$`_iq\QZ:X?3r8G!<6`&d5Fg2TKk
%PuXCKE&5D'Fm]*RLENg]JQP"K7odu3T_N4_2#W(8L>LhXo'.cjC<$hK<`aG?_p&`_g9oDu*J:j_%RTP]-;)tu&jLf"V4VkGcnblG
%Fk4[Aj+_Y+X#fX-R1YI\o:cHthB<0*qn<3]5#n>QRfN!-G"?pcpI*@aKWs_mP\A)IkuLl.qSUPh8(tA7n$a*>:j!`\g8@W/ZkFFN
%QX2]K8J_@i@gK'Z6@!b@OD]2@Va&rFEMQl%pYIXGWr(d?5W^Xu#^u5uKqG5pcqh%,kF"UqFV[TU@u#.VX#f(qAqD8mg8Xgq!t\Do
%F]t/\?FZck[6,l8]Y0)oT/Z\`kP6/18tC[Am+<K;lDdU/\/F9s]6<>M@t7It5a6\s6qK<<iMUMnqT0NF4@9CLc9b*GglP\tlIDJD
%A2pouSTsT77+?2fA=kVSdS;Lkkr\h@U^ML?0o2d7:6$>RUtbB=k95hQ&+[fQG2Bo"&5^D5N.%]o8N24YVsVk&'/%p_L(HP>Ki78I
%VfWlll9$?II$."R[F=OaK6TEe6L7Vt9#%Ne_"4[7G(.kn43n`FW3[%mSY;'a)a<7D,HQ9S8(=rQm[\oJ3Y!A#CdtA!RfMs,FiaB8
%(?@S6#b0*tM$,mb7Cp`MFe01_L,dW,*YIIW`upi=NXGjaP_kQHK"k+=iTAfB&if>\O^pNEP$_k%8@S,ic==`9&4bH^F7('$?oeeW
%lVf-&g'R[@I>=8`FMZ3XL2cD$97!/.,2L8B3faS+6QBgl::]8j%)LA3&71ta;:84dGI@rljsOGBo8Fhl3qJM?B<"M3nZ,E7\/F9s
%]/I[B]8/f<m[Sm3ZZW:r]i2cAg&;@65C8'hk1N?8PKpN\f9n)9D>:-[*c>TBZ`]j<mgqn80b@T^.T%sS@.,n)nFAAgJEE7dLiaET
%X^d-.X/e;[iF[ljmFl::NWB8#"#/gcU<rjE#\USsiM,!T(+RT466EO17N".\>?03f%Q=J06.aC;G65Y%3/AtYR4)bsJFiCR14%@P
%.aAlaO'*j(N#U3IXQm/OAk"bcY+9+k&4DS!&5ZsH?R=M2Dk=DT78LDn`B@Oh4D(:713Q3t\uO4$DMC.!cLD6HDoWuFlmW*_ns"uo
%FojTuhk?c)A.^37(r@<":c]IUUg%-Tkmo^?*,4#"1#J"ZL-*C?3-hMl8N/r)3GAPOSnrt71PATF/<ilK%I$noFkXaX$qJmV1X$_'
%TOSMe5a+3F;sA:k@.P?QKnu>lUqjo/G7lrKSRaKn81beRC(E*ES6=H=0R!dHa#F>O:R*?m-<TlH*?KOD"XMA)66*=./f?aHg[J5+
%+lVRI4OUC'?g\a6Nc>V'Sha0k:8$b64#HT*$V$X@KK!M:<:\Zjh8ZWZNsRb;jcO`RoQ%tpDN'3Ens"uoG(MPHhdN3+>p/-c+g`s3
%AWiH2dV\o^o9aLg=WV;/%]aa]d\SqETQ9>prYLSA9<_1K6!l!FR*gj9E%+<*,,h#',M`j+<NlCD1W5E!mAOd?+Bs_U"R;5.P'4^G
%:>Z(Z-XDPUN$2j`o+F<"W^sVhX%n/S)<+1K?io7u`unNBKDatuM3<$KY>3uk?GR<975K[KV9DU1Pc5k_`ihH%iF[ljmFj8E9Hd[*
%W1d"B#Da"/+RCS:L=#6?#i_RE'nV^V:A>M^Ug%!PBb*-YlrhpMWHJPFV&7:FJuP]5;it=U[Y)4f\?M]q6D.3lMOn:4FK;H'rS_@E
%,OO1seW)qm'F2b/.2+#pKNk"]"2%C?OJ3U[OAZi$SmmIsX/e;[iF[ljmFhTkN^9BR#J&;4'.*%!>+NB[]2#qVU)?=K;AP.\@Y]'+
%X#g4<Ar%]!g@<[Q6(SbqWRE:0-1-@gS\>3<::a8r)+/@@((-UALNKSt3rQbL6&o;C]/DYAn]Uq'gMaj?_l4l<SUPmqcLgnhU-*l:
%5C`To,KT0Aj1Y.`0:_@OrM'nb7:1`pRsHMl:+mEK'T75/1d9C])/bOiH(RiFM:*!4:8^>kqZsHQ[2[?_2,R1I63epP(5\QA%nb"o
%:00F&q%7S+*JWHFE.QFLKheO6'KZW*H8Q\boefZu;1\n8?;"[$a(0jf;S*hcPA0hd2HqQHD'lMMl%h*m;]n^3aN:Jhbm&3:N>#-Q
%`5,$K709CIK@0cNc?$dXB6=?IpV4O&'3q&L7$1DsLfE^d\E_U`(t\)O<_en;Th2FVntu#RNRBg;cJu]s7s5#?)jd#Od\M7K5b(T+
%.!?5,okHIBlYEA*U4/gCP?s0c9kSu)S[7<<%\.cS8&2N@W<k1N3hjFSP_`crJQ8n.6b'jB$7/=6Yb]n6]sR#4&>aGKSB$0oSK@ma
%:8R[U>a1J67<h`p3`Y_W/#t]Q`$&Bh&*r/II\[2nSRnOmGTkmXWmVi("uqdK%8-!j`(2To2Pj*Crg&[HjgUA2lhna(%s8)M88"3`
%.99!KR]83"Rh>@mCM-O,""@+VA53"3Wg%saW_VS?>d&7#6h@oqLiephRc9$C/#l3c\=):]]65I-;\1.l6.D,[Oj[&se`f2LlP2'p
%W)F6OSQ0^-=<ZL8Wm][iRG`l^YBM[hSUh3KY=XhQP_kWR!if#U!F4e6:GgQ="<j=I@]"Anh285\*H#IK_QFnM]tNNZOQ%Br8tALe
%.%Dc*](2t)]TAg^+U%$\P;:)bkuLcKmVju"&U*P(C8W1BlHB0gVS;DloOT+:FkR>[H=[I$l3IHQc8$PA]T@"g<TsrO!usnaNhc<M
%?\"AbBJEFlZQnRK4I#-D["iP4hWr(5qX,GSFI(%9ie;J)W_.KFRGeF`FrIbe!$K6Gb*4ZDdSD"9BjA+>$5Y8C)$D%PAKn!R+gkq3
%BhgT2S5IlJUNQk$UGrOI;C>?\$DTYQLMa`aKaW#1ihNhP_A"MrgYc(W6=].f4JK!L7I:MZ7raVFV+d]W'1?s]&))?+$P_k7!ftV^
%!RpR:\d_u2-\Ru8nHcaM'X^jN*lUF`PWFs'%:);c0Ck:.=1hq7:*KDr/;#WfTVL9HO2qF?b/\`P>s!ns&]g!l+CXR'K2VOPTK7K+
%Cq[+X$$?A:7qYmk]TdC[h<(l_"2`:k8(cK,!mU'G6q?'@!AL?FUbicLFZL&b3r;5VU"L9G*1^M0QSMF6gZVX_7_"lF#eP6i[8W/,
%`Bh5&3g%ienC6\b=R-\T5c@Te3'+qi/nLbJ\'_8IN,USj&U*OYl>:kZE"iQI;X-YB6_RH3,*ZiUie7V[$K4He=L+bs'^7N%<P$)m
%$qJsX;5i;*PT+b/'Y;e";Pe8p$E)0e?_Gtc7o18VD8TbV1FgdMk)"1!]IM1bAqW>4g?Hf+!+qCD*j1YM.c&*ta^hjoOE3<J`?<DI
%>]Q-e<+:Q'/#c-V\CpnEF7&I.#9YXUK2<k:,,LteRF?F`c7<3\8>dR_3NFDTYsQ%P<2I,[1VjZGmHeCs+>&G&9VpLn9'I]ojtn-D
%o1Bf)1)oGoP-[iT&hg%b;,t3Fbm[+p3BmL5lkG+!h1l67Ue[^B'I%TZ&'6i0#VqK:+fs`UPGc>,kuLcKmVju"&U*R&jm<mr?qCbP
%.Oc#[r<14&,R'5"$5Win)$H4pA`AqV+l-n5dN!-o323Pr]Z^e98pZd+;!DDO;GWM;1$:A=*9VHR&dHd*'iE(U,u'42;JSamjtJ$r
%)0P?%AS3,7M1[o:AKmtCi0_u<0[;1S!(^`6:i_j.;rWLQ)n[Xr#WJC9&U*QoAZ$Y!M1[c6FX!ZUd$W:-.*a>Lpd_4n:3)ZB;N@*l
%D=jhj,M[[08(b4JQ^r_u,S&7ee;9EE!b5!gJN0iX_&o470ZdHE9$'J`DPL:p)<'_A4Mn6A.dB$p(_ETg_Eo707EQ3M=JIl+%&7nb
%-\h'ZcnQ6]/<^db$gC\kQ0rTI_\%(Z9Mq]1"b_N0&9T1nTqFm(Gn?f&?Jlm&&-us8#n#XFF=X@`GIX("#eP8UW)F6/_Eh.W3g%ie
%8>GE3K[LSgCl_L#"#S3^K^_=>'ih*Bp\Q]#08*UM;=s\GbMVVmPV*.sU8ZEH9DeY\VEDS]IJEB:hM_+&3.1Vn;h1T<0E3*Na4H2F
%5*rQCMFJ3o)P\^FMfps851B4nDU+d7G=>EQ!KAKX1^0W#7^T5L^e%V#+?lY4#rKhuKs4I[T\?c,'<N>_B*W.lRj8dQ)GsUM8joA8
%BNMg>PHIGBI7t+]1lDPT_?YX$8lnMm1-M8Wk"ENE2i0'l1nqA('Stb@3OPp<i(7"=5X%XI$T-&bKs4Hp`bP)jE8kRP$.hW]-+PGN
%LuLc!*3%:U[&`$P8b7!Rj^[ks5dLl,L`^OM8$+Z["=G8EO`5/>;3K*(nbE/<1aSmC8@5GR!(p=g?p=BgP6RIe&46k'`DN\\"2ThL
%FsL<3=-Vd_5U-UE9o18T'('EmK[LSaS<(dE"3p!ma:L^<ER\ap5]EIj,N3G/L[V^E[n$Gnn`ZQ.pJ9#NpZ_KP+*eRsLc3#iE102E
%9CBiMIJWI42P.tDl)39KA/#9N2NIqf3oBP2%4:B/1?fm0,KL/\CEl`+].!5C82Q1\<,b"rKbjZCF\kE9.Aa$gh;Mt#4mUg9U(0Ke
%#6Q+mIs3Bq:;gj.CsmtEf@+*m!^J:>'@KW)AJJni2a\R!f8^Me%.ZVB8-r-@P5Re=^&o`W\tD2(K*W%Si.Q2N8l\<k)`&]Y=m+TN
%`25m5!:gj29SbHdCa\5L*BK$94NX0'+UAVe!JRmZ8m+U:_p&`_g9h#O[s)'_+<9HqW"[:%,4_<USi#\`p1+S?J63(+Un(E+.afAU
%L,dVaSLEb?Uk!jE+&p=*I?_D1UJ93gP9sJcT$/;g&.:dXZr9Rs7@M-="@ptL,=R%FQN?(T>#L0Clq"jJ8":Ch!(ui\+1N]%rh4jE
%#V2^A;T^K;*c?]ld]T,il561E0G"tn9I/AL3,K$O9t&D3)+$#"('4m.VI\55e"(Ae34#b..d@S@J8gSbU/!!2M)]ng;4;S-Hnkml
%+P&gdl)']u/+SY=bQiE(>ru'9+c$0X+=opK8@B1Og('l7iPP>"#Q]KY#VLd9Us*/-B7uaMnjpB9XJfWj"2[?-LcU[h'jZqTnj5s4
%/rWTG&/^4W6OYtSPft2.7td-<nqal#Y,F,f"N!H0a:/D$gPImqLJjRS+ac%tTKqk&!":kcV2S`C7td?TNjQ,E"DcI@8-6?D!\Zs4
%8G3^:q@9C@k)bBpGDB^[Ql!]&;cV!4'mWE])<+3!G-\&V&-]p:@#-k+lmLfb*DU=sL%38%!Wt/1O<LO%Pj'^hP]/FsO`p,*d;>3]
%('k/%+mMJ$T8;hJ$7\c]5X$&QBHZF@1ZVN#14;UF_p&`_g9n1Sh)H)QEjHHjaPBajCmQWsNaG>RfbP:namNSV+Jo<!j@kgoHUYN`
%bm\sM[DPER!^mV"4Oap2<3hpK`g/!>'&0-i4rHV1+;R9Ql)']>MY)Xm!KNggVi*S:E?H6SL8Yd-INhPE@?i0F8=ti,,)CAL6b4_C
%WZp8YR1YI\CWD>o"F2+0Uk[[.<jJ9Pdro,q#oCsd>Nlbd/;+tj:+9`hBb*-i*,4Ra!T^+f&.!;H*c-WnOmFIToGq+l!sM8gN$1_'
%$NZ$i;bC1]g;D/H8(t?Q7^jV-6%UeP)kp"OgPO"N$FJ5l$gNp!KF)*2jH+7OWN&L5\=)<s\otq=6O4=c_%P[f-VI&l>#Ll#Omkta
%FqWLVB.QqHX90Kk:!'CIV`W+YE+WB;@alRB"Q:I`7%$TS'62_9YVb;?qd]u+Jli:?Un(CqYK/N:bpRe4>ruQG0aIsA+?Do]8G3^:
%q@9beksG8X%)INt#X!cGUeG-XVhCPcnjpB9aJ`U1$Go)PLcU[b-fXb=A80HqpW48h"gJVbaJgY#qMIB]gjGDXg9iXMO&)/+GHZL]
%U*R[5dLskZs5pc1VbWJS7sf/5W8d@4qY>gS$(g\XCA7Y2SAV0STo+uN-,q?jocd^ZNR9S3k*qq9q<:Ff=bm[O-)NpAqhTL))aNG@
%'["8IJK\VC^][[fWMhe9@7BcX`q][!n3O?Q6]<EJ0dWRH8]7[g+<"=[i!s@SM3p^6:#LY3279K_ELEuUE:Z+Igd+9M6]<EL0a4<4
%&"_e2C`n]f:Ik^X#DeaY5SI8!AB]r&1pGtr*?!JK<[>:F`/%;)r%tD*8]7[g?lJY./*gU:+;(pgCk<aMPtYD%*XYq1\0L%fk_`o;
%M;WFVDIQ4+Z'0uF_Z;Wt:n\p#!@JR9b5`n,UIqDc3"H0C*o)lt5AoqFS-S,&:j@rEVb*\5lDX:<jQSfL@@V`.P:e6DXQ(:+2l2g?
%V*F<?Z)9_pgcG_$a>*0,h%*M^oFl?cch[OXbL(MunNA+0+XcO..CH<.%:Wt/,O]X5hEcBWNe9jde;9EEU/'l3_4Q*8rluWK->+?3
%l+/=OX=F1.Rj!g!a.[k#i%_dW5<2E89Vh:oFW/RD4tcmWIqK0M-YFU#l.RSoXssliB8e)(EU8.$$0%Tt#ER?5'.FAZj[I6hr5k9-
%n-gKgjXfIT>s"n6<M`"JN,doA%c08Q:Wn/,S0N/`#>t=YLcB87&:_RY#Wu&,=ZHjM;:eRBAQ<FT4#7jbO/)H`(OB3//!`]j]S/es
%b?ED@Voq[2]_CM!4E$!8/S?5>lIm\pXssliB8e)(EVSBVE*eQUL[(+\P^]?%iu[;X\f??8$ootR+fFV:.A^k1ktaB=S8"&EpQ!&l
%Eu[;CVbX$E'QlI_C&[2:;0W<(OZD_e=4^0Gj&b>&NLLIM8:)>lG75O\j5@a7AKmtCW7-":o-[k)_D?q:RBr!=FmL;pr2Mk,m!P6l
%hW"mUKCI5-#ERH8'<,@$<;Fi&M>lSZH$BOUK6%gRl+1@nl1bj99R-@eO0HYJI&Go-3=[+5qd!2NrC!3jF/D1\EZCZ"jP69/d@@@$
%<2E>sQ,eQK0oioe0mj5b_7AIE3F8UYUbid.3mXchHO1aLG;I(!F!ep&\oUm:"&S)N@:tNDmr8or6$RL3K*UbmM3Nah:?OXhT6rX3
%cQI7OcGV\NGHOPd!3/.1m#5rF4c\N?)bV0Bj5:M2FX!ZUW,+)3Z9S/*.%W`coULbX`pR)sq>aK/&3FAAH&lIfDDlcZb(bnrX6f+>
%b3i'Tfd4e?mVF3282OOG*hBTso2XV2>#ppf`m#&bg>a<aA+8[r#7jqmgepa/;5`rSlV>)4M0A(,ZVqW[_Q'/)l`/AUG/cN4*_3IU
%KSQICi,Q\-SOdHCl?&V]?$7>R'[7b@HHJS"=LD(B>u_f]c59(.j"U28$TmOL(jO+oR7QQi.N>W4m7t54Me3AX5@l"9XL]jgX=F0W
%B8Rr$E?(H&j8d`dBT?6ON`PFo[-I"Rk&bgU>B;WiD-;or=iWP'DFu>sFo'"8&80_W5dk1l#SdRT=t(+6rC!3rF1sa+E\s4>j:%<-
%S@!%/eFBU1S?VU!*dNekfabkd<#e#8V,!gC'QlI_$1HruiFiFX;cFNQer!b/4oeTS'Qu[d,O`?HqrMb6q=__hqc5;K40W)kNh#9n
%cSt+QdGt+bpT</9^XhPb]6E`#eF)F:4aMF#e%1lfgT&N8fn#-R;X:@2TQ\75o'T_i[m@7-WWP>eeqoWGU/'mVRs_3)6-SJ+f$+\@
%gltuCQ2Y_I`0#6#WkFCC]i?**J[J1IoFl?cO57`Ih2HoueL[42f[qX\Xsslq7uS\]^/]M!"FI11YQJ[3880L;F<8'9Qb"%;H`L:/
%40YtgC0agXe;bA9hL2Hu2@-`mFdP<obG_3W`G%D?'.u^0"nl!'E->W!Vpr#P[&4o^Nj/C]D5Z=K.]PS7e>ZtG<Nj\`GNEUG#N=NS
%(=!D+m$([TPm4W@`fYK&WkAjN2HMbD#M(YmdSJA,>dm:kWYkncX'%DDY]3T6fr3A,lmB]>G2K=5NIecC*S>qN:8B]\FZPT>j@e;;
%@Q%;oDK]FJVUY.:nsj[Z@30.WXkMMHfNZmW*E^KQ8j?1Nn^pRKeBJi_>Kt%<J^lANa03X,dZ15NjP@:[DhDG9<<m\TXV3,m7@h_6
%2u-?1K4'$`$a2_GN"r2L8)uDh`PXgTmT[*..Bp:]"$<a<M3NI`:>`=GE2f<UYd`maG$m+*V+tB_a.s_1NkG6im;3F$Xm3\3XE>_`
%Tr?Fclm?*)Ae==2An&(KS%1$A!N>RbZm3SQGMfF6%>)8n*S>qN:8B]\FZPT>j@e;;K"]].Cj'2B=/A(\<M#Fu`&R>U>ICq+Yd^V7
%40[:mP_Po-kHUM(WLH2X\!i/u%W(:-e-DX=KA$ptaLgn3FV*m_+hH&hR7d0OokHU,=1VFT$uR5"iG:?i9rV](ktaB=*,5-fWK+eH
%,ZH^kW)LfmWa;7Jm`O.m%Y?j>XIG3H\1+7jeEKc<$#uiuGGK+d?jfO22OZ01.K)Z*`a^st;E&)n$RlHrUFC@Y*PX)M8NWO+Oa#]F
%\da6C,TYNNZ;.2P'QlHth;h5b%"^(,/=_\Hm3;3(W:Hakj*;\kO,]OIptia^[/I+.W7bO'pYkeb@\rhV4T618J*YXO^LI!.41lLe
%07ON&o,#N[QZUu<E?4p,\gb%g.fJ<qLa2;l&^rJEF+T&A/!PmTI\KTtZ($!;Rk_Eoi^3??Zr:^F<>sAI(e<Fm,Gp*4k6)%a=/Zc]
%%7Qi5@lO3]2hQ)4`.dQ]BW'@kW\gXp0oioe7SF'Gjp;OaYY[e8m3k`anX=DGROPafi^3??Zr:^B<SGo^$qJr[,:6@1cH3$<?^Ws?
%CoHXLH0qb^Xm7+8F5fO[=0tn@>u_fmNYk:C@j@k'@-[ptpK&aV.K)Z*`c[bmWL>QOF5fO[=*.A5fr3A,lmB]>p=P2c(u.-f_>P,6
%6qTgDVt8P8^=:CMfK+!mq^]6,Fo87%-ers68)!!M<la,7,96XX7%$U1-gEN0]8;lc)1u:T=Qn?allr9De7gU[`&R</?S=/?^CZ?k
%D[fXBP5S@n)NWX<Y#QK0^(7`8D[j9,[B(kVBh+%*mIBinA'"Cq;=gnul;Y'_W`SAk]CNA4KCB8"lhK&(Ro7BuSc3`#&80_WlUAkP
%pAl93ej,WokpPaQ*kR8q\f$.X#@,?Z#47X9IT;u'G!+"on*sHWo'`CSo_@6cJ#aVJ0?]CeU^qD$ICMl;^Nk*s^V<`44alq#p2+0:
%TAG"frkn,1rePZCWHK<Nb.9$uWZp8-7YE#PnP7m`p_&O<YKE)dA31C$mC5m#Pg'be#Bh8/b1\;@X<R&r7Yi;VnOD=hp^2t40?Ve$
%A3U[(n$l*'Pg(%m"*PjVakA2?X<R&r7Yi;VnNPb`p^W5b0?TMVYoC)b3`ZnG2)>?lIpL-"Z?Aj>W^q3BOl2%A]M3#CH2Sa@0?I.j
%')beBqQAS<Y%8V@hL8bO40j$%.B?!d\e3pmHi1=r)"R!0eGKrL3gJp,imi8/Y&l8])#X'h3dq>!VI\55e"((aiQQUq/A-I[L-=pr
%$C@,%p@fXNPs;pn8KT#P^&,0b._P\u)rEion#+%G?dJ7iqff@jh*2WZaA9Ek9!,-dKA'%W4m_^4O<OCO4T@B*m$(=<.uMerX<q%A
%AchrG]9&Y-m?CdTQ1hSS#^b"O$2jegYFaYLqDW?lnA"DkrO[RSqQ"!%p3.VYpeO-Ra*6G@pCBLemGD6e5Q(#K5QCLIHB`mMqL<E*
%s7c)VNutfS:G8W;+!:O/`u"E\J,fAG?[l5Wk1st4I.u[=jH'?$[m0ihO+1J#s7n<4IfIlH^\PJpg)p=WGJF165JHs*2m9:^pfRLh
%DgqZ>hn=C6a2dbks7Dd>J+Ku8mpH(Sl`]0Zq<c@Tr8GEiJ$&_8?bcWi&-)@PpOE0,09,tqYM]BC%r]2^n]/EBr;Fr+r85Qpo]Aq6
%rUAF2s74VLDuTUJs70MMb0*#f5Ob^\rR8OZo@I@J5AcM:A,~>
%AI9_PrivateDataEnd
